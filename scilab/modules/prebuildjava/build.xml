<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( https://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2011 - Scilab Enterprises - Sylvestre LEDRU
 * Copyright (C) 2012 - Scilab Enterprises - ClÃ©ment DAVID
 *
 * Copyright (C) 2012 - 2016 - Scilab Enterprises
 *
 * This file is hereby licensed under the terms of the GNU GPL v2.0,
 * pursuant to article 5.3.4 of the CeCILL v.2.1.
 * This file was originally licensed under the terms of the CeCILL v2.1,
 * and continues to be available under such terms.
 * For more information, see the COPYING file which you should have received
 * along with this program.
 *
 -->
<project default="all" name="build-all-jar" xmlns:ivy="antlib:org.apache.ivy.ant">
    <!-- Call World
The main idea is to build at once all the var files
-->
    <property name="target-jar" value="jar"/>
    <property file="../../scilab-lib.properties"/>

    <!-- Order matter : fixed order to avoid dependency handling-->
    <target name="all" depends="scirenderer, localization, commons, history_manager, jvm, action_binding, graphic_objects, completion, console, renderer, graphic_export, gui, core, helptools, types, scinotes, ui_data, history_browser, javasci, graph, xcos, preferences, external_objects_java" />
    <target name="clean">
        <antcall target="all">
            <param name="target-jar" value="clean"/>
        </antcall>
    </target>
    <target name="test"/>

    <target name="scirenderer">
        <condition property="thirdparty.dir" value="../../thirdparty">
            <os family="windows"/>
        </condition>
        <ant antfile="../scirenderer/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>

    <target name="action_binding">
        <ant antfile="../action_binding/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="commons">
        <ant antfile="../commons/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="completion">
        <ant antfile="../completion/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="console">
        <ant antfile="../console/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="core">
        <ant antfile="../core/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="graph" if="${build_xcos}">
        <ant antfile="../graph/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="graphic_export">
        <ant antfile="../graphic_export/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="graphic_objects">
        <ant antfile="../graphic_objects/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="gui">
        <ant antfile="../gui/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="helptools">
        <ant antfile="../helptools/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="history_browser">
        <ant antfile="../history_browser/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="history_manager">
        <ant antfile="../history_manager/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="javasci" if="${build_javasci}">
        <ant antfile="../javasci/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="jvm">
        <ant antfile="../jvm/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="localization">
        <ant antfile="../localization/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="output_stream">
        <ant antfile="../output_stream/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="renderer">
        <ant antfile="../renderer/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="scinotes">
        <ant antfile="../scinotes/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="types">
        <ant antfile="../types/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="ui_data">
        <ant antfile="../ui_data/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="xcos" if="${build_xcos}" depends="javasci">
        <ant antfile="../xcos/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="preferences">
        <ant antfile="../preferences/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>
    <target name="external_objects_java">
        <ant antfile="../external_objects_java/build.xml" target="${target-jar}" inheritRefs="false" inheritAll="false" />
    </target>

    <target name="download" description="Download Java dependencies in thirdparty/ directory">
        <property name="thirdparty.dir" value="../../thirdparty/"/>
        <delete dir="${thirdparty.dir}"/>
        <mkdir dir="${thirdparty.dir}"/>

        <property name="thirdparty-main.dir" value="../../thirdparty-main/"/>
        <delete dir="${thirdparty-main.dir}"/>
        <mkdir dir="${thirdparty-main.dir}"/>
        <get src="https://oos.eu-west-2.outscale.com/scilab-releases-dev/prerequirements-sources/thirdparty-scilab-branch-main.zip" dest="../../"/>
        <unzip src="../../thirdparty-jar-main.zip" dest="${thirdparty-main.dir}" />

        <copy file="${thirdparty-main.dir}/jgraphx.jar" tofile="${thirdparty.dir}/jgraphx-2.1.0.7.jar"/>
        <copy file="${thirdparty-main.dir}/flexdock-1.2.5.jar" tofile="${thirdparty.dir}/flexdock-1.2.5.jar"/>
        <copy file="${thirdparty-main.dir}/jogl-all.jar" tofile="${thirdparty.dir}/jogl-all-2.5.0.jar"/>
        <copy file="${thirdparty-main.dir}/gluegen-rt.jar" tofile="${thirdparty.dir}/gluegen-rt-2.5.0.jar"/>
        <copy file="${thirdparty-main.dir}/jhall.jar" tofile="${thirdparty.dir}/jhall-2.0.jar"/>
        <copy file="${thirdparty-main.dir}/jrosetta-API.jar" tofile="${thirdparty.dir}/jrosetta-API-1.0.4.jar"/>
        <copy file="${thirdparty-main.dir}/jrosetta-engine.jar" tofile="${thirdparty.dir}/jrosetta-engine-1.0.4.jar"/>
        <copy file="${thirdparty-main.dir}/javafx.base.jar" tofile="${thirdparty.dir}/javafx.base.jar"/>
        <copy file="${thirdparty-main.dir}/javafx.swing.jar" tofile="${thirdparty.dir}/javafx.swing.jar"/>
        <copy file="${thirdparty-main.dir}/javafx.graphics.jar" tofile="${thirdparty.dir}/javafx.graphics.jar"/>

        <ivy:retrieve pattern="${thirdparty.dir}[originalname].[ext]"/>

        <delete>
            <fileset dir="${thirdparty.dir}">
                <include name="batik-*.jar"/>
                <exclude name="batik-all-*.jar"/>
            </fileset>
            <fileset dir="${thirdparty.dir}">
                <include name="*-tests-*.jar"/>
            </fileset>
            <fileset dir="${thirdparty.dir}">
                <include name="hamcrest-core*.jar"/> <!-- Included in junit-4.10.jar -->
            </fileset>
            <fileset dir="${thirdparty.dir}">
                <include name="httpcore5-h2-5.1.3.jar"/>
            </fileset>
        </delete>

        <zip destfile="thirdparty-scilab-branch-main-new.zip" basedir="${thirdparty.dir}"/>

    </target>

</project>

