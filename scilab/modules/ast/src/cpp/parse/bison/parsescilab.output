Terminals unused in grammar

    "line break"
    FLEX_ERROR
    "block comment"
    FUNCTIONCALL


Grammar

    0 $accept: program "end of file"

    1 program: expressions
    2        | expressionLineBreak expressions
    3        | expressionLineBreak
    4        | ε

    5 expressions: recursiveExpression
    6            | recursiveExpression expression
    7            | recursiveExpression expression "line comment"
    8            | expression
    9            | expression "line comment"

   10 recursiveExpression: recursiveExpression expression expressionLineBreak
   11                    | recursiveExpression expression "line comment" expressionLineBreak
   12                    | expression "line comment" expressionLineBreak
   13                    | expression expressionLineBreak

   14 expressionLineBreak: ";"
   15                    | ","
   16                    | "end of line"
   17                    | expressionLineBreak ";"
   18                    | expressionLineBreak ","
   19                    | expressionLineBreak "end of line"

   20 expression: functionDeclaration
   21           | functionCall
   22           | variableDeclaration
   23           | argumentsControl
   24           | ifControl
   25           | selectControl
   26           | forControl
   27           | whileControl
   28           | tryControl
   29           | variable
   30           | implicitFunctionCall
   31           | "break"
   32           | "continue"
   33           | returnControl
   34           | "line comment"
   35           | error

   36 implicitFunctionCall: implicitFunctionCall implicitCallable
   37                     | "identifier" implicitCallable

   38 implicitCallable: "identifier"
   39                 | "integer"
   40                 | "number"
   41                 | "float"
   42                 | "string"
   43                 | "$"
   44                 | "%t or %T"
   45                 | "%f or %F"
   46                 | implicitCallable "." "identifier"
   47                 | "path"

   48 functionCall: simpleFunctionCall
   49             | "(" functionCall ")"

   50 simpleFunctionCall: "identifier" "(" functionArgs ")"
   51                   | "identifier" "{" functionArgs "}"
   52                   | "identifier" "(" ")"
   53                   | "identifier" "{" "}"

   54 functionArgs: variable
   55             | functionCall
   56             | ":"
   57             | variableDeclaration
   58             | ","
   59             | "," variable
   60             | "," functionCall
   61             | "," ":"
   62             | "," variableDeclaration
   63             | functionArgs ","
   64             | functionArgs "," variable
   65             | functionArgs "," functionCall
   66             | functionArgs "," ":"
   67             | functionArgs "," variableDeclaration

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

   72 endfunction: "endfunction"
   73            | "end"

   74 functionDeclarationReturns: idList

   75 functionDeclarationArguments: "(" idList ")"
   76                             | "(" ")"
   77                             | ε

   78 idList: idList "," "identifier"
   79       | "identifier"

   80 functionDeclarationBreak: lineEnd
   81                         | ";"
   82                         | ";" "end of line"
   83                         | ","
   84                         | "," "end of line"

   85 functionBody: expressions
   86             | ε

   87 condition: functionCall
   88          | variable

   89 comparison: variable rightComparable
   90           | functionCall rightComparable

   91 rightComparable: "&" variable
   92                | "&" functionCall
   93                | "&" ":"
   94                | "&&" variable
   95                | "&&" functionCall
   96                | "&&" ":"
   97                | "|" variable
   98                | "|" functionCall
   99                | "|" ":"
  100                | "||" variable
  101                | "||" functionCall
  102                | "||" ":"
  103                | "==" variable
  104                | "==" functionCall
  105                | "==" ":"
  106                | "<> or ~=" variable
  107                | "<> or ~=" functionCall
  108                | "<> or ~=" ":"
  109                | ">" variable
  110                | ">" functionCall
  111                | ">" ":"
  112                | "<" variable
  113                | "<" functionCall
  114                | "<" ":"
  115                | ">=" variable
  116                | ">=" functionCall
  117                | ">=" ":"
  118                | "<=" variable
  119                | "<=" functionCall
  120                | "<=" ":"

  121 operation: variable rightOperand
  122          | functionCall rightOperand
  123          | "-" variable
  124          | "-" functionCall
  125          | "+" variable
  126          | "+" functionCall
  127          | variable "** or ^" variable
  128          | variable "** or ^" functionCall
  129          | functionCall "** or ^" variable
  130          | functionCall "** or ^" functionCall
  131          | variable ".^" variable
  132          | variable ".^" functionCall
  133          | functionCall ".^" variable
  134          | functionCall ".^" functionCall
  135          | variable "'"
  136          | variable ".'"
  137          | functionCall "'"
  138          | functionCall ".'"

  139 rightOperand: "+" variable
  140             | "+" functionCall
  141             | "-" variable
  142             | "-" functionCall
  143             | "*" variable
  144             | "*" functionCall
  145             | ".*" variable
  146             | ".*" functionCall
  147             | ".*." variable
  148             | ".*." functionCall
  149             | "*." variable
  150             | "*." functionCall
  151             | "/" variable
  152             | "/" functionCall
  153             | "./" variable
  154             | "./" functionCall
  155             | "./." variable
  156             | "./." functionCall
  157             | "/." variable
  158             | "/." functionCall
  159             | "\\" variable
  160             | "\\" functionCall
  161             | ".\\" variable
  162             | ".\\" functionCall
  163             | ".\\." variable
  164             | ".\\." functionCall
  165             | "\\." variable
  166             | "\\." functionCall

  167 listableBegin: ":" variable
  168              | ":" functionCall

  169 listableEnd: listableBegin ":" variable
  170            | listableBegin ":" functionCall
  171            | listableBegin

  172 variable: "~ or @" variable
  173         | "~ or @" functionCall
  174         | variable "." "identifier"
  175         | variable "." keywords
  176         | variable "." functionCall
  177         | functionCall "." "identifier"
  178         | functionCall "." keywords
  179         | variable listableEnd
  180         | functionCall listableEnd
  181         | matrix
  182         | cell
  183         | operation
  184         | "identifier"
  185         | "integer"
  186         | "number"
  187         | "float"
  188         | "complex number"
  189         | "string"
  190         | "$"
  191         | "%t or %T"
  192         | "%f or %F"
  193         | "(" variable ")"
  194         | "(" variableFields ")"
  195         | comparison
  196         | variable "(" functionArgs ")"
  197         | functionCall "(" functionArgs ")"
  198         | functionCall "(" ")"

  199 variableFields: variableFields "," variable
  200               | variableFields "," functionCall
  201               | variable "," variable
  202               | functionCall "," functionCall
  203               | functionCall "," variable
  204               | variable "," functionCall

  205 cell: "{" matrixOrCellLines "}"
  206     | "{" "end of line" matrixOrCellLines "}"
  207     | "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | "{" matrixOrCellColumns "}"
  210     | "{" "end of line" matrixOrCellColumns "}"
  211     | "{" "end of line" "}"
  212     | "{" "}"

  213 matrix: "[" matrixOrCellLines "]"
  214       | "[" "end of line" matrixOrCellLines "]"
  215       | "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | "[" matrixOrCellColumns "]"
  218       | "[" "end of line" matrixOrCellColumns "]"
  219       | "[" "end of line" "]"
  220       | "[" "]"

  221 matrixOrCellLines: matrixOrCellLines matrixOrCellLine
  222                  | matrixOrCellLine

  223 matrixOrCellLineBreak: ";"
  224                      | "end of line"
  225                      | matrixOrCellLineBreak "end of line"
  226                      | matrixOrCellLineBreak ";"

  227 matrixOrCellLine: matrixOrCellColumns matrixOrCellLineBreak
  228                 | matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak

  229 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak variable
  230                    | matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  231                    | matrixOrCellColumns variable
  232                    | matrixOrCellColumns functionCall
  233                    | matrixOrCellColumns "line comment"
  234                    | matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  235                    | variable
  236                    | functionCall
  237                    | "line comment"

  238 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak ","
  239                         | matrixOrCellColumnsBreak "spaces"
  240                         | ","
  241                         | "spaces"

  242 variableDeclaration: assignable "=" variable
  243                    | assignable "=" functionCall
  244                    | functionCall "=" variable
  245                    | functionCall "=" functionCall
  246                    | assignable "=" ":"
  247                    | functionCall "=" ":"
  248                    | assignable "=" returnControl
  249                    | functionCall "=" returnControl

  250 assignable: variable "." "identifier"
  251           | variable "." keywords
  252           | variable "." functionCall
  253           | functionCall "." "identifier"
  254           | functionCall "." keywords
  255           | "identifier"
  256           | multipleResults
  257           | variable "(" functionArgs ")"
  258           | functionCall "(" functionArgs ")"

  259 multipleResults: "[" matrixOrCellColumns "]"

  260 argumentsControl: "arguments" "end of line" argumentsDeclarations "end"
  261                 | "arguments" "end of line" "end"

  262 argumentsDeclarations: argumentsDeclarations argumentDeclaration lineEnd
  263                      | argumentsDeclarations "line comment" "end of line"
  264                      | argumentDeclaration lineEnd
  265                      | "line comment" "end of line"

  266 argumentDeclaration: argumentName argumentDimension argumentValidators argumentDefaultValue
  267                    | argumentName argumentDimension "identifier" argumentValidators argumentDefaultValue

  268 argumentName: "identifier"
  269             | "identifier" "." "identifier"

  270 argumentDimension: "(" functionArgs ")"
  271                  | ε

  272 argumentValidators: "{" functionArgs "}"
  273                   | ε

  274 argumentDefaultValue: "=" variable
  275                     | "=" functionCall
  276                     | ε

  277 ifControl: "if" condition then thenBody "end"
  278          | "if" condition then thenBody else elseBody "end"
  279          | "if" condition then thenBody elseIfControl "end"

  280 thenBody: expressions
  281         | ε

  282 elseBody: expressions
  283         | ε

  284 ifConditionBreak: ";"
  285                 | ";" "end of line"
  286                 | ","
  287                 | "," "end of line"
  288                 | "end of line"

  289 then: "then"
  290     | ifConditionBreak "then"
  291     | ifConditionBreak "then" "end of line"
  292     | "then" ifConditionBreak
  293     | ifConditionBreak
  294     | ε

  295 else: "else"
  296     | "else" ","
  297     | "else" ";"
  298     | "else" "end of line"
  299     | "else" "," "end of line"
  300     | "else" ";" "end of line"

  301 elseIfControl: "elseif" condition then thenBody
  302              | "elseif" condition then thenBody else elseBody
  303              | "elseif" condition then thenBody elseIfControl

  304 selectControl: select selectable selectConditionBreak casesControl "end"
  305              | select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | select selectable "line comment" selectConditionBreak casesControl "end"
  307              | select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"

  308 select: "select"
  309       | "switch"

  310 defaultCase: else
  311            | "otherwise"
  312            | "otherwise" ","
  313            | "otherwise" ";"
  314            | "otherwise" "end of line"
  315            | "otherwise" "," "end of line"
  316            | "otherwise" ";" "end of line"

  317 selectable: variable
  318           | functionCall

  319 selectConditionBreak: "end of line"
  320                     | "," "end of line"
  321                     | ";" "end of line"
  322                     | ","
  323                     | ";"

  324 casesControl: "case" variable caseControlBreak caseBody
  325             | "case" functionCall caseControlBreak caseBody
  326             | comments "case" variable caseControlBreak caseBody
  327             | comments "case" functionCall caseControlBreak caseBody
  328             | casesControl "case" variable caseControlBreak caseBody
  329             | casesControl "case" functionCall caseControlBreak caseBody

  330 caseBody: expressions
  331         | ε

  332 caseControlBreak: "then"
  333                 | ","
  334                 | ";"
  335                 | "end of line"
  336                 | "then" "end of line"
  337                 | "," "end of line"
  338                 | ";" "end of line"
  339                 | "then" ","
  340                 | "then" "," "end of line"
  341                 | "then" ";"
  342                 | "then" ";" "end of line"
  343                 | ε

  344 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"

  346 forIterator: functionCall
  347            | variable

  348 forConditionBreak: "end of line"
  349                  | ";"
  350                  | ";" "end of line"
  351                  | ","
  352                  | "," "end of line"
  353                  | "do"
  354                  | "do" "end of line"
  355                  | ε

  356 forBody: expressions
  357        | ε

  358 whileControl: "while" condition whileConditionBreak whileBody "end"

  359 whileBody: expressions
  360          | ε

  361 whileConditionBreak: ","
  362                    | ";"
  363                    | "do"
  364                    | "do" ","
  365                    | "do" ";"
  366                    | "then"
  367                    | "then" ","
  368                    | "then" ";"
  369                    | "line comment" "end of line"
  370                    | "end of line"
  371                    | "," "end of line"
  372                    | ";" "end of line"
  373                    | "do" "end of line"
  374                    | "do" "," "end of line"
  375                    | "do" ";" "end of line"
  376                    | "then" "end of line"
  377                    | "then" "," "end of line"
  378                    | "then" ";" "end of line"

  379 tryControl: "try" catchBody "catch" catchBody "end"
  380           | "try" catchBody "end"

  381 catchBody: expressions
  382          | "end of line" expressions
  383          | ";" expressions
  384          | "," expressions
  385          | "end of line"
  386          | ε

  387 returnControl: "return"
  388              | "return" variable
  389              | "return" functionCall

  390 comments: "line comment" "end of line"
  391         | comments "line comment" "end of line"

  392 lineEnd: "end of line"
  393        | "line comment" "end of line"

  394 keywords: "if"
  395         | "then"
  396         | "else"
  397         | "elseif"
  398         | "end"
  399         | "select"
  400         | "switch"
  401         | "otherwise"
  402         | "case"
  403         | "function"
  404         | "endfunction"
  405         | "for"
  406         | "while"
  407         | "do"
  408         | "break"
  409         | "try"
  410         | "catch"
  411         | "return"


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256) 35
    "line break" (258)
    "end of line" (259) 16 19 82 84 206 208 210 211 214 216 218 219 224 225 260 261 263 265 285 287 288 291 298 299 300 314 315 316 319 320 321 335 336 337 338 340 342 348 350 352 354 369 370 371 372 373 374 375 376 377 378 382 385 390 391 392 393
    "spaces" (260) 239 241
    "%t or %T" (261) 44 191
    "%f or %F" (262) 45 192
    "'" (263) 135 137
    "~ or @" (264) 172 173
    "$" (265) 43 190
    "," (266) 15 18 58 59 60 61 62 63 64 65 66 67 78 83 84 199 200 201 202 203 204 238 240 286 287 296 299 312 315 320 322 333 337 339 340 351 352 361 364 367 371 374 377 384
    ":" (267) 56 61 66 93 96 99 102 105 108 111 114 117 120 167 168 169 170 246 247
    ";" (268) 14 17 81 82 223 226 284 285 297 300 313 316 321 323 334 338 341 342 349 350 362 365 368 372 375 378 383
    "(" (269) 49 50 52 75 76 193 194 196 197 198 257 258 270 345
    ")" (270) 49 50 52 75 76 193 194 196 197 198 257 258 270 345
    "[" (271) 69 70 213 214 215 216 217 218 219 220 259
    "]" (272) 69 70 213 214 215 216 217 218 219 220 259
    "{" (273) 51 53 205 206 207 208 209 210 211 212 272
    "}" (274) 51 53 205 206 207 208 209 210 211 212 272
    "." (275) 46 174 175 176 177 178 250 251 252 253 254 269
    ".'" (276) 136 138
    "+" (277) 125 126 139 140
    "-" (278) 123 124 141 142
    "*" (279) 143 144
    ".*" (280) 145 146
    ".*." (281) 147 148
    "*." (282) 149 150
    "/" (283) 151 152
    "./" (284) 153 154
    "/." (285) 157 158
    "./." (286) 155 156
    "\\" (287) 159 160
    ".\\" (288) 161 162
    "\\." (289) 165 166
    ".\\." (290) 163 164
    "** or ^" (291) 127 128 129 130
    ".^" (292) 131 132 133 134
    "==" (293) 103 104 105
    "<> or ~=" (294) 106 107 108
    "<" (295) 112 113 114
    "<=" (296) 118 119 120
    ">" (297) 109 110 111
    ">=" (298) 115 116 117
    "&" (299) 91 92 93
    "&&" (300) 94 95 96
    "|" (301) 97 98 99
    "||" (302) 100 101 102
    "=" (303) 68 69 70 242 243 244 245 246 247 248 249 274 275 344 345
    "arguments" (304) 260 261
    "if" (305) 277 278 279 394
    "then" (306) 289 290 291 292 332 336 339 340 341 342 366 367 368 376 377 378 395
    "else" (307) 295 296 297 298 299 300 396
    "elseif" (308) 301 302 303 397
    "end" (309) 73 260 261 277 278 279 304 305 306 307 344 345 358 379 380 398
    "select" (310) 308 399
    "switch" (311) 309 400
    "case" (312) 324 325 326 327 328 329 402
    "otherwise" (313) 311 312 313 314 315 316 401
    "function" (314) 68 69 70 71 403
    "endfunction" (315) 72 404
    "for" (316) 344 345 405
    "while" (317) 358 406
    "do" (318) 353 354 363 364 365 373 374 375 407
    "break" (319) 31 408
    "continue" (320) 32
    "try" (321) 379 380 409
    "catch" (322) 379 410
    "return" (323) 387 388 389 411
    FLEX_ERROR (324)
    "string" <str> (325) 42 189
    "identifier" <str> (326) 37 38 46 50 51 52 53 68 69 70 71 78 79 174 177 184 250 253 255 267 268 269 344 345
    "integer" <number> (327) 39 185
    "float" <number> (328) 41 187
    "complex number" <number> (329) 188
    "number" <number> (330) 40 186
    "path" <path> (331) 47
    "line comment" <comment> (332) 7 9 11 12 34 233 234 237 263 265 306 307 369 390 391 393
    "block comment" <comment> (333)
    TOPLEVEL (334)
    HIGHLEVEL (335)
    UPLEVEL (336)
    LISTABLE (337)
    CONTROLBREAK (338)
    UMINUS (339)
    UPLUS (340)
    FUNCTIONCALL (341)


Nonterminals, with rules where they appear

    $accept (87)
        on left: 0
    program (88)
        on left: 1 2 3 4
        on right: 0
    expressions <t_seq_exp> (89)
        on left: 5 6 7 8 9
        on right: 1 2 85 280 282 330 356 359 381 382 383 384
    recursiveExpression <t_list_exp> (90)
        on left: 10 11 12 13
        on right: 5 6 7 10 11
    expressionLineBreak <mute> (91)
        on left: 14 15 16 17 18 19
        on right: 2 3 10 11 12 13 17 18 19
    expression <t_exp> (92)
        on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
        on right: 6 7 8 9 10 11 12 13
    implicitFunctionCall <t_call_exp> (93)
        on left: 36 37
        on right: 30 36
    implicitCallable <t_string_exp> (94)
        on left: 38 39 40 41 42 43 44 45 46 47
        on right: 36 37 46
    functionCall <t_call_exp> (95)
        on left: 48 49
        on right: 21 49 55 60 65 87 90 92 95 98 101 104 107 110 113 116 119 122 124 126 128 129 130 132 133 134 137 138 140 142 144 146 148 150 152 154 156 158 160 162 164 166 168 170 173 176 177 178 180 197 198 200 202 203 204 230 232 236 243 244 245 247 249 252 253 254 258 275 318 325 327 329 346 389
    simpleFunctionCall <t_call_exp> (96)
        on left: 50 51 52 53
        on right: 48
    functionArgs <t_list_exp> (97)
        on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67
        on right: 50 51 63 64 65 66 67 196 197 257 258 270 272
    functionDeclaration <t_function_dec> (98)
        on left: 68 69 70 71
        on right: 20
    endfunction (99)
        on left: 72 73
        on right: 68 69 70 71
    functionDeclarationReturns <t_list_var> (100)
        on left: 74
        on right: 69
    functionDeclarationArguments <t_list_var> (101)
        on left: 75 76 77
        on right: 68 69 70 71
    idList <t_list_var> (102)
        on left: 78 79
        on right: 74 75 78
    functionDeclarationBreak (103)
        on left: 80 81 82 83 84
        on right: 68 69 70 71
    functionBody <t_seq_exp> (104)
        on left: 85 86
        on right: 68 69 70 71
    condition <t_exp> (105)
        on left: 87 88
        on right: 277 278 279 301 302 303 358
    comparison <t_op_exp> (106)
        on left: 89 90
        on right: 195
    rightComparable <t_op_exp> (107)
        on left: 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120
        on right: 89 90
    operation <t_exp> (108)
        on left: 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138
        on right: 183
    rightOperand <t_op_exp> (109)
        on left: 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166
        on right: 121 122
    listableBegin <t_exp> (110)
        on left: 167 168
        on right: 169 170 171
    listableEnd <t_implicit_list> (111)
        on left: 169 170 171
        on right: 179 180
    variable <t_exp> (112)
        on left: 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198
        on right: 29 54 59 64 88 89 91 94 97 100 103 106 109 112 115 118 121 123 125 127 128 129 131 132 133 135 136 139 141 143 145 147 149 151 153 155 157 159 161 163 165 167 169 172 174 175 176 179 193 196 199 201 203 204 229 231 235 242 244 250 251 252 257 274 317 324 326 328 347 388
    variableFields <t_list_exp> (113)
        on left: 199 200 201 202 203 204
        on right: 194 199 200
    cell <t_cell_exp> (114)
        on left: 205 206 207 208 209 210 211 212
        on right: 182
    matrix <t_matrix_exp> (115)
        on left: 213 214 215 216 217 218 219 220
        on right: 181
    matrixOrCellLines <t_list_mline> (116)
        on left: 221 222
        on right: 205 206 207 208 213 214 215 216 221
    matrixOrCellLineBreak (117)
        on left: 223 224 225 226
        on right: 225 226 227 228
    matrixOrCellLine <t_matrixline_exp> (118)
        on left: 227 228
        on right: 221 222
    matrixOrCellColumns <t_list_exp> (119)
        on left: 229 230 231 232 233 234 235 236 237
        on right: 207 208 209 210 215 216 217 218 227 228 229 230 231 232 233 234 259
    matrixOrCellColumnsBreak (120)
        on left: 238 239 240 241
        on right: 228 229 230 234 238 239
    variableDeclaration <t_assign_exp> (121)
        on left: 242 243 244 245 246 247 248 249
        on right: 22 57 62 67
    assignable <t_exp> (122)
        on left: 250 251 252 253 254 255 256 257 258
        on right: 242 243 246 248
    multipleResults <t_assignlist_exp> (123)
        on left: 259
        on right: 256
    argumentsControl <t_arguments_exp> (124)
        on left: 260 261
        on right: 23
    argumentsDeclarations <t_arguments_exp> (125)
        on left: 262 263 264 265
        on right: 260 262 263
    argumentDeclaration <t_argument_dec> (126)
        on left: 266 267
        on right: 262 264
    argumentName <t_exp> (127)
        on left: 268 269
        on right: 266 267
    argumentDimension <t_exp> (128)
        on left: 270 271
        on right: 266 267
    argumentValidators <t_exp> (129)
        on left: 272 273
        on right: 266 267
    argumentDefaultValue <t_exp> (130)
        on left: 274 275 276
        on right: 266 267
    ifControl <t_if_exp> (131)
        on left: 277 278 279
        on right: 24
    thenBody <t_seq_exp> (132)
        on left: 280 281
        on right: 277 278 279 301 302 303
    elseBody <t_seq_exp> (133)
        on left: 282 283
        on right: 278 302 305 307
    ifConditionBreak (134)
        on left: 284 285 286 287 288
        on right: 290 291 292 293
    then (135)
        on left: 289 290 291 292 293 294
        on right: 277 278 279 301 302 303
    else (136)
        on left: 295 296 297 298 299 300
        on right: 278 302 310
    elseIfControl <t_seq_exp> (137)
        on left: 301 302 303
        on right: 279 303
    selectControl <t_select_exp> (138)
        on left: 304 305 306 307
        on right: 25
    select (139)
        on left: 308 309
        on right: 304 305 306 307
    defaultCase (140)
        on left: 310 311 312 313 314 315 316
        on right: 305 307
    selectable <t_exp> (141)
        on left: 317 318
        on right: 304 305 306 307
    selectConditionBreak (142)
        on left: 319 320 321 322 323
        on right: 304 305 306 307
    casesControl <t_list_case> (143)
        on left: 324 325 326 327 328 329
        on right: 304 305 306 307 328 329
    caseBody <t_seq_exp> (144)
        on left: 330 331
        on right: 324 325 326 327 328 329
    caseControlBreak (145)
        on left: 332 333 334 335 336 337 338 339 340 341 342 343
        on right: 324 325 326 327 328 329
    forControl <t_for_exp> (146)
        on left: 344 345
        on right: 26
    forIterator <t_exp> (147)
        on left: 346 347
        on right: 344 345
    forConditionBreak (148)
        on left: 348 349 350 351 352 353 354 355
        on right: 344 345
    forBody <t_seq_exp> (149)
        on left: 356 357
        on right: 344 345
    whileControl <t_while_exp> (150)
        on left: 358
        on right: 27
    whileBody <t_seq_exp> (151)
        on left: 359 360
        on right: 358
    whileConditionBreak (152)
        on left: 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378
        on right: 358
    tryControl <t_try_exp> (153)
        on left: 379 380
        on right: 28
    catchBody <t_seq_exp> (154)
        on left: 381 382 383 384 385 386
        on right: 379 380
    returnControl <t_return_exp> (155)
        on left: 387 388 389
        on right: 33 248 249
    comments (156)
        on left: 390 391
        on right: 326 327 391
    lineEnd (157)
        on left: 392 393
        on right: 80 262 264
    keywords <t_simple_var> (158)
        on left: 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411
        on right: 175 178 251 254


State 0

    0 $accept: • program "end of file"
    1 program: • expressions
    2        | • expressionLineBreak expressions
    3        | • expressionLineBreak
    4        | ε •  ["end of file"]
    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   14 expressionLineBreak: • ";"
   15                    | • ","
   16                    | • "end of line"
   17                    | • expressionLineBreak ";"
   18                    | • expressionLineBreak ","
   19                    | • expressionLineBreak "end of line"
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "end of line"     shift, and go to state 2
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 7
    ";"               shift, and go to state 8
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end of file"  reduce using rule 4 (program)

    program               go to state 32
    expressions           go to state 33
    recursiveExpression   go to state 34
    expressionLineBreak   go to state 35
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 1

   35 expression: error •

    $default  reduce using rule 35 (expression)


State 2

   16 expressionLineBreak: "end of line" •

    $default  reduce using rule 16 (expressionLineBreak)


State 3

  191 variable: "%t or %T" •

    $default  reduce using rule 191 (variable)


State 4

  192 variable: "%f or %F" •

    $default  reduce using rule 192 (variable)


State 5

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  172         | "~ or @" • variable
  173         | • "~ or @" functionCall
  173         | "~ or @" • functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 59
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 60
    cell                go to state 44
    matrix              go to state 45


State 6

  190 variable: "$" •

    $default  reduce using rule 190 (variable)


State 7

   15 expressionLineBreak: "," •

    $default  reduce using rule 15 (expressionLineBreak)


State 8

   14 expressionLineBreak: ";" •

    $default  reduce using rule 14 (expressionLineBreak)


State 9

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   49             | "(" • functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  193         | "(" • variable ")"
  194         | • "(" variableFields ")"
  194         | "(" • variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  199 variableFields: • variableFields "," variable
  200               | • variableFields "," functionCall
  201               | • variable "," variable
  202               | • functionCall "," functionCall
  203               | • functionCall "," variable
  204               | • variable "," functionCall
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 61
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 62
    variableFields      go to state 63
    cell                go to state 44
    matrix              go to state 45


State 10

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  213       | "[" • matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  214       | "[" • "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  215       | "[" • matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  216       | "[" • "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  217       | "[" • matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  218       | "[" • "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  219       | "[" • "end of line" "]"
  220       | • "[" "]"
  220       | "[" • "]"
  221 matrixOrCellLines: • matrixOrCellLines matrixOrCellLine
  222                  | • matrixOrCellLine
  227 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  228                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  230                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  231                    | • matrixOrCellColumns variable
  232                    | • matrixOrCellColumns functionCall
  233                    | • matrixOrCellColumns "line comment"
  234                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  235                    | • variable
  236                    | • functionCall
  237                    | • "line comment"
  259 multipleResults: "[" • matrixOrCellColumns "]"

    "end of line"     shift, and go to state 64
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "]"               shift, and go to state 65
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 66

    functionCall         go to state 67
    simpleFunctionCall   go to state 39
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 68
    cell                 go to state 44
    matrix               go to state 45
    matrixOrCellLines    go to state 69
    matrixOrCellLine     go to state 70
    matrixOrCellColumns  go to state 71


State 11

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  205     | "{" • matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  206     | "{" • "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  207     | "{" • matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  208     | "{" • "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  209     | "{" • matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  210     | "{" • "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  211     | "{" • "end of line" "}"
  212     | • "{" "}"
  212     | "{" • "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  221 matrixOrCellLines: • matrixOrCellLines matrixOrCellLine
  222                  | • matrixOrCellLine
  227 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  228                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  230                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  231                    | • matrixOrCellColumns variable
  232                    | • matrixOrCellColumns functionCall
  233                    | • matrixOrCellColumns "line comment"
  234                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  235                    | • variable
  236                    | • functionCall
  237                    | • "line comment"

    "end of line"     shift, and go to state 72
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "}"               shift, and go to state 73
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 66

    functionCall         go to state 67
    simpleFunctionCall   go to state 39
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 68
    cell                 go to state 44
    matrix               go to state 45
    matrixOrCellLines    go to state 74
    matrixOrCellLine     go to state 70
    matrixOrCellColumns  go to state 75


State 12

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  125          | "+" • variable
  126          | • "+" functionCall
  126          | "+" • functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 76
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 77
    cell                go to state 44
    matrix              go to state 45


State 13

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  123          | "-" • variable
  124          | • "-" functionCall
  124          | "-" • functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 78
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 79
    cell                go to state 44
    matrix              go to state 45


State 14

  260 argumentsControl: "arguments" • "end of line" argumentsDeclarations "end"
  261                 | "arguments" • "end of line" "end"

    "end of line"  shift, and go to state 80


State 15

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   87 condition: • functionCall
   88          | • variable
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  277 ifControl: "if" • condition then thenBody "end"
  278          | "if" • condition then thenBody else elseBody "end"
  279          | "if" • condition then thenBody elseIfControl "end"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 81
    simpleFunctionCall  go to state 39
    condition           go to state 82
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 83
    cell                go to state 44
    matrix              go to state 45


State 16

  308 select: "select" •

    $default  reduce using rule 308 (select)


State 17

  309 select: "switch" •

    $default  reduce using rule 309 (select)


State 18

   68 functionDeclaration: "function" • "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | "function" • "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | "function" • "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | "function" • "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

    "["           shift, and go to state 84
    "identifier"  shift, and go to state 85


State 19

  344 forControl: "for" • "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | "for" • "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"

    "("           shift, and go to state 86
    "identifier"  shift, and go to state 87


State 20

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   87 condition: • functionCall
   88          | • variable
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  358 whileControl: "while" • condition whileConditionBreak whileBody "end"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 81
    simpleFunctionCall  go to state 39
    condition           go to state 88
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 83
    cell                go to state 44
    matrix              go to state 45


State 21

   31 expression: "break" •

    $default  reduce using rule 31 (expression)


State 22

   32 expression: "continue" •

    $default  reduce using rule 32 (expression)


State 23

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  379           | "try" • catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  380           | "try" • catchBody "end"
  381 catchBody: • expressions
  382          | • "end of line" expressions
  383          | • ";" expressions
  384          | • "," expressions
  385          | • "end of line"
  386          | ε •  ["end", "catch"]
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "end of line"     shift, and go to state 89
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 90
    ";"               shift, and go to state 91
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end"    reduce using rule 386 (catchBody)
    "catch"  reduce using rule 386 (catchBody)

    expressions           go to state 92
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    catchBody             go to state 93
    returnControl         go to state 56


State 24

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  387 returnControl: "return" •  ["end of file", "end of line", ",", ";", ")", "}", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  388              | "return" • variable
  389              | "return" • functionCall

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    $default  reduce using rule 387 (returnControl)

    functionCall        go to state 94
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 95
    cell                go to state 44
    matrix              go to state 45


State 25

  189 variable: "string" •

    $default  reduce using rule 189 (variable)


State 26

   37 implicitFunctionCall: "identifier" • implicitCallable
   38 implicitCallable: • "identifier"
   39                 | • "integer"
   40                 | • "number"
   41                 | • "float"
   42                 | • "string"
   43                 | • "$"
   44                 | • "%t or %T"
   45                 | • "%f or %F"
   46                 | • implicitCallable "." "identifier"
   47                 | • "path"
   50 simpleFunctionCall: "identifier" • "(" functionArgs ")"
   51                   | "identifier" • "{" functionArgs "}"
   52                   | "identifier" • "(" ")"
   53                   | "identifier" • "{" "}"
  184 variable: "identifier" •  ["end of file", "end of line", "'", ",", ":", ";", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  255 assignable: "identifier" •  ["="]

    "%t or %T"    shift, and go to state 96
    "%f or %F"    shift, and go to state 97
    "$"           shift, and go to state 98
    "("           shift, and go to state 99
    "{"           shift, and go to state 100
    "string"      shift, and go to state 101
    "identifier"  shift, and go to state 102
    "integer"     shift, and go to state 103
    "float"       shift, and go to state 104
    "number"      shift, and go to state 105
    "path"        shift, and go to state 106

    "="       reduce using rule 255 (assignable)
    $default  reduce using rule 184 (variable)

    implicitCallable  go to state 107

    Conflict between rule 184 and token "(" resolved as shift (LISTABLE < "(").


State 27

  185 variable: "integer" •

    $default  reduce using rule 185 (variable)


State 28

  187 variable: "float" •

    $default  reduce using rule 187 (variable)


State 29

  188 variable: "complex number" •

    $default  reduce using rule 188 (variable)


State 30

  186 variable: "number" •

    $default  reduce using rule 186 (variable)


State 31

   34 expression: "line comment" •

    $default  reduce using rule 34 (expression)


State 32

    0 $accept: program • "end of file"

    "end of file"  shift, and go to state 108


State 33

    1 program: expressions •

    $default  reduce using rule 1 (program)


State 34

    5 expressions: recursiveExpression •  ["end of file", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch"]
    6            | recursiveExpression • expression
    7            | recursiveExpression • expression "line comment"
   10 recursiveExpression: recursiveExpression • expression expressionLineBreak
   11                    | recursiveExpression • expression "line comment" expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end of file"  reduce using rule 5 (expressions)
    "else"         reduce using rule 5 (expressions)
    "elseif"       reduce using rule 5 (expressions)
    "end"          reduce using rule 5 (expressions)
    "case"         reduce using rule 5 (expressions)
    "otherwise"    reduce using rule 5 (expressions)
    "endfunction"  reduce using rule 5 (expressions)
    "catch"        reduce using rule 5 (expressions)

    expression            go to state 109
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 35

    2 program: expressionLineBreak • expressions
    3        | expressionLineBreak •  ["end of file"]
    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   17 expressionLineBreak: expressionLineBreak • ";"
   18                    | expressionLineBreak • ","
   19                    | expressionLineBreak • "end of line"
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "end of line"     shift, and go to state 110
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 111
    ";"               shift, and go to state 112
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end of file"  reduce using rule 3 (program)

    expressions           go to state 113
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 36

    8 expressions: expression •  ["end of file", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch"]
    9            | expression • "line comment"
   12 recursiveExpression: expression • "line comment" expressionLineBreak
   13                    | expression • expressionLineBreak
   14 expressionLineBreak: • ";"
   15                    | • ","
   16                    | • "end of line"
   17                    | • expressionLineBreak ";"
   18                    | • expressionLineBreak ","
   19                    | • expressionLineBreak "end of line"

    "end of line"   shift, and go to state 2
    ","             shift, and go to state 7
    ";"             shift, and go to state 8
    "line comment"  shift, and go to state 114

    $default  reduce using rule 8 (expressions)

    expressionLineBreak  go to state 115


State 37

   30 expression: implicitFunctionCall •  ["end of file", "end of line", ",", ";", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
   36 implicitFunctionCall: implicitFunctionCall • implicitCallable
   38 implicitCallable: • "identifier"
   39                 | • "integer"
   40                 | • "number"
   41                 | • "float"
   42                 | • "string"
   43                 | • "$"
   44                 | • "%t or %T"
   45                 | • "%f or %F"
   46                 | • implicitCallable "." "identifier"
   47                 | • "path"

    "%t or %T"    shift, and go to state 96
    "%f or %F"    shift, and go to state 97
    "$"           shift, and go to state 98
    "string"      shift, and go to state 101
    "identifier"  shift, and go to state 102
    "integer"     shift, and go to state 103
    "float"       shift, and go to state 104
    "number"      shift, and go to state 105
    "path"        shift, and go to state 106

    $default  reduce using rule 30 (expression)

    implicitCallable  go to state 116


State 38

   21 expression: functionCall •  ["end of file", "end of line", ",", ";", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  244 variableDeclaration: functionCall • "=" variable
  245                    | functionCall • "=" functionCall
  247                    | functionCall • "=" ":"
  249                    | functionCall • "=" returnControl
  253 assignable: functionCall • "." "identifier"
  254           | functionCall • "." keywords
  258           | functionCall • "(" functionArgs ")"

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 119
    "."         shift, and go to state 120
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147
    "="         shift, and go to state 148

    $default  reduce using rule 21 (expression)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152


State 39

   48 functionCall: simpleFunctionCall •

    $default  reduce using rule 48 (functionCall)


State 40

   20 expression: functionDeclaration •

    $default  reduce using rule 20 (expression)


State 41

  195 variable: comparison •

    $default  reduce using rule 195 (variable)


State 42

  183 variable: operation •

    $default  reduce using rule 183 (variable)


State 43

   29 expression: variable •  ["end of file", "end of line", ",", ";", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  250 assignable: variable • "." "identifier"
  251           | variable • "." keywords
  252           | variable • "." functionCall
  257           | variable • "(" functionArgs ")"

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 154
    "."         shift, and go to state 155
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 29 (expression)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161


State 44

  182 variable: cell •

    $default  reduce using rule 182 (variable)


State 45

  181 variable: matrix •

    $default  reduce using rule 181 (variable)


State 46

   22 expression: variableDeclaration •

    $default  reduce using rule 22 (expression)


State 47

  242 variableDeclaration: assignable • "=" variable
  243                    | assignable • "=" functionCall
  246                    | assignable • "=" ":"
  248                    | assignable • "=" returnControl

    "="  shift, and go to state 162


State 48

  256 assignable: multipleResults •

    $default  reduce using rule 256 (assignable)


State 49

   23 expression: argumentsControl •

    $default  reduce using rule 23 (expression)


State 50

   24 expression: ifControl •

    $default  reduce using rule 24 (expression)


State 51

   25 expression: selectControl •

    $default  reduce using rule 25 (expression)


State 52

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  304 selectControl: select • selectable selectConditionBreak casesControl "end"
  305              | select • selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | select • selectable "line comment" selectConditionBreak casesControl "end"
  307              | select • selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  317 selectable: • variable
  318           | • functionCall

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 163
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 164
    cell                go to state 44
    matrix              go to state 45
    selectable          go to state 165


State 53

   26 expression: forControl •

    $default  reduce using rule 26 (expression)


State 54

   27 expression: whileControl •

    $default  reduce using rule 27 (expression)


State 55

   28 expression: tryControl •

    $default  reduce using rule 28 (expression)


State 56

   33 expression: returnControl •

    $default  reduce using rule 33 (expression)


State 57

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  213       | "[" • matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  214       | "[" • "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  215       | "[" • matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  216       | "[" • "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  217       | "[" • matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  218       | "[" • "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  219       | "[" • "end of line" "]"
  220       | • "[" "]"
  220       | "[" • "]"
  221 matrixOrCellLines: • matrixOrCellLines matrixOrCellLine
  222                  | • matrixOrCellLine
  227 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  228                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  230                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  231                    | • matrixOrCellColumns variable
  232                    | • matrixOrCellColumns functionCall
  233                    | • matrixOrCellColumns "line comment"
  234                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  235                    | • variable
  236                    | • functionCall
  237                    | • "line comment"

    "end of line"     shift, and go to state 64
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "]"               shift, and go to state 65
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 66

    functionCall         go to state 67
    simpleFunctionCall   go to state 39
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 68
    cell                 go to state 44
    matrix               go to state 45
    matrixOrCellLines    go to state 69
    matrixOrCellLine     go to state 70
    matrixOrCellColumns  go to state 166


State 58

   50 simpleFunctionCall: "identifier" • "(" functionArgs ")"
   51                   | "identifier" • "{" functionArgs "}"
   52                   | "identifier" • "(" ")"
   53                   | "identifier" • "{" "}"
  184 variable: "identifier" •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "("  shift, and go to state 99
    "{"  shift, and go to state 100

    $default  reduce using rule 184 (variable)

    Conflict between rule 184 and token "(" resolved as shift (LISTABLE < "(").
    Conflict between rule 184 and token "{" resolved as shift (LISTABLE < "{").


State 59

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  173 variable: "~ or @" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  177         | functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "("  shift, and go to state 167
    "."  shift, and go to state 168

    $default  reduce using rule 173 (variable)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 173 and token "'" resolved as reduce ("'" < "~ or @").
    Conflict between rule 173 and token ":" resolved as reduce (":" < "~ or @").
    Conflict between rule 173 and token "(" resolved as shift ("~ or @" < "(").
    Conflict between rule 173 and token "." resolved as shift ("~ or @" < ".").
    Conflict between rule 173 and token ".'" resolved as reduce (".'" < "~ or @").
    Conflict between rule 173 and token "+" resolved as reduce ("+" < "~ or @").
    Conflict between rule 173 and token "-" resolved as reduce ("-" < "~ or @").
    Conflict between rule 173 and token "*" resolved as reduce ("*" < "~ or @").
    Conflict between rule 173 and token ".*" resolved as reduce (".*" < "~ or @").
    Conflict between rule 173 and token ".*." resolved as reduce (".*." < "~ or @").
    Conflict between rule 173 and token "*." resolved as reduce ("*." < "~ or @").
    Conflict between rule 173 and token "/" resolved as reduce ("/" < "~ or @").
    Conflict between rule 173 and token "./" resolved as reduce ("./" < "~ or @").
    Conflict between rule 173 and token "/." resolved as reduce ("/." < "~ or @").
    Conflict between rule 173 and token "./." resolved as reduce ("./." < "~ or @").
    Conflict between rule 173 and token "\\" resolved as reduce ("\\" < "~ or @").
    Conflict between rule 173 and token ".\\" resolved as reduce (".\\" < "~ or @").
    Conflict between rule 173 and token "\\." resolved as reduce ("\\." < "~ or @").
    Conflict between rule 173 and token ".\\." resolved as reduce (".\\." < "~ or @").
    Conflict between rule 173 and token "** or ^" resolved as reduce ("** or ^" < "~ or @").
    Conflict between rule 173 and token ".^" resolved as reduce (".^" < "~ or @").
    Conflict between rule 173 and token "==" resolved as reduce ("==" < "~ or @").
    Conflict between rule 173 and token "<> or ~=" resolved as reduce ("<> or ~=" < "~ or @").
    Conflict between rule 173 and token "<" resolved as reduce ("<" < "~ or @").
    Conflict between rule 173 and token "<=" resolved as reduce ("<=" < "~ or @").
    Conflict between rule 173 and token ">" resolved as reduce (">" < "~ or @").
    Conflict between rule 173 and token ">=" resolved as reduce (">=" < "~ or @").
    Conflict between rule 173 and token "&" resolved as reduce ("&" < "~ or @").
    Conflict between rule 173 and token "&&" resolved as reduce ("&&" < "~ or @").
    Conflict between rule 173 and token "|" resolved as reduce ("|" < "~ or @").
    Conflict between rule 173 and token "||" resolved as reduce ("||" < "~ or @").


State 60

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  172 variable: "~ or @" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  174         | variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "("  shift, and go to state 169
    "."  shift, and go to state 170

    $default  reduce using rule 172 (variable)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 172 and token "'" resolved as reduce ("'" < "~ or @").
    Conflict between rule 172 and token ":" resolved as reduce (":" < "~ or @").
    Conflict between rule 172 and token "(" resolved as shift ("~ or @" < "(").
    Conflict between rule 172 and token "." resolved as shift ("~ or @" < ".").
    Conflict between rule 172 and token ".'" resolved as reduce (".'" < "~ or @").
    Conflict between rule 172 and token "+" resolved as reduce ("+" < "~ or @").
    Conflict between rule 172 and token "-" resolved as reduce ("-" < "~ or @").
    Conflict between rule 172 and token "*" resolved as reduce ("*" < "~ or @").
    Conflict between rule 172 and token ".*" resolved as reduce (".*" < "~ or @").
    Conflict between rule 172 and token ".*." resolved as reduce (".*." < "~ or @").
    Conflict between rule 172 and token "*." resolved as reduce ("*." < "~ or @").
    Conflict between rule 172 and token "/" resolved as reduce ("/" < "~ or @").
    Conflict between rule 172 and token "./" resolved as reduce ("./" < "~ or @").
    Conflict between rule 172 and token "/." resolved as reduce ("/." < "~ or @").
    Conflict between rule 172 and token "./." resolved as reduce ("./." < "~ or @").
    Conflict between rule 172 and token "\\" resolved as reduce ("\\" < "~ or @").
    Conflict between rule 172 and token ".\\" resolved as reduce (".\\" < "~ or @").
    Conflict between rule 172 and token "\\." resolved as reduce ("\\." < "~ or @").
    Conflict between rule 172 and token ".\\." resolved as reduce (".\\." < "~ or @").
    Conflict between rule 172 and token "** or ^" resolved as reduce ("** or ^" < "~ or @").
    Conflict between rule 172 and token ".^" resolved as reduce (".^" < "~ or @").
    Conflict between rule 172 and token "==" resolved as reduce ("==" < "~ or @").
    Conflict between rule 172 and token "<> or ~=" resolved as reduce ("<> or ~=" < "~ or @").
    Conflict between rule 172 and token "<" resolved as reduce ("<" < "~ or @").
    Conflict between rule 172 and token "<=" resolved as reduce ("<=" < "~ or @").
    Conflict between rule 172 and token ">" resolved as reduce (">" < "~ or @").
    Conflict between rule 172 and token ">=" resolved as reduce (">=" < "~ or @").
    Conflict between rule 172 and token "&" resolved as reduce ("&" < "~ or @").
    Conflict between rule 172 and token "&&" resolved as reduce ("&&" < "~ or @").
    Conflict between rule 172 and token "|" resolved as reduce ("|" < "~ or @").
    Conflict between rule 172 and token "||" resolved as reduce ("||" < "~ or @").


State 61

   49 functionCall: "(" functionCall • ")"
   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  202 variableFields: functionCall • "," functionCall
  203               | functionCall • "," variable

    "'"         shift, and go to state 117
    ","         shift, and go to state 171
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    ")"         shift, and go to state 172
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152


State 62

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  193         | "(" variable • ")"
  196         | variable • "(" functionArgs ")"
  201 variableFields: variable • "," variable
  204               | variable • "," functionCall

    "'"         shift, and go to state 153
    ","         shift, and go to state 173
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    ")"         shift, and go to state 174
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161


State 63

  194 variable: "(" variableFields • ")"
  199 variableFields: variableFields • "," variable
  200               | variableFields • "," functionCall

    ","  shift, and go to state 175
    ")"  shift, and go to state 176


State 64

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  214       | "[" "end of line" • matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  216       | "[" "end of line" • matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  218       | "[" "end of line" • matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  219       | "[" "end of line" • "]"
  220       | • "[" "]"
  221 matrixOrCellLines: • matrixOrCellLines matrixOrCellLine
  222                  | • matrixOrCellLine
  227 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  228                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  230                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  231                    | • matrixOrCellColumns variable
  232                    | • matrixOrCellColumns functionCall
  233                    | • matrixOrCellColumns "line comment"
  234                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  235                    | • variable
  236                    | • functionCall
  237                    | • "line comment"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "]"               shift, and go to state 177
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 66

    functionCall         go to state 67
    simpleFunctionCall   go to state 39
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 68
    cell                 go to state 44
    matrix               go to state 45
    matrixOrCellLines    go to state 178
    matrixOrCellLine     go to state 70
    matrixOrCellColumns  go to state 179


State 65

  220 matrix: "[" "]" •

    $default  reduce using rule 220 (matrix)


State 66

  237 matrixOrCellColumns: "line comment" •

    $default  reduce using rule 237 (matrixOrCellColumns)


State 67

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  236 matrixOrCellColumns: functionCall •  ["end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 236 (matrixOrCellColumns)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 236 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 236 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 236 and token "-" resolved as shift (HIGHLEVEL < "-").


State 68

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  235 matrixOrCellColumns: variable •  ["end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 235 (matrixOrCellColumns)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 235 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 235 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 235 and token "-" resolved as shift (HIGHLEVEL < "-").


State 69

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  213       | "[" matrixOrCellLines • "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  215       | "[" matrixOrCellLines • matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  221 matrixOrCellLines: matrixOrCellLines • matrixOrCellLine
  227 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  228                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  230                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  231                    | • matrixOrCellColumns variable
  232                    | • matrixOrCellColumns functionCall
  233                    | • matrixOrCellColumns "line comment"
  234                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  235                    | • variable
  236                    | • functionCall
  237                    | • "line comment"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "]"               shift, and go to state 180
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 66

    functionCall         go to state 67
    simpleFunctionCall   go to state 39
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 68
    cell                 go to state 44
    matrix               go to state 45
    matrixOrCellLine     go to state 181
    matrixOrCellColumns  go to state 182


State 70

  222 matrixOrCellLines: matrixOrCellLine •

    $default  reduce using rule 222 (matrixOrCellLines)


State 71

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  217       | "[" matrixOrCellColumns • "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  223 matrixOrCellLineBreak: • ";"
  224                      | • "end of line"
  225                      | • matrixOrCellLineBreak "end of line"
  226                      | • matrixOrCellLineBreak ";"
  227 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  228                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  230                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  231                    | matrixOrCellColumns • variable
  232                    | matrixOrCellColumns • functionCall
  233                    | matrixOrCellColumns • "line comment"
  234                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  238 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  239                         | • matrixOrCellColumnsBreak "spaces"
  240                         | • ","
  241                         | • "spaces"
  259 multipleResults: "[" matrixOrCellColumns • "]"

    "end of line"     shift, and go to state 183
    "spaces"          shift, and go to state 184
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 185
    ";"               shift, and go to state 186
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "]"               shift, and go to state 187
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 188

    functionCall              go to state 189
    simpleFunctionCall        go to state 39
    comparison                go to state 41
    operation                 go to state 42
    variable                  go to state 190
    cell                      go to state 44
    matrix                    go to state 45
    matrixOrCellLineBreak     go to state 191
    matrixOrCellColumnsBreak  go to state 192


State 72

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  206     | "{" "end of line" • matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  208     | "{" "end of line" • matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  210     | "{" "end of line" • matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  211     | "{" "end of line" • "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  221 matrixOrCellLines: • matrixOrCellLines matrixOrCellLine
  222                  | • matrixOrCellLine
  227 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  228                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  230                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  231                    | • matrixOrCellColumns variable
  232                    | • matrixOrCellColumns functionCall
  233                    | • matrixOrCellColumns "line comment"
  234                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  235                    | • variable
  236                    | • functionCall
  237                    | • "line comment"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "}"               shift, and go to state 193
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 66

    functionCall         go to state 67
    simpleFunctionCall   go to state 39
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 68
    cell                 go to state 44
    matrix               go to state 45
    matrixOrCellLines    go to state 194
    matrixOrCellLine     go to state 70
    matrixOrCellColumns  go to state 195


State 73

  212 cell: "{" "}" •

    $default  reduce using rule 212 (cell)


State 74

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  205     | "{" matrixOrCellLines • "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  207     | "{" matrixOrCellLines • matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  221 matrixOrCellLines: matrixOrCellLines • matrixOrCellLine
  227 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  228                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  230                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  231                    | • matrixOrCellColumns variable
  232                    | • matrixOrCellColumns functionCall
  233                    | • matrixOrCellColumns "line comment"
  234                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  235                    | • variable
  236                    | • functionCall
  237                    | • "line comment"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "}"               shift, and go to state 196
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 66

    functionCall         go to state 67
    simpleFunctionCall   go to state 39
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 68
    cell                 go to state 44
    matrix               go to state 45
    matrixOrCellLine     go to state 181
    matrixOrCellColumns  go to state 197


State 75

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  209     | "{" matrixOrCellColumns • "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  223 matrixOrCellLineBreak: • ";"
  224                      | • "end of line"
  225                      | • matrixOrCellLineBreak "end of line"
  226                      | • matrixOrCellLineBreak ";"
  227 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  228                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  230                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  231                    | matrixOrCellColumns • variable
  232                    | matrixOrCellColumns • functionCall
  233                    | matrixOrCellColumns • "line comment"
  234                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  238 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  239                         | • matrixOrCellColumnsBreak "spaces"
  240                         | • ","
  241                         | • "spaces"

    "end of line"     shift, and go to state 183
    "spaces"          shift, and go to state 184
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 185
    ";"               shift, and go to state 186
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "}"               shift, and go to state 198
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 188

    functionCall              go to state 189
    simpleFunctionCall        go to state 39
    comparison                go to state 41
    operation                 go to state 42
    variable                  go to state 190
    cell                      go to state 44
    matrix                    go to state 45
    matrixOrCellLineBreak     go to state 191
    matrixOrCellColumnsBreak  go to state 192


State 76

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  126          | "+" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 126 (operation)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 126 and token "'" resolved as shift (UPLUS < "'").
    Conflict between rule 126 and token ":" resolved as reduce (":" < UPLUS).
    Conflict between rule 126 and token "(" resolved as shift (UPLUS < "(").
    Conflict between rule 126 and token "." resolved as shift (UPLUS < ".").
    Conflict between rule 126 and token ".'" resolved as shift (UPLUS < ".'").
    Conflict between rule 126 and token "+" resolved as reduce ("+" < UPLUS).
    Conflict between rule 126 and token "-" resolved as reduce ("-" < UPLUS).
    Conflict between rule 126 and token "*" resolved as reduce ("*" < UPLUS).
    Conflict between rule 126 and token ".*" resolved as reduce (".*" < UPLUS).
    Conflict between rule 126 and token ".*." resolved as reduce (".*." < UPLUS).
    Conflict between rule 126 and token "*." resolved as reduce ("*." < UPLUS).
    Conflict between rule 126 and token "/" resolved as reduce ("/" < UPLUS).
    Conflict between rule 126 and token "./" resolved as reduce ("./" < UPLUS).
    Conflict between rule 126 and token "/." resolved as reduce ("/." < UPLUS).
    Conflict between rule 126 and token "./." resolved as reduce ("./." < UPLUS).
    Conflict between rule 126 and token "\\" resolved as reduce ("\\" < UPLUS).
    Conflict between rule 126 and token ".\\" resolved as reduce (".\\" < UPLUS).
    Conflict between rule 126 and token "\\." resolved as reduce ("\\." < UPLUS).
    Conflict between rule 126 and token ".\\." resolved as reduce (".\\." < UPLUS).
    Conflict between rule 126 and token "** or ^" resolved as shift (UPLUS < "** or ^").
    Conflict between rule 126 and token ".^" resolved as shift (UPLUS < ".^").
    Conflict between rule 126 and token "==" resolved as reduce ("==" < UPLUS).
    Conflict between rule 126 and token "<> or ~=" resolved as reduce ("<> or ~=" < UPLUS).
    Conflict between rule 126 and token "<" resolved as reduce ("<" < UPLUS).
    Conflict between rule 126 and token "<=" resolved as reduce ("<=" < UPLUS).
    Conflict between rule 126 and token ">" resolved as reduce (">" < UPLUS).
    Conflict between rule 126 and token ">=" resolved as reduce (">=" < UPLUS).
    Conflict between rule 126 and token "&" resolved as reduce ("&" < UPLUS).
    Conflict between rule 126 and token "&&" resolved as reduce ("&&" < UPLUS).
    Conflict between rule 126 and token "|" resolved as reduce ("|" < UPLUS).
    Conflict between rule 126 and token "||" resolved as reduce ("||" < UPLUS).


State 77

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  125          | "+" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 125 (operation)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 125 and token "'" resolved as shift (UPLUS < "'").
    Conflict between rule 125 and token ":" resolved as reduce (":" < UPLUS).
    Conflict between rule 125 and token "(" resolved as shift (UPLUS < "(").
    Conflict between rule 125 and token "." resolved as shift (UPLUS < ".").
    Conflict between rule 125 and token ".'" resolved as shift (UPLUS < ".'").
    Conflict between rule 125 and token "+" resolved as reduce ("+" < UPLUS).
    Conflict between rule 125 and token "-" resolved as reduce ("-" < UPLUS).
    Conflict between rule 125 and token "*" resolved as reduce ("*" < UPLUS).
    Conflict between rule 125 and token ".*" resolved as reduce (".*" < UPLUS).
    Conflict between rule 125 and token ".*." resolved as reduce (".*." < UPLUS).
    Conflict between rule 125 and token "*." resolved as reduce ("*." < UPLUS).
    Conflict between rule 125 and token "/" resolved as reduce ("/" < UPLUS).
    Conflict between rule 125 and token "./" resolved as reduce ("./" < UPLUS).
    Conflict between rule 125 and token "/." resolved as reduce ("/." < UPLUS).
    Conflict between rule 125 and token "./." resolved as reduce ("./." < UPLUS).
    Conflict between rule 125 and token "\\" resolved as reduce ("\\" < UPLUS).
    Conflict between rule 125 and token ".\\" resolved as reduce (".\\" < UPLUS).
    Conflict between rule 125 and token "\\." resolved as reduce ("\\." < UPLUS).
    Conflict between rule 125 and token ".\\." resolved as reduce (".\\." < UPLUS).
    Conflict between rule 125 and token "** or ^" resolved as shift (UPLUS < "** or ^").
    Conflict between rule 125 and token ".^" resolved as shift (UPLUS < ".^").
    Conflict between rule 125 and token "==" resolved as reduce ("==" < UPLUS).
    Conflict between rule 125 and token "<> or ~=" resolved as reduce ("<> or ~=" < UPLUS).
    Conflict between rule 125 and token "<" resolved as reduce ("<" < UPLUS).
    Conflict between rule 125 and token "<=" resolved as reduce ("<=" < UPLUS).
    Conflict between rule 125 and token ">" resolved as reduce (">" < UPLUS).
    Conflict between rule 125 and token ">=" resolved as reduce (">=" < UPLUS).
    Conflict between rule 125 and token "&" resolved as reduce ("&" < UPLUS).
    Conflict between rule 125 and token "&&" resolved as reduce ("&&" < UPLUS).
    Conflict between rule 125 and token "|" resolved as reduce ("|" < UPLUS).
    Conflict between rule 125 and token "||" resolved as reduce ("||" < UPLUS).


State 78

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  124          | "-" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 124 (operation)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 124 and token "'" resolved as shift (UMINUS < "'").
    Conflict between rule 124 and token ":" resolved as reduce (":" < UMINUS).
    Conflict between rule 124 and token "(" resolved as shift (UMINUS < "(").
    Conflict between rule 124 and token "." resolved as shift (UMINUS < ".").
    Conflict between rule 124 and token ".'" resolved as shift (UMINUS < ".'").
    Conflict between rule 124 and token "+" resolved as reduce ("+" < UMINUS).
    Conflict between rule 124 and token "-" resolved as reduce ("-" < UMINUS).
    Conflict between rule 124 and token "*" resolved as reduce ("*" < UMINUS).
    Conflict between rule 124 and token ".*" resolved as reduce (".*" < UMINUS).
    Conflict between rule 124 and token ".*." resolved as reduce (".*." < UMINUS).
    Conflict between rule 124 and token "*." resolved as reduce ("*." < UMINUS).
    Conflict between rule 124 and token "/" resolved as reduce ("/" < UMINUS).
    Conflict between rule 124 and token "./" resolved as reduce ("./" < UMINUS).
    Conflict between rule 124 and token "/." resolved as reduce ("/." < UMINUS).
    Conflict between rule 124 and token "./." resolved as reduce ("./." < UMINUS).
    Conflict between rule 124 and token "\\" resolved as reduce ("\\" < UMINUS).
    Conflict between rule 124 and token ".\\" resolved as reduce (".\\" < UMINUS).
    Conflict between rule 124 and token "\\." resolved as reduce ("\\." < UMINUS).
    Conflict between rule 124 and token ".\\." resolved as reduce (".\\." < UMINUS).
    Conflict between rule 124 and token "** or ^" resolved as shift (UMINUS < "** or ^").
    Conflict between rule 124 and token ".^" resolved as shift (UMINUS < ".^").
    Conflict between rule 124 and token "==" resolved as reduce ("==" < UMINUS).
    Conflict between rule 124 and token "<> or ~=" resolved as reduce ("<> or ~=" < UMINUS).
    Conflict between rule 124 and token "<" resolved as reduce ("<" < UMINUS).
    Conflict between rule 124 and token "<=" resolved as reduce ("<=" < UMINUS).
    Conflict between rule 124 and token ">" resolved as reduce (">" < UMINUS).
    Conflict between rule 124 and token ">=" resolved as reduce (">=" < UMINUS).
    Conflict between rule 124 and token "&" resolved as reduce ("&" < UMINUS).
    Conflict between rule 124 and token "&&" resolved as reduce ("&&" < UMINUS).
    Conflict between rule 124 and token "|" resolved as reduce ("|" < UMINUS).
    Conflict between rule 124 and token "||" resolved as reduce ("||" < UMINUS).


State 79

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  123          | "-" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 123 (operation)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 123 and token "'" resolved as shift (UMINUS < "'").
    Conflict between rule 123 and token ":" resolved as reduce (":" < UMINUS).
    Conflict between rule 123 and token "(" resolved as shift (UMINUS < "(").
    Conflict between rule 123 and token "." resolved as shift (UMINUS < ".").
    Conflict between rule 123 and token ".'" resolved as shift (UMINUS < ".'").
    Conflict between rule 123 and token "+" resolved as reduce ("+" < UMINUS).
    Conflict between rule 123 and token "-" resolved as reduce ("-" < UMINUS).
    Conflict between rule 123 and token "*" resolved as reduce ("*" < UMINUS).
    Conflict between rule 123 and token ".*" resolved as reduce (".*" < UMINUS).
    Conflict between rule 123 and token ".*." resolved as reduce (".*." < UMINUS).
    Conflict between rule 123 and token "*." resolved as reduce ("*." < UMINUS).
    Conflict between rule 123 and token "/" resolved as reduce ("/" < UMINUS).
    Conflict between rule 123 and token "./" resolved as reduce ("./" < UMINUS).
    Conflict between rule 123 and token "/." resolved as reduce ("/." < UMINUS).
    Conflict between rule 123 and token "./." resolved as reduce ("./." < UMINUS).
    Conflict between rule 123 and token "\\" resolved as reduce ("\\" < UMINUS).
    Conflict between rule 123 and token ".\\" resolved as reduce (".\\" < UMINUS).
    Conflict between rule 123 and token "\\." resolved as reduce ("\\." < UMINUS).
    Conflict between rule 123 and token ".\\." resolved as reduce (".\\." < UMINUS).
    Conflict between rule 123 and token "** or ^" resolved as shift (UMINUS < "** or ^").
    Conflict between rule 123 and token ".^" resolved as shift (UMINUS < ".^").
    Conflict between rule 123 and token "==" resolved as reduce ("==" < UMINUS).
    Conflict between rule 123 and token "<> or ~=" resolved as reduce ("<> or ~=" < UMINUS).
    Conflict between rule 123 and token "<" resolved as reduce ("<" < UMINUS).
    Conflict between rule 123 and token "<=" resolved as reduce ("<=" < UMINUS).
    Conflict between rule 123 and token ">" resolved as reduce (">" < UMINUS).
    Conflict between rule 123 and token ">=" resolved as reduce (">=" < UMINUS).
    Conflict between rule 123 and token "&" resolved as reduce ("&" < UMINUS).
    Conflict between rule 123 and token "&&" resolved as reduce ("&&" < UMINUS).
    Conflict between rule 123 and token "|" resolved as reduce ("|" < UMINUS).
    Conflict between rule 123 and token "||" resolved as reduce ("||" < UMINUS).


State 80

  260 argumentsControl: "arguments" "end of line" • argumentsDeclarations "end"
  261                 | "arguments" "end of line" • "end"
  262 argumentsDeclarations: • argumentsDeclarations argumentDeclaration lineEnd
  263                      | • argumentsDeclarations "line comment" "end of line"
  264                      | • argumentDeclaration lineEnd
  265                      | • "line comment" "end of line"
  266 argumentDeclaration: • argumentName argumentDimension argumentValidators argumentDefaultValue
  267                    | • argumentName argumentDimension "identifier" argumentValidators argumentDefaultValue
  268 argumentName: • "identifier"
  269             | • "identifier" "." "identifier"

    "end"           shift, and go to state 199
    "identifier"    shift, and go to state 200
    "line comment"  shift, and go to state 201

    argumentsDeclarations  go to state 202
    argumentDeclaration    go to state 203
    argumentName           go to state 204


State 81

   87 condition: functionCall •  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "{", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "function", "for", "while", "do", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 87 (condition)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 87 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 87 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 87 and token "-" resolved as shift (HIGHLEVEL < "-").


State 82

  277 ifControl: "if" condition • then thenBody "end"
  278          | "if" condition • then thenBody else elseBody "end"
  279          | "if" condition • then thenBody elseIfControl "end"
  284 ifConditionBreak: • ";"
  285                 | • ";" "end of line"
  286                 | • ","
  287                 | • "," "end of line"
  288                 | • "end of line"
  289 then: • "then"
  290     | • ifConditionBreak "then"
  291     | • ifConditionBreak "then" "end of line"
  292     | • "then" ifConditionBreak
  293     | • ifConditionBreak
  294     | ε •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 205
    ","            shift, and go to state 206
    ";"            shift, and go to state 207
    "then"         shift, and go to state 208

    $default  reduce using rule 294 (then)

    ifConditionBreak  go to state 209
    then              go to state 210


State 83

   88 condition: variable •  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "{", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "function", "for", "while", "do", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 88 (condition)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 88 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 88 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 88 and token "-" resolved as shift (HIGHLEVEL < "-").


State 84

   69 functionDeclaration: "function" "[" • functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | "function" "[" • "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   74 functionDeclarationReturns: • idList
   78 idList: • idList "," "identifier"
   79       | • "identifier"

    "]"           shift, and go to state 211
    "identifier"  shift, and go to state 212

    functionDeclarationReturns  go to state 213
    idList                      go to state 214


State 85

   68 functionDeclaration: "function" "identifier" • "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | "function" "identifier" • functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   75 functionDeclarationArguments: • "(" idList ")"
   76                             | • "(" ")"
   77                             | ε •  ["end of line", ",", ";", "line comment"]

    "("  shift, and go to state 215
    "="  shift, and go to state 216

    $default  reduce using rule 77 (functionDeclarationArguments)

    functionDeclarationArguments  go to state 217


State 86

  345 forControl: "for" "(" • "identifier" "=" forIterator ")" forConditionBreak forBody "end"

    "identifier"  shift, and go to state 218


State 87

  344 forControl: "for" "identifier" • "=" forIterator forConditionBreak forBody "end"

    "="  shift, and go to state 219


State 88

  358 whileControl: "while" condition • whileConditionBreak whileBody "end"
  361 whileConditionBreak: • ","
  362                    | • ";"
  363                    | • "do"
  364                    | • "do" ","
  365                    | • "do" ";"
  366                    | • "then"
  367                    | • "then" ","
  368                    | • "then" ";"
  369                    | • "line comment" "end of line"
  370                    | • "end of line"
  371                    | • "," "end of line"
  372                    | • ";" "end of line"
  373                    | • "do" "end of line"
  374                    | • "do" "," "end of line"
  375                    | • "do" ";" "end of line"
  376                    | • "then" "end of line"
  377                    | • "then" "," "end of line"
  378                    | • "then" ";" "end of line"

    "end of line"   shift, and go to state 220
    ","             shift, and go to state 221
    ";"             shift, and go to state 222
    "then"          shift, and go to state 223
    "do"            shift, and go to state 224
    "line comment"  shift, and go to state 225

    whileConditionBreak  go to state 226


State 89

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  382 catchBody: "end of line" • expressions
  385          | "end of line" •  ["end", "catch"]
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end"    reduce using rule 385 (catchBody)
    "catch"  reduce using rule 385 (catchBody)

    expressions           go to state 227
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 90

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  384 catchBody: "," • expressions
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    expressions           go to state 228
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 91

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  383 catchBody: ";" • expressions
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    expressions           go to state 229
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 92

  381 catchBody: expressions •

    $default  reduce using rule 381 (catchBody)


State 93

  379 tryControl: "try" catchBody • "catch" catchBody "end"
  380           | "try" catchBody • "end"

    "end"    shift, and go to state 230
    "catch"  shift, and go to state 231


State 94

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  389 returnControl: "return" functionCall •  ["end of file", "end of line", ",", ";", ")", "}", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 389 (returnControl)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152


State 95

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  388 returnControl: "return" variable •  ["end of file", "end of line", ",", ";", ")", "}", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 388 (returnControl)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161


State 96

   44 implicitCallable: "%t or %T" •

    $default  reduce using rule 44 (implicitCallable)


State 97

   45 implicitCallable: "%f or %F" •

    $default  reduce using rule 45 (implicitCallable)


State 98

   43 implicitCallable: "$" •

    $default  reduce using rule 43 (implicitCallable)


State 99

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   50                   | "identifier" "(" • functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   52                   | "identifier" "(" • ")"
   53                   | • "identifier" "{" "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 232
    ":"               shift, and go to state 233
    "("               shift, and go to state 9
    ")"               shift, and go to state 234
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 235
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall         go to state 236
    simpleFunctionCall   go to state 39
    functionArgs         go to state 237
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 238
    cell                 go to state 44
    matrix               go to state 45
    variableDeclaration  go to state 239
    assignable           go to state 47
    multipleResults      go to state 48


State 100

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   51                   | "identifier" "{" • functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   53                   | "identifier" "{" • "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 232
    ":"               shift, and go to state 233
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "}"               shift, and go to state 240
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 235
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall         go to state 236
    simpleFunctionCall   go to state 39
    functionArgs         go to state 241
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 238
    cell                 go to state 44
    matrix               go to state 45
    variableDeclaration  go to state 239
    assignable           go to state 47
    multipleResults      go to state 48


State 101

   42 implicitCallable: "string" •

    $default  reduce using rule 42 (implicitCallable)


State 102

   38 implicitCallable: "identifier" •

    $default  reduce using rule 38 (implicitCallable)


State 103

   39 implicitCallable: "integer" •

    $default  reduce using rule 39 (implicitCallable)


State 104

   41 implicitCallable: "float" •

    $default  reduce using rule 41 (implicitCallable)


State 105

   40 implicitCallable: "number" •

    $default  reduce using rule 40 (implicitCallable)


State 106

   47 implicitCallable: "path" •

    $default  reduce using rule 47 (implicitCallable)


State 107

   37 implicitFunctionCall: "identifier" implicitCallable •  ["end of file", "end of line", "%t or %T", "%f or %F", "$", ",", ";", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   46 implicitCallable: implicitCallable • "." "identifier"

    "."  shift, and go to state 242

    $default  reduce using rule 37 (implicitFunctionCall)


State 108

    0 $accept: program "end of file" •

    $default  accept


State 109

    6 expressions: recursiveExpression expression •  ["end of file", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch"]
    7            | recursiveExpression expression • "line comment"
   10 recursiveExpression: recursiveExpression expression • expressionLineBreak
   11                    | recursiveExpression expression • "line comment" expressionLineBreak
   14 expressionLineBreak: • ";"
   15                    | • ","
   16                    | • "end of line"
   17                    | • expressionLineBreak ";"
   18                    | • expressionLineBreak ","
   19                    | • expressionLineBreak "end of line"

    "end of line"   shift, and go to state 2
    ","             shift, and go to state 7
    ";"             shift, and go to state 8
    "line comment"  shift, and go to state 243

    $default  reduce using rule 6 (expressions)

    expressionLineBreak  go to state 244


State 110

   19 expressionLineBreak: expressionLineBreak "end of line" •

    $default  reduce using rule 19 (expressionLineBreak)


State 111

   18 expressionLineBreak: expressionLineBreak "," •

    $default  reduce using rule 18 (expressionLineBreak)


State 112

   17 expressionLineBreak: expressionLineBreak ";" •

    $default  reduce using rule 17 (expressionLineBreak)


State 113

    2 program: expressionLineBreak expressions •

    $default  reduce using rule 2 (program)


State 114

    9 expressions: expression "line comment" •  ["end of file", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch"]
   12 recursiveExpression: expression "line comment" • expressionLineBreak
   14 expressionLineBreak: • ";"
   15                    | • ","
   16                    | • "end of line"
   17                    | • expressionLineBreak ";"
   18                    | • expressionLineBreak ","
   19                    | • expressionLineBreak "end of line"

    "end of line"  shift, and go to state 2
    ","            shift, and go to state 7
    ";"            shift, and go to state 8

    $default  reduce using rule 9 (expressions)

    expressionLineBreak  go to state 245


State 115

   13 recursiveExpression: expression expressionLineBreak •  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   17 expressionLineBreak: expressionLineBreak • ";"
   18                    | expressionLineBreak • ","
   19                    | expressionLineBreak • "end of line"

    "end of line"  shift, and go to state 110
    ","            shift, and go to state 111
    ";"            shift, and go to state 112

    $default  reduce using rule 13 (recursiveExpression)


State 116

   36 implicitFunctionCall: implicitFunctionCall implicitCallable •  ["end of file", "end of line", "%t or %T", "%f or %F", "$", ",", ";", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   46 implicitCallable: implicitCallable • "." "identifier"

    "."  shift, and go to state 242

    $default  reduce using rule 36 (implicitFunctionCall)


State 117

  137 operation: functionCall "'" •

    $default  reduce using rule 137 (operation)


State 118

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  167 listableBegin: ":" • variable
  168              | ":" • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 246
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 247
    cell                go to state 44
    matrix              go to state 45


State 119

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  197         | functionCall "(" • functionArgs ")"
  198         | • functionCall "(" ")"
  198         | functionCall "(" • ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  258           | functionCall "(" • functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 232
    ":"               shift, and go to state 233
    "("               shift, and go to state 9
    ")"               shift, and go to state 248
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 235
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall         go to state 236
    simpleFunctionCall   go to state 39
    functionArgs         go to state 249
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 238
    cell                 go to state 44
    matrix               go to state 45
    variableDeclaration  go to state 239
    assignable           go to state 47
    multipleResults      go to state 48


State 120

  177 variable: functionCall "." • "identifier"
  178         | functionCall "." • keywords
  253 assignable: functionCall "." • "identifier"
  254           | functionCall "." • keywords
  394 keywords: • "if"
  395         | • "then"
  396         | • "else"
  397         | • "elseif"
  398         | • "end"
  399         | • "select"
  400         | • "switch"
  401         | • "otherwise"
  402         | • "case"
  403         | • "function"
  404         | • "endfunction"
  405         | • "for"
  406         | • "while"
  407         | • "do"
  408         | • "break"
  409         | • "try"
  410         | • "catch"
  411         | • "return"

    "if"           shift, and go to state 250
    "then"         shift, and go to state 251
    "else"         shift, and go to state 252
    "elseif"       shift, and go to state 253
    "end"          shift, and go to state 254
    "select"       shift, and go to state 255
    "switch"       shift, and go to state 256
    "case"         shift, and go to state 257
    "otherwise"    shift, and go to state 258
    "function"     shift, and go to state 259
    "endfunction"  shift, and go to state 260
    "for"          shift, and go to state 261
    "while"        shift, and go to state 262
    "do"           shift, and go to state 263
    "break"        shift, and go to state 264
    "try"          shift, and go to state 265
    "catch"        shift, and go to state 266
    "return"       shift, and go to state 267
    "identifier"   shift, and go to state 268

    keywords  go to state 269


State 121

  138 operation: functionCall ".'" •

    $default  reduce using rule 138 (operation)


State 122

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  139 rightOperand: "+" • variable
  140             | "+" • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 270
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 271
    cell                go to state 44
    matrix              go to state 45


State 123

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  141 rightOperand: "-" • variable
  142             | "-" • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 272
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 273
    cell                go to state 44
    matrix              go to state 45


State 124

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  143 rightOperand: "*" • variable
  144             | "*" • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 274
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 275
    cell                go to state 44
    matrix              go to state 45


State 125

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  145 rightOperand: ".*" • variable
  146             | ".*" • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 276
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 277
    cell                go to state 44
    matrix              go to state 45


State 126

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  147 rightOperand: ".*." • variable
  148             | ".*." • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 278
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 279
    cell                go to state 44
    matrix              go to state 45


State 127

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  149 rightOperand: "*." • variable
  150             | "*." • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 280
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 281
    cell                go to state 44
    matrix              go to state 45


State 128

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  151 rightOperand: "/" • variable
  152             | "/" • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 282
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 283
    cell                go to state 44
    matrix              go to state 45


State 129

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  153 rightOperand: "./" • variable
  154             | "./" • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 284
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 285
    cell                go to state 44
    matrix              go to state 45


State 130

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  157 rightOperand: "/." • variable
  158             | "/." • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 286
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 287
    cell                go to state 44
    matrix              go to state 45


State 131

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  155 rightOperand: "./." • variable
  156             | "./." • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 288
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 289
    cell                go to state 44
    matrix              go to state 45


State 132

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  159 rightOperand: "\\" • variable
  160             | "\\" • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 290
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 291
    cell                go to state 44
    matrix              go to state 45


State 133

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  161 rightOperand: ".\\" • variable
  162             | ".\\" • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 292
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 293
    cell                go to state 44
    matrix              go to state 45


State 134

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  165 rightOperand: "\\." • variable
  166             | "\\." • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 294
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 295
    cell                go to state 44
    matrix              go to state 45


State 135

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  163 rightOperand: ".\\." • variable
  164             | ".\\." • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 296
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 297
    cell                go to state 44
    matrix              go to state 45


State 136

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  129          | functionCall "** or ^" • variable
  130          | • functionCall "** or ^" functionCall
  130          | functionCall "** or ^" • functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 298
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 299
    cell                go to state 44
    matrix              go to state 45


State 137

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  133          | functionCall ".^" • variable
  134          | • functionCall ".^" functionCall
  134          | functionCall ".^" • functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 300
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 301
    cell                go to state 44
    matrix              go to state 45


State 138

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  103 rightComparable: "==" • variable
  104                | "==" • functionCall
  105                | "==" • ":"
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ":"               shift, and go to state 302
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 303
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 304
    cell                go to state 44
    matrix              go to state 45


State 139

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  106 rightComparable: "<> or ~=" • variable
  107                | "<> or ~=" • functionCall
  108                | "<> or ~=" • ":"
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ":"               shift, and go to state 305
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 306
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 307
    cell                go to state 44
    matrix              go to state 45


State 140

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  112 rightComparable: "<" • variable
  113                | "<" • functionCall
  114                | "<" • ":"
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ":"               shift, and go to state 308
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 309
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 310
    cell                go to state 44
    matrix              go to state 45


State 141

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  118 rightComparable: "<=" • variable
  119                | "<=" • functionCall
  120                | "<=" • ":"
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ":"               shift, and go to state 311
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 312
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 313
    cell                go to state 44
    matrix              go to state 45


State 142

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  109 rightComparable: ">" • variable
  110                | ">" • functionCall
  111                | ">" • ":"
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ":"               shift, and go to state 314
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 315
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 316
    cell                go to state 44
    matrix              go to state 45


State 143

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  115 rightComparable: ">=" • variable
  116                | ">=" • functionCall
  117                | ">=" • ":"
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ":"               shift, and go to state 317
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 318
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 319
    cell                go to state 44
    matrix              go to state 45


State 144

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
   91 rightComparable: "&" • variable
   92                | "&" • functionCall
   93                | "&" • ":"
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ":"               shift, and go to state 320
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 321
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 322
    cell                go to state 44
    matrix              go to state 45


State 145

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
   94 rightComparable: "&&" • variable
   95                | "&&" • functionCall
   96                | "&&" • ":"
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ":"               shift, and go to state 323
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 324
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 325
    cell                go to state 44
    matrix              go to state 45


State 146

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
   97 rightComparable: "|" • variable
   98                | "|" • functionCall
   99                | "|" • ":"
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ":"               shift, and go to state 326
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 327
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 328
    cell                go to state 44
    matrix              go to state 45


State 147

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  100 rightComparable: "||" • variable
  101                | "||" • functionCall
  102                | "||" • ":"
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ":"               shift, and go to state 329
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 330
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 331
    cell                go to state 44
    matrix              go to state 45


State 148

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  244 variableDeclaration: functionCall "=" • variable
  245                    | functionCall "=" • functionCall
  247                    | functionCall "=" • ":"
  249                    | functionCall "=" • returnControl
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ":"               shift, and go to state 332
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 333
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 334
    cell                go to state 44
    matrix              go to state 45
    returnControl       go to state 335


State 149

   90 comparison: functionCall rightComparable •

    $default  reduce using rule 90 (comparison)


State 150

  122 operation: functionCall rightOperand •

    $default  reduce using rule 122 (operation)


State 151

  169 listableEnd: listableBegin • ":" variable
  170            | listableBegin • ":" functionCall
  171            | listableBegin •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    ":"  shift, and go to state 336

    $default  reduce using rule 171 (listableEnd)

    Conflict between rule 171 and token ":" resolved as shift (LISTABLE < ":").


State 152

  180 variable: functionCall listableEnd •

    $default  reduce using rule 180 (variable)


State 153

  135 operation: variable "'" •

    $default  reduce using rule 135 (operation)


State 154

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  196         | variable "(" • functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  257           | variable "(" • functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 232
    ":"               shift, and go to state 233
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 235
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall         go to state 236
    simpleFunctionCall   go to state 39
    functionArgs         go to state 337
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 238
    cell                 go to state 44
    matrix               go to state 45
    variableDeclaration  go to state 239
    assignable           go to state 47
    multipleResults      go to state 48


State 155

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
  174 variable: variable "." • "identifier"
  175         | variable "." • keywords
  176         | variable "." • functionCall
  250 assignable: variable "." • "identifier"
  251           | variable "." • keywords
  252           | variable "." • functionCall
  394 keywords: • "if"
  395         | • "then"
  396         | • "else"
  397         | • "elseif"
  398         | • "end"
  399         | • "select"
  400         | • "switch"
  401         | • "otherwise"
  402         | • "case"
  403         | • "function"
  404         | • "endfunction"
  405         | • "for"
  406         | • "while"
  407         | • "do"
  408         | • "break"
  409         | • "try"
  410         | • "catch"
  411         | • "return"

    "("            shift, and go to state 338
    "if"           shift, and go to state 250
    "then"         shift, and go to state 251
    "else"         shift, and go to state 252
    "elseif"       shift, and go to state 253
    "end"          shift, and go to state 254
    "select"       shift, and go to state 255
    "switch"       shift, and go to state 256
    "case"         shift, and go to state 257
    "otherwise"    shift, and go to state 258
    "function"     shift, and go to state 259
    "endfunction"  shift, and go to state 260
    "for"          shift, and go to state 261
    "while"        shift, and go to state 262
    "do"           shift, and go to state 263
    "break"        shift, and go to state 264
    "try"          shift, and go to state 265
    "catch"        shift, and go to state 266
    "return"       shift, and go to state 267
    "identifier"   shift, and go to state 339

    functionCall        go to state 340
    simpleFunctionCall  go to state 39
    keywords            go to state 341


State 156

  136 operation: variable ".'" •

    $default  reduce using rule 136 (operation)


State 157

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  127          | variable "** or ^" • variable
  128          | • variable "** or ^" functionCall
  128          | variable "** or ^" • functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 342
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 343
    cell                go to state 44
    matrix              go to state 45


State 158

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  131          | variable ".^" • variable
  132          | • variable ".^" functionCall
  132          | variable ".^" • functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 344
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 345
    cell                go to state 44
    matrix              go to state 45


State 159

   89 comparison: variable rightComparable •

    $default  reduce using rule 89 (comparison)


State 160

  121 operation: variable rightOperand •

    $default  reduce using rule 121 (operation)


State 161

  179 variable: variable listableEnd •

    $default  reduce using rule 179 (variable)


State 162

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: assignable "=" • variable
  243                    | assignable "=" • functionCall
  246                    | assignable "=" • ":"
  248                    | assignable "=" • returnControl
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ":"               shift, and go to state 346
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 347
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 348
    cell                go to state 44
    matrix              go to state 45
    returnControl       go to state 349


State 163

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  318 selectable: functionCall •  ["end of line", ",", ";", "line comment"]

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 318 (selectable)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152


State 164

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  317 selectable: variable •  ["end of line", ",", ";", "line comment"]

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 317 (selectable)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161


State 165

  304 selectControl: select selectable • selectConditionBreak casesControl "end"
  305              | select selectable • selectConditionBreak casesControl defaultCase elseBody "end"
  306              | select selectable • "line comment" selectConditionBreak casesControl "end"
  307              | select selectable • "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  319 selectConditionBreak: • "end of line"
  320                     | • "," "end of line"
  321                     | • ";" "end of line"
  322                     | • ","
  323                     | • ";"

    "end of line"   shift, and go to state 350
    ","             shift, and go to state 351
    ";"             shift, and go to state 352
    "line comment"  shift, and go to state 353

    selectConditionBreak  go to state 354


State 166

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  217       | "[" matrixOrCellColumns • "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  223 matrixOrCellLineBreak: • ";"
  224                      | • "end of line"
  225                      | • matrixOrCellLineBreak "end of line"
  226                      | • matrixOrCellLineBreak ";"
  227 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  228                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  230                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  231                    | matrixOrCellColumns • variable
  232                    | matrixOrCellColumns • functionCall
  233                    | matrixOrCellColumns • "line comment"
  234                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  238 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  239                         | • matrixOrCellColumnsBreak "spaces"
  240                         | • ","
  241                         | • "spaces"

    "end of line"     shift, and go to state 183
    "spaces"          shift, and go to state 184
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 185
    ";"               shift, and go to state 186
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "]"               shift, and go to state 355
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 188

    functionCall              go to state 189
    simpleFunctionCall        go to state 39
    comparison                go to state 41
    operation                 go to state 42
    variable                  go to state 190
    cell                      go to state 44
    matrix                    go to state 45
    matrixOrCellLineBreak     go to state 191
    matrixOrCellColumnsBreak  go to state 192


State 167

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  197         | functionCall "(" • functionArgs ")"
  198         | • functionCall "(" ")"
  198         | functionCall "(" • ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 232
    ":"               shift, and go to state 233
    "("               shift, and go to state 9
    ")"               shift, and go to state 248
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 235
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall         go to state 236
    simpleFunctionCall   go to state 39
    functionArgs         go to state 356
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 238
    cell                 go to state 44
    matrix               go to state 45
    variableDeclaration  go to state 239
    assignable           go to state 47
    multipleResults      go to state 48


State 168

  177 variable: functionCall "." • "identifier"
  178         | functionCall "." • keywords
  394 keywords: • "if"
  395         | • "then"
  396         | • "else"
  397         | • "elseif"
  398         | • "end"
  399         | • "select"
  400         | • "switch"
  401         | • "otherwise"
  402         | • "case"
  403         | • "function"
  404         | • "endfunction"
  405         | • "for"
  406         | • "while"
  407         | • "do"
  408         | • "break"
  409         | • "try"
  410         | • "catch"
  411         | • "return"

    "if"           shift, and go to state 250
    "then"         shift, and go to state 251
    "else"         shift, and go to state 252
    "elseif"       shift, and go to state 253
    "end"          shift, and go to state 254
    "select"       shift, and go to state 255
    "switch"       shift, and go to state 256
    "case"         shift, and go to state 257
    "otherwise"    shift, and go to state 258
    "function"     shift, and go to state 259
    "endfunction"  shift, and go to state 260
    "for"          shift, and go to state 261
    "while"        shift, and go to state 262
    "do"           shift, and go to state 263
    "break"        shift, and go to state 264
    "try"          shift, and go to state 265
    "catch"        shift, and go to state 266
    "return"       shift, and go to state 267
    "identifier"   shift, and go to state 357

    keywords  go to state 358


State 169

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  196         | variable "(" • functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 232
    ":"               shift, and go to state 233
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 235
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall         go to state 236
    simpleFunctionCall   go to state 39
    functionArgs         go to state 359
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 238
    cell                 go to state 44
    matrix               go to state 45
    variableDeclaration  go to state 239
    assignable           go to state 47
    multipleResults      go to state 48


State 170

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
  174 variable: variable "." • "identifier"
  175         | variable "." • keywords
  176         | variable "." • functionCall
  394 keywords: • "if"
  395         | • "then"
  396         | • "else"
  397         | • "elseif"
  398         | • "end"
  399         | • "select"
  400         | • "switch"
  401         | • "otherwise"
  402         | • "case"
  403         | • "function"
  404         | • "endfunction"
  405         | • "for"
  406         | • "while"
  407         | • "do"
  408         | • "break"
  409         | • "try"
  410         | • "catch"
  411         | • "return"

    "("            shift, and go to state 338
    "if"           shift, and go to state 250
    "then"         shift, and go to state 251
    "else"         shift, and go to state 252
    "elseif"       shift, and go to state 253
    "end"          shift, and go to state 254
    "select"       shift, and go to state 255
    "switch"       shift, and go to state 256
    "case"         shift, and go to state 257
    "otherwise"    shift, and go to state 258
    "function"     shift, and go to state 259
    "endfunction"  shift, and go to state 260
    "for"          shift, and go to state 261
    "while"        shift, and go to state 262
    "do"           shift, and go to state 263
    "break"        shift, and go to state 264
    "try"          shift, and go to state 265
    "catch"        shift, and go to state 266
    "return"       shift, and go to state 267
    "identifier"   shift, and go to state 360

    functionCall        go to state 361
    simpleFunctionCall  go to state 39
    keywords            go to state 362


State 171

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  202 variableFields: functionCall "," • functionCall
  203               | functionCall "," • variable
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 363
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 364
    cell                go to state 44
    matrix              go to state 45


State 172

   49 functionCall: "(" functionCall ")" •

    $default  reduce using rule 49 (functionCall)


State 173

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  201 variableFields: variable "," • variable
  204               | variable "," • functionCall
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 365
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 366
    cell                go to state 44
    matrix              go to state 45


State 174

  193 variable: "(" variable ")" •

    $default  reduce using rule 193 (variable)


State 175

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  199 variableFields: variableFields "," • variable
  200               | variableFields "," • functionCall
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 367
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 368
    cell                go to state 44
    matrix              go to state 45


State 176

  194 variable: "(" variableFields ")" •

    $default  reduce using rule 194 (variable)


State 177

  219 matrix: "[" "end of line" "]" •

    $default  reduce using rule 219 (matrix)


State 178

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  214       | "[" "end of line" matrixOrCellLines • "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  216       | "[" "end of line" matrixOrCellLines • matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  221 matrixOrCellLines: matrixOrCellLines • matrixOrCellLine
  227 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  228                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  230                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  231                    | • matrixOrCellColumns variable
  232                    | • matrixOrCellColumns functionCall
  233                    | • matrixOrCellColumns "line comment"
  234                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  235                    | • variable
  236                    | • functionCall
  237                    | • "line comment"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "]"               shift, and go to state 369
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 66

    functionCall         go to state 67
    simpleFunctionCall   go to state 39
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 68
    cell                 go to state 44
    matrix               go to state 45
    matrixOrCellLine     go to state 181
    matrixOrCellColumns  go to state 370


State 179

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  218       | "[" "end of line" matrixOrCellColumns • "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  223 matrixOrCellLineBreak: • ";"
  224                      | • "end of line"
  225                      | • matrixOrCellLineBreak "end of line"
  226                      | • matrixOrCellLineBreak ";"
  227 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  228                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  230                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  231                    | matrixOrCellColumns • variable
  232                    | matrixOrCellColumns • functionCall
  233                    | matrixOrCellColumns • "line comment"
  234                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  238 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  239                         | • matrixOrCellColumnsBreak "spaces"
  240                         | • ","
  241                         | • "spaces"

    "end of line"     shift, and go to state 183
    "spaces"          shift, and go to state 184
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 185
    ";"               shift, and go to state 186
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "]"               shift, and go to state 371
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 188

    functionCall              go to state 189
    simpleFunctionCall        go to state 39
    comparison                go to state 41
    operation                 go to state 42
    variable                  go to state 190
    cell                      go to state 44
    matrix                    go to state 45
    matrixOrCellLineBreak     go to state 191
    matrixOrCellColumnsBreak  go to state 192


State 180

  213 matrix: "[" matrixOrCellLines "]" •

    $default  reduce using rule 213 (matrix)


State 181

  221 matrixOrCellLines: matrixOrCellLines matrixOrCellLine •

    $default  reduce using rule 221 (matrixOrCellLines)


State 182

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  215       | "[" matrixOrCellLines matrixOrCellColumns • "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  223 matrixOrCellLineBreak: • ";"
  224                      | • "end of line"
  225                      | • matrixOrCellLineBreak "end of line"
  226                      | • matrixOrCellLineBreak ";"
  227 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  228                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  230                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  231                    | matrixOrCellColumns • variable
  232                    | matrixOrCellColumns • functionCall
  233                    | matrixOrCellColumns • "line comment"
  234                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  238 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  239                         | • matrixOrCellColumnsBreak "spaces"
  240                         | • ","
  241                         | • "spaces"

    "end of line"     shift, and go to state 183
    "spaces"          shift, and go to state 184
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 185
    ";"               shift, and go to state 186
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "]"               shift, and go to state 372
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 188

    functionCall              go to state 189
    simpleFunctionCall        go to state 39
    comparison                go to state 41
    operation                 go to state 42
    variable                  go to state 190
    cell                      go to state 44
    matrix                    go to state 45
    matrixOrCellLineBreak     go to state 191
    matrixOrCellColumnsBreak  go to state 192


State 183

  224 matrixOrCellLineBreak: "end of line" •

    $default  reduce using rule 224 (matrixOrCellLineBreak)


State 184

  241 matrixOrCellColumnsBreak: "spaces" •

    $default  reduce using rule 241 (matrixOrCellColumnsBreak)


State 185

  240 matrixOrCellColumnsBreak: "," •

    $default  reduce using rule 240 (matrixOrCellColumnsBreak)


State 186

  223 matrixOrCellLineBreak: ";" •

    $default  reduce using rule 223 (matrixOrCellLineBreak)


State 187

  217 matrix: "[" matrixOrCellColumns "]" •  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  259 multipleResults: "[" matrixOrCellColumns "]" •  ["="]

    "="       reduce using rule 259 (multipleResults)
    $default  reduce using rule 217 (matrix)


State 188

  233 matrixOrCellColumns: matrixOrCellColumns "line comment" •

    $default  reduce using rule 233 (matrixOrCellColumns)


State 189

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  232 matrixOrCellColumns: matrixOrCellColumns functionCall •  ["end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 232 (matrixOrCellColumns)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 232 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 232 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 232 and token "-" resolved as shift (HIGHLEVEL < "-").


State 190

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  231 matrixOrCellColumns: matrixOrCellColumns variable •  ["end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 231 (matrixOrCellColumns)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 231 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 231 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 231 and token "-" resolved as shift (HIGHLEVEL < "-").


State 191

  225 matrixOrCellLineBreak: matrixOrCellLineBreak • "end of line"
  226                      | matrixOrCellLineBreak • ";"
  227 matrixOrCellLine: matrixOrCellColumns matrixOrCellLineBreak •  ["%t or %T", "%f or %F", "~ or @", "$", "(", "[", "]", "{", "}", "+", "-", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 373
    ";"            shift, and go to state 374

    $default  reduce using rule 227 (matrixOrCellLine)


State 192

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  223 matrixOrCellLineBreak: • ";"
  224                      | • "end of line"
  225                      | • matrixOrCellLineBreak "end of line"
  226                      | • matrixOrCellLineBreak ";"
  228 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak • matrixOrCellLineBreak
  229 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak • variable
  230                    | matrixOrCellColumns matrixOrCellColumnsBreak • functionCall
  234                    | matrixOrCellColumns matrixOrCellColumnsBreak • "line comment"
  238 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak • ","
  239                         | matrixOrCellColumnsBreak • "spaces"

    "end of line"     shift, and go to state 183
    "spaces"          shift, and go to state 375
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 376
    ";"               shift, and go to state 186
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 377

    functionCall           go to state 378
    simpleFunctionCall     go to state 39
    comparison             go to state 41
    operation              go to state 42
    variable               go to state 379
    cell                   go to state 44
    matrix                 go to state 45
    matrixOrCellLineBreak  go to state 380


State 193

  211 cell: "{" "end of line" "}" •

    $default  reduce using rule 211 (cell)


State 194

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  206     | "{" "end of line" matrixOrCellLines • "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  208     | "{" "end of line" matrixOrCellLines • matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  221 matrixOrCellLines: matrixOrCellLines • matrixOrCellLine
  227 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  228                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  230                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  231                    | • matrixOrCellColumns variable
  232                    | • matrixOrCellColumns functionCall
  233                    | • matrixOrCellColumns "line comment"
  234                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  235                    | • variable
  236                    | • functionCall
  237                    | • "line comment"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "}"               shift, and go to state 381
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 66

    functionCall         go to state 67
    simpleFunctionCall   go to state 39
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 68
    cell                 go to state 44
    matrix               go to state 45
    matrixOrCellLine     go to state 181
    matrixOrCellColumns  go to state 382


State 195

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  210     | "{" "end of line" matrixOrCellColumns • "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  223 matrixOrCellLineBreak: • ";"
  224                      | • "end of line"
  225                      | • matrixOrCellLineBreak "end of line"
  226                      | • matrixOrCellLineBreak ";"
  227 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  228                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  230                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  231                    | matrixOrCellColumns • variable
  232                    | matrixOrCellColumns • functionCall
  233                    | matrixOrCellColumns • "line comment"
  234                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  238 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  239                         | • matrixOrCellColumnsBreak "spaces"
  240                         | • ","
  241                         | • "spaces"

    "end of line"     shift, and go to state 183
    "spaces"          shift, and go to state 184
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 185
    ";"               shift, and go to state 186
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "}"               shift, and go to state 383
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 188

    functionCall              go to state 189
    simpleFunctionCall        go to state 39
    comparison                go to state 41
    operation                 go to state 42
    variable                  go to state 190
    cell                      go to state 44
    matrix                    go to state 45
    matrixOrCellLineBreak     go to state 191
    matrixOrCellColumnsBreak  go to state 192


State 196

  205 cell: "{" matrixOrCellLines "}" •

    $default  reduce using rule 205 (cell)


State 197

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  207     | "{" matrixOrCellLines matrixOrCellColumns • "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  223 matrixOrCellLineBreak: • ";"
  224                      | • "end of line"
  225                      | • matrixOrCellLineBreak "end of line"
  226                      | • matrixOrCellLineBreak ";"
  227 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  228                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  230                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  231                    | matrixOrCellColumns • variable
  232                    | matrixOrCellColumns • functionCall
  233                    | matrixOrCellColumns • "line comment"
  234                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  238 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  239                         | • matrixOrCellColumnsBreak "spaces"
  240                         | • ","
  241                         | • "spaces"

    "end of line"     shift, and go to state 183
    "spaces"          shift, and go to state 184
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 185
    ";"               shift, and go to state 186
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "}"               shift, and go to state 384
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 188

    functionCall              go to state 189
    simpleFunctionCall        go to state 39
    comparison                go to state 41
    operation                 go to state 42
    variable                  go to state 190
    cell                      go to state 44
    matrix                    go to state 45
    matrixOrCellLineBreak     go to state 191
    matrixOrCellColumnsBreak  go to state 192


State 198

  209 cell: "{" matrixOrCellColumns "}" •

    $default  reduce using rule 209 (cell)


State 199

  261 argumentsControl: "arguments" "end of line" "end" •

    $default  reduce using rule 261 (argumentsControl)


State 200

  268 argumentName: "identifier" •  ["end of line", "(", "{", "=", "identifier", "line comment"]
  269             | "identifier" • "." "identifier"

    "."  shift, and go to state 385

    $default  reduce using rule 268 (argumentName)


State 201

  265 argumentsDeclarations: "line comment" • "end of line"

    "end of line"  shift, and go to state 386


State 202

  260 argumentsControl: "arguments" "end of line" argumentsDeclarations • "end"
  262 argumentsDeclarations: argumentsDeclarations • argumentDeclaration lineEnd
  263                      | argumentsDeclarations • "line comment" "end of line"
  266 argumentDeclaration: • argumentName argumentDimension argumentValidators argumentDefaultValue
  267                    | • argumentName argumentDimension "identifier" argumentValidators argumentDefaultValue
  268 argumentName: • "identifier"
  269             | • "identifier" "." "identifier"

    "end"           shift, and go to state 387
    "identifier"    shift, and go to state 200
    "line comment"  shift, and go to state 388

    argumentDeclaration  go to state 389
    argumentName         go to state 204


State 203

  264 argumentsDeclarations: argumentDeclaration • lineEnd
  392 lineEnd: • "end of line"
  393        | • "line comment" "end of line"

    "end of line"   shift, and go to state 390
    "line comment"  shift, and go to state 391

    lineEnd  go to state 392


State 204

  266 argumentDeclaration: argumentName • argumentDimension argumentValidators argumentDefaultValue
  267                    | argumentName • argumentDimension "identifier" argumentValidators argumentDefaultValue
  270 argumentDimension: • "(" functionArgs ")"
  271                  | ε •  ["end of line", "{", "=", "identifier", "line comment"]

    "("  shift, and go to state 393

    $default  reduce using rule 271 (argumentDimension)

    argumentDimension  go to state 394


State 205

  288 ifConditionBreak: "end of line" •

    $default  reduce using rule 288 (ifConditionBreak)


State 206

  286 ifConditionBreak: "," •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  287                 | "," • "end of line"

    "end of line"  shift, and go to state 395

    $default  reduce using rule 286 (ifConditionBreak)


State 207

  284 ifConditionBreak: ";" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  285                 | ";" • "end of line"

    "end of line"  shift, and go to state 396

    $default  reduce using rule 284 (ifConditionBreak)


State 208

  284 ifConditionBreak: • ";"
  285                 | • ";" "end of line"
  286                 | • ","
  287                 | • "," "end of line"
  288                 | • "end of line"
  289 then: "then" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  292     | "then" • ifConditionBreak

    "end of line"  shift, and go to state 205
    ","            shift, and go to state 206
    ";"            shift, and go to state 207

    $default  reduce using rule 289 (then)

    ifConditionBreak  go to state 397


State 209

  290 then: ifConditionBreak • "then"
  291     | ifConditionBreak • "then" "end of line"
  293     | ifConditionBreak •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "then"  shift, and go to state 398

    $default  reduce using rule 293 (then)


State 210

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  277          | "if" condition then • thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  278          | "if" condition then • thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  279          | "if" condition then • thenBody elseIfControl "end"
  280 thenBody: • expressions
  281         | ε •  ["else", "elseif", "end"]
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "else"    reduce using rule 281 (thenBody)
    "elseif"  reduce using rule 281 (thenBody)
    "end"     reduce using rule 281 (thenBody)

    expressions           go to state 399
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    thenBody              go to state 400
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 211

   70 functionDeclaration: "function" "[" "]" • "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

    "="  shift, and go to state 401


State 212

   79 idList: "identifier" •

    $default  reduce using rule 79 (idList)


State 213

   69 functionDeclaration: "function" "[" functionDeclarationReturns • "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

    "]"  shift, and go to state 402


State 214

   74 functionDeclarationReturns: idList •  ["]"]
   78 idList: idList • "," "identifier"

    ","  shift, and go to state 403

    $default  reduce using rule 74 (functionDeclarationReturns)


State 215

   75 functionDeclarationArguments: "(" • idList ")"
   76                             | "(" • ")"
   78 idList: • idList "," "identifier"
   79       | • "identifier"

    ")"           shift, and go to state 404
    "identifier"  shift, and go to state 212

    idList  go to state 405


State 216

   68 functionDeclaration: "function" "identifier" "=" • "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

    "identifier"  shift, and go to state 406


State 217

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments • functionDeclarationBreak functionBody endfunction
   80 functionDeclarationBreak: • lineEnd
   81                         | • ";"
   82                         | • ";" "end of line"
   83                         | • ","
   84                         | • "," "end of line"
  392 lineEnd: • "end of line"
  393        | • "line comment" "end of line"

    "end of line"   shift, and go to state 390
    ","             shift, and go to state 407
    ";"             shift, and go to state 408
    "line comment"  shift, and go to state 391

    functionDeclarationBreak  go to state 409
    lineEnd                   go to state 410


State 218

  345 forControl: "for" "(" "identifier" • "=" forIterator ")" forConditionBreak forBody "end"

    "="  shift, and go to state 411


State 219

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  344 forControl: "for" "identifier" "=" • forIterator forConditionBreak forBody "end"
  346 forIterator: • functionCall
  347            | • variable

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 412
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 413
    cell                go to state 44
    matrix              go to state 45
    forIterator         go to state 414


State 220

  370 whileConditionBreak: "end of line" •

    $default  reduce using rule 370 (whileConditionBreak)


State 221

  361 whileConditionBreak: "," •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  371                    | "," • "end of line"

    "end of line"  shift, and go to state 415

    $default  reduce using rule 361 (whileConditionBreak)


State 222

  362 whileConditionBreak: ";" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  372                    | ";" • "end of line"

    "end of line"  shift, and go to state 416

    $default  reduce using rule 362 (whileConditionBreak)


State 223

  366 whileConditionBreak: "then" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  367                    | "then" • ","
  368                    | "then" • ";"
  376                    | "then" • "end of line"
  377                    | "then" • "," "end of line"
  378                    | "then" • ";" "end of line"

    "end of line"  shift, and go to state 417
    ","            shift, and go to state 418
    ";"            shift, and go to state 419

    $default  reduce using rule 366 (whileConditionBreak)


State 224

  363 whileConditionBreak: "do" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  364                    | "do" • ","
  365                    | "do" • ";"
  373                    | "do" • "end of line"
  374                    | "do" • "," "end of line"
  375                    | "do" • ";" "end of line"

    "end of line"  shift, and go to state 420
    ","            shift, and go to state 421
    ";"            shift, and go to state 422

    $default  reduce using rule 363 (whileConditionBreak)


State 225

  369 whileConditionBreak: "line comment" • "end of line"

    "end of line"  shift, and go to state 423


State 226

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  358             | "while" condition whileConditionBreak • whileBody "end"
  359 whileBody: • expressions
  360          | ε •  ["end"]
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end"  reduce using rule 360 (whileBody)

    expressions           go to state 424
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    whileBody             go to state 425
    tryControl            go to state 55
    returnControl         go to state 56


State 227

  382 catchBody: "end of line" expressions •

    $default  reduce using rule 382 (catchBody)


State 228

  384 catchBody: "," expressions •

    $default  reduce using rule 384 (catchBody)


State 229

  383 catchBody: ";" expressions •

    $default  reduce using rule 383 (catchBody)


State 230

  380 tryControl: "try" catchBody "end" •

    $default  reduce using rule 380 (tryControl)


State 231

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  379           | "try" catchBody "catch" • catchBody "end"
  380           | • "try" catchBody "end"
  381 catchBody: • expressions
  382          | • "end of line" expressions
  383          | • ";" expressions
  384          | • "," expressions
  385          | • "end of line"
  386          | ε •  ["end"]
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "end of line"     shift, and go to state 89
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 90
    ";"               shift, and go to state 91
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end"  reduce using rule 386 (catchBody)

    expressions           go to state 92
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    catchBody             go to state 426
    returnControl         go to state 56


State 232

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   58 functionArgs: "," •  [",", ")", "}"]
   59             | "," • variable
   60             | "," • functionCall
   61             | "," • ":"
   62             | "," • variableDeclaration
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ":"               shift, and go to state 427
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 235
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    $default  reduce using rule 58 (functionArgs)

    functionCall         go to state 428
    simpleFunctionCall   go to state 39
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 429
    cell                 go to state 44
    matrix               go to state 45
    variableDeclaration  go to state 430
    assignable           go to state 47
    multipleResults      go to state 48


State 233

   56 functionArgs: ":" •

    $default  reduce using rule 56 (functionArgs)


State 234

   52 simpleFunctionCall: "identifier" "(" ")" •

    $default  reduce using rule 52 (simpleFunctionCall)


State 235

   50 simpleFunctionCall: "identifier" • "(" functionArgs ")"
   51                   | "identifier" • "{" functionArgs "}"
   52                   | "identifier" • "(" ")"
   53                   | "identifier" • "{" "}"
  184 variable: "identifier" •  ["'", ",", ":", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||"]
  255 assignable: "identifier" •  ["="]

    "("  shift, and go to state 99
    "{"  shift, and go to state 100

    "="       reduce using rule 255 (assignable)
    $default  reduce using rule 184 (variable)

    Conflict between rule 184 and token "(" resolved as shift (LISTABLE < "(").


State 236

   55 functionArgs: functionCall •  [",", ")", "}"]
   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  244 variableDeclaration: functionCall • "=" variable
  245                    | functionCall • "=" functionCall
  247                    | functionCall • "=" ":"
  249                    | functionCall • "=" returnControl
  253 assignable: functionCall • "." "identifier"
  254           | functionCall • "." keywords
  258           | functionCall • "(" functionArgs ")"

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 119
    "."         shift, and go to state 120
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147
    "="         shift, and go to state 148

    $default  reduce using rule 55 (functionArgs)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152


State 237

   50 simpleFunctionCall: "identifier" "(" functionArgs • ")"
   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration

    ","  shift, and go to state 431
    ")"  shift, and go to state 432


State 238

   54 functionArgs: variable •  [",", ")", "}"]
   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  250 assignable: variable • "." "identifier"
  251           | variable • "." keywords
  252           | variable • "." functionCall
  257           | variable • "(" functionArgs ")"

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 154
    "."         shift, and go to state 155
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 54 (functionArgs)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161


State 239

   57 functionArgs: variableDeclaration •

    $default  reduce using rule 57 (functionArgs)


State 240

   53 simpleFunctionCall: "identifier" "{" "}" •

    $default  reduce using rule 53 (simpleFunctionCall)


State 241

   51 simpleFunctionCall: "identifier" "{" functionArgs • "}"
   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration

    ","  shift, and go to state 431
    "}"  shift, and go to state 433


State 242

   46 implicitCallable: implicitCallable "." • "identifier"

    "identifier"  shift, and go to state 434


State 243

    7 expressions: recursiveExpression expression "line comment" •  ["end of file", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch"]
   11 recursiveExpression: recursiveExpression expression "line comment" • expressionLineBreak
   14 expressionLineBreak: • ";"
   15                    | • ","
   16                    | • "end of line"
   17                    | • expressionLineBreak ";"
   18                    | • expressionLineBreak ","
   19                    | • expressionLineBreak "end of line"

    "end of line"  shift, and go to state 2
    ","            shift, and go to state 7
    ";"            shift, and go to state 8

    $default  reduce using rule 7 (expressions)

    expressionLineBreak  go to state 435


State 244

   10 recursiveExpression: recursiveExpression expression expressionLineBreak •  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   17 expressionLineBreak: expressionLineBreak • ";"
   18                    | expressionLineBreak • ","
   19                    | expressionLineBreak • "end of line"

    "end of line"  shift, and go to state 110
    ","            shift, and go to state 111
    ";"            shift, and go to state 112

    $default  reduce using rule 10 (recursiveExpression)


State 245

   12 recursiveExpression: expression "line comment" expressionLineBreak •  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   17 expressionLineBreak: expressionLineBreak • ";"
   18                    | expressionLineBreak • ","
   19                    | expressionLineBreak • "end of line"

    "end of line"  shift, and go to state 110
    ","            shift, and go to state 111
    ";"            shift, and go to state 112

    $default  reduce using rule 12 (recursiveExpression)


State 246

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  168              | ":" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 168 (listableBegin)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 168 and token "'" resolved as shift (":" < "'").
    Conflict between rule 168 and token ":" resolved as reduce (%left ":").
    Conflict between rule 168 and token "(" resolved as shift (":" < "(").
    Conflict between rule 168 and token "." resolved as shift (":" < ".").
    Conflict between rule 168 and token ".'" resolved as shift (":" < ".'").
    Conflict between rule 168 and token "+" resolved as shift (":" < "+").
    Conflict between rule 168 and token "-" resolved as shift (":" < "-").
    Conflict between rule 168 and token "*" resolved as shift (":" < "*").
    Conflict between rule 168 and token ".*" resolved as shift (":" < ".*").
    Conflict between rule 168 and token ".*." resolved as shift (":" < ".*.").
    Conflict between rule 168 and token "*." resolved as shift (":" < "*.").
    Conflict between rule 168 and token "/" resolved as shift (":" < "/").
    Conflict between rule 168 and token "./" resolved as shift (":" < "./").
    Conflict between rule 168 and token "/." resolved as shift (":" < "/.").
    Conflict between rule 168 and token "./." resolved as shift (":" < "./.").
    Conflict between rule 168 and token "\\" resolved as shift (":" < "\\").
    Conflict between rule 168 and token ".\\" resolved as shift (":" < ".\\").
    Conflict between rule 168 and token "\\." resolved as shift (":" < "\\.").
    Conflict between rule 168 and token ".\\." resolved as shift (":" < ".\\.").
    Conflict between rule 168 and token "** or ^" resolved as shift (":" < "** or ^").
    Conflict between rule 168 and token ".^" resolved as shift (":" < ".^").
    Conflict between rule 168 and token "==" resolved as reduce ("==" < ":").
    Conflict between rule 168 and token "<> or ~=" resolved as reduce ("<> or ~=" < ":").
    Conflict between rule 168 and token "<" resolved as reduce ("<" < ":").
    Conflict between rule 168 and token "<=" resolved as reduce ("<=" < ":").
    Conflict between rule 168 and token ">" resolved as reduce (">" < ":").
    Conflict between rule 168 and token ">=" resolved as reduce (">=" < ":").
    Conflict between rule 168 and token "&" resolved as reduce ("&" < ":").
    Conflict between rule 168 and token "&&" resolved as reduce ("&&" < ":").
    Conflict between rule 168 and token "|" resolved as reduce ("|" < ":").
    Conflict between rule 168 and token "||" resolved as reduce ("||" < ":").


State 247

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  167              | ":" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 167 (listableBegin)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 167 and token "'" resolved as shift (":" < "'").
    Conflict between rule 167 and token ":" resolved as reduce (%left ":").
    Conflict between rule 167 and token "(" resolved as shift (":" < "(").
    Conflict between rule 167 and token "." resolved as shift (":" < ".").
    Conflict between rule 167 and token ".'" resolved as shift (":" < ".'").
    Conflict between rule 167 and token "+" resolved as shift (":" < "+").
    Conflict between rule 167 and token "-" resolved as shift (":" < "-").
    Conflict between rule 167 and token "*" resolved as shift (":" < "*").
    Conflict between rule 167 and token ".*" resolved as shift (":" < ".*").
    Conflict between rule 167 and token ".*." resolved as shift (":" < ".*.").
    Conflict between rule 167 and token "*." resolved as shift (":" < "*.").
    Conflict between rule 167 and token "/" resolved as shift (":" < "/").
    Conflict between rule 167 and token "./" resolved as shift (":" < "./").
    Conflict between rule 167 and token "/." resolved as shift (":" < "/.").
    Conflict between rule 167 and token "./." resolved as shift (":" < "./.").
    Conflict between rule 167 and token "\\" resolved as shift (":" < "\\").
    Conflict between rule 167 and token ".\\" resolved as shift (":" < ".\\").
    Conflict between rule 167 and token "\\." resolved as shift (":" < "\\.").
    Conflict between rule 167 and token ".\\." resolved as shift (":" < ".\\.").
    Conflict between rule 167 and token "** or ^" resolved as shift (":" < "** or ^").
    Conflict between rule 167 and token ".^" resolved as shift (":" < ".^").
    Conflict between rule 167 and token "==" resolved as reduce ("==" < ":").
    Conflict between rule 167 and token "<> or ~=" resolved as reduce ("<> or ~=" < ":").
    Conflict between rule 167 and token "<" resolved as reduce ("<" < ":").
    Conflict between rule 167 and token "<=" resolved as reduce ("<=" < ":").
    Conflict between rule 167 and token ">" resolved as reduce (">" < ":").
    Conflict between rule 167 and token ">=" resolved as reduce (">=" < ":").
    Conflict between rule 167 and token "&" resolved as reduce ("&" < ":").
    Conflict between rule 167 and token "&&" resolved as reduce ("&&" < ":").
    Conflict between rule 167 and token "|" resolved as reduce ("|" < ":").
    Conflict between rule 167 and token "||" resolved as reduce ("||" < ":").


State 248

  198 variable: functionCall "(" ")" •

    $default  reduce using rule 198 (variable)


State 249

   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration
  197 variable: functionCall "(" functionArgs • ")"
  258 assignable: functionCall "(" functionArgs • ")"

    ","  shift, and go to state 431
    ")"  shift, and go to state 436


State 250

  394 keywords: "if" •

    $default  reduce using rule 394 (keywords)


State 251

  395 keywords: "then" •

    $default  reduce using rule 395 (keywords)


State 252

  396 keywords: "else" •

    $default  reduce using rule 396 (keywords)


State 253

  397 keywords: "elseif" •

    $default  reduce using rule 397 (keywords)


State 254

  398 keywords: "end" •

    $default  reduce using rule 398 (keywords)


State 255

  399 keywords: "select" •

    $default  reduce using rule 399 (keywords)


State 256

  400 keywords: "switch" •

    $default  reduce using rule 400 (keywords)


State 257

  402 keywords: "case" •

    $default  reduce using rule 402 (keywords)


State 258

  401 keywords: "otherwise" •

    $default  reduce using rule 401 (keywords)


State 259

  403 keywords: "function" •

    $default  reduce using rule 403 (keywords)


State 260

  404 keywords: "endfunction" •

    $default  reduce using rule 404 (keywords)


State 261

  405 keywords: "for" •

    $default  reduce using rule 405 (keywords)


State 262

  406 keywords: "while" •

    $default  reduce using rule 406 (keywords)


State 263

  407 keywords: "do" •

    $default  reduce using rule 407 (keywords)


State 264

  408 keywords: "break" •

    $default  reduce using rule 408 (keywords)


State 265

  409 keywords: "try" •

    $default  reduce using rule 409 (keywords)


State 266

  410 keywords: "catch" •

    $default  reduce using rule 410 (keywords)


State 267

  411 keywords: "return" •

    $default  reduce using rule 411 (keywords)


State 268

  177 variable: functionCall "." "identifier" •  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  253 assignable: functionCall "." "identifier" •  ["="]

    "="       reduce using rule 253 (assignable)
    $default  reduce using rule 177 (variable)


State 269

  178 variable: functionCall "." keywords •  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  254 assignable: functionCall "." keywords •  ["="]

    "="       reduce using rule 254 (assignable)
    $default  reduce using rule 178 (variable)


State 270

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  140             | "+" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 140 (rightOperand)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 140 and token "'" resolved as shift ("+" < "'").
    Conflict between rule 140 and token ":" resolved as reduce (":" < "+").
    Conflict between rule 140 and token "(" resolved as shift ("+" < "(").
    Conflict between rule 140 and token "." resolved as shift ("+" < ".").
    Conflict between rule 140 and token ".'" resolved as shift ("+" < ".'").
    Conflict between rule 140 and token "+" resolved as reduce (%left "+").
    Conflict between rule 140 and token "-" resolved as reduce (%left "-").
    Conflict between rule 140 and token "*" resolved as shift ("+" < "*").
    Conflict between rule 140 and token ".*" resolved as shift ("+" < ".*").
    Conflict between rule 140 and token ".*." resolved as shift ("+" < ".*.").
    Conflict between rule 140 and token "*." resolved as shift ("+" < "*.").
    Conflict between rule 140 and token "/" resolved as shift ("+" < "/").
    Conflict between rule 140 and token "./" resolved as shift ("+" < "./").
    Conflict between rule 140 and token "/." resolved as shift ("+" < "/.").
    Conflict between rule 140 and token "./." resolved as shift ("+" < "./.").
    Conflict between rule 140 and token "\\" resolved as shift ("+" < "\\").
    Conflict between rule 140 and token ".\\" resolved as shift ("+" < ".\\").
    Conflict between rule 140 and token "\\." resolved as shift ("+" < "\\.").
    Conflict between rule 140 and token ".\\." resolved as shift ("+" < ".\\.").
    Conflict between rule 140 and token "** or ^" resolved as shift ("+" < "** or ^").
    Conflict between rule 140 and token ".^" resolved as shift ("+" < ".^").
    Conflict between rule 140 and token "==" resolved as reduce ("==" < "+").
    Conflict between rule 140 and token "<> or ~=" resolved as reduce ("<> or ~=" < "+").
    Conflict between rule 140 and token "<" resolved as reduce ("<" < "+").
    Conflict between rule 140 and token "<=" resolved as reduce ("<=" < "+").
    Conflict between rule 140 and token ">" resolved as reduce (">" < "+").
    Conflict between rule 140 and token ">=" resolved as reduce (">=" < "+").
    Conflict between rule 140 and token "&" resolved as reduce ("&" < "+").
    Conflict between rule 140 and token "&&" resolved as reduce ("&&" < "+").
    Conflict between rule 140 and token "|" resolved as reduce ("|" < "+").
    Conflict between rule 140 and token "||" resolved as reduce ("||" < "+").


State 271

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  139             | "+" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 139 (rightOperand)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 139 and token "'" resolved as shift ("+" < "'").
    Conflict between rule 139 and token ":" resolved as reduce (":" < "+").
    Conflict between rule 139 and token "(" resolved as shift ("+" < "(").
    Conflict between rule 139 and token "." resolved as shift ("+" < ".").
    Conflict between rule 139 and token ".'" resolved as shift ("+" < ".'").
    Conflict between rule 139 and token "+" resolved as reduce (%left "+").
    Conflict between rule 139 and token "-" resolved as reduce (%left "-").
    Conflict between rule 139 and token "*" resolved as shift ("+" < "*").
    Conflict between rule 139 and token ".*" resolved as shift ("+" < ".*").
    Conflict between rule 139 and token ".*." resolved as shift ("+" < ".*.").
    Conflict between rule 139 and token "*." resolved as shift ("+" < "*.").
    Conflict between rule 139 and token "/" resolved as shift ("+" < "/").
    Conflict between rule 139 and token "./" resolved as shift ("+" < "./").
    Conflict between rule 139 and token "/." resolved as shift ("+" < "/.").
    Conflict between rule 139 and token "./." resolved as shift ("+" < "./.").
    Conflict between rule 139 and token "\\" resolved as shift ("+" < "\\").
    Conflict between rule 139 and token ".\\" resolved as shift ("+" < ".\\").
    Conflict between rule 139 and token "\\." resolved as shift ("+" < "\\.").
    Conflict between rule 139 and token ".\\." resolved as shift ("+" < ".\\.").
    Conflict between rule 139 and token "** or ^" resolved as shift ("+" < "** or ^").
    Conflict between rule 139 and token ".^" resolved as shift ("+" < ".^").
    Conflict between rule 139 and token "==" resolved as reduce ("==" < "+").
    Conflict between rule 139 and token "<> or ~=" resolved as reduce ("<> or ~=" < "+").
    Conflict between rule 139 and token "<" resolved as reduce ("<" < "+").
    Conflict between rule 139 and token "<=" resolved as reduce ("<=" < "+").
    Conflict between rule 139 and token ">" resolved as reduce (">" < "+").
    Conflict between rule 139 and token ">=" resolved as reduce (">=" < "+").
    Conflict between rule 139 and token "&" resolved as reduce ("&" < "+").
    Conflict between rule 139 and token "&&" resolved as reduce ("&&" < "+").
    Conflict between rule 139 and token "|" resolved as reduce ("|" < "+").
    Conflict between rule 139 and token "||" resolved as reduce ("||" < "+").


State 272

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  142             | "-" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 142 (rightOperand)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 142 and token "'" resolved as shift ("-" < "'").
    Conflict between rule 142 and token ":" resolved as reduce (":" < "-").
    Conflict between rule 142 and token "(" resolved as shift ("-" < "(").
    Conflict between rule 142 and token "." resolved as shift ("-" < ".").
    Conflict between rule 142 and token ".'" resolved as shift ("-" < ".'").
    Conflict between rule 142 and token "+" resolved as reduce (%left "+").
    Conflict between rule 142 and token "-" resolved as reduce (%left "-").
    Conflict between rule 142 and token "*" resolved as shift ("-" < "*").
    Conflict between rule 142 and token ".*" resolved as shift ("-" < ".*").
    Conflict between rule 142 and token ".*." resolved as shift ("-" < ".*.").
    Conflict between rule 142 and token "*." resolved as shift ("-" < "*.").
    Conflict between rule 142 and token "/" resolved as shift ("-" < "/").
    Conflict between rule 142 and token "./" resolved as shift ("-" < "./").
    Conflict between rule 142 and token "/." resolved as shift ("-" < "/.").
    Conflict between rule 142 and token "./." resolved as shift ("-" < "./.").
    Conflict between rule 142 and token "\\" resolved as shift ("-" < "\\").
    Conflict between rule 142 and token ".\\" resolved as shift ("-" < ".\\").
    Conflict between rule 142 and token "\\." resolved as shift ("-" < "\\.").
    Conflict between rule 142 and token ".\\." resolved as shift ("-" < ".\\.").
    Conflict between rule 142 and token "** or ^" resolved as shift ("-" < "** or ^").
    Conflict between rule 142 and token ".^" resolved as shift ("-" < ".^").
    Conflict between rule 142 and token "==" resolved as reduce ("==" < "-").
    Conflict between rule 142 and token "<> or ~=" resolved as reduce ("<> or ~=" < "-").
    Conflict between rule 142 and token "<" resolved as reduce ("<" < "-").
    Conflict between rule 142 and token "<=" resolved as reduce ("<=" < "-").
    Conflict between rule 142 and token ">" resolved as reduce (">" < "-").
    Conflict between rule 142 and token ">=" resolved as reduce (">=" < "-").
    Conflict between rule 142 and token "&" resolved as reduce ("&" < "-").
    Conflict between rule 142 and token "&&" resolved as reduce ("&&" < "-").
    Conflict between rule 142 and token "|" resolved as reduce ("|" < "-").
    Conflict between rule 142 and token "||" resolved as reduce ("||" < "-").


State 273

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  141             | "-" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 141 (rightOperand)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 141 and token "'" resolved as shift ("-" < "'").
    Conflict between rule 141 and token ":" resolved as reduce (":" < "-").
    Conflict between rule 141 and token "(" resolved as shift ("-" < "(").
    Conflict between rule 141 and token "." resolved as shift ("-" < ".").
    Conflict between rule 141 and token ".'" resolved as shift ("-" < ".'").
    Conflict between rule 141 and token "+" resolved as reduce (%left "+").
    Conflict between rule 141 and token "-" resolved as reduce (%left "-").
    Conflict between rule 141 and token "*" resolved as shift ("-" < "*").
    Conflict between rule 141 and token ".*" resolved as shift ("-" < ".*").
    Conflict between rule 141 and token ".*." resolved as shift ("-" < ".*.").
    Conflict between rule 141 and token "*." resolved as shift ("-" < "*.").
    Conflict between rule 141 and token "/" resolved as shift ("-" < "/").
    Conflict between rule 141 and token "./" resolved as shift ("-" < "./").
    Conflict between rule 141 and token "/." resolved as shift ("-" < "/.").
    Conflict between rule 141 and token "./." resolved as shift ("-" < "./.").
    Conflict between rule 141 and token "\\" resolved as shift ("-" < "\\").
    Conflict between rule 141 and token ".\\" resolved as shift ("-" < ".\\").
    Conflict between rule 141 and token "\\." resolved as shift ("-" < "\\.").
    Conflict between rule 141 and token ".\\." resolved as shift ("-" < ".\\.").
    Conflict between rule 141 and token "** or ^" resolved as shift ("-" < "** or ^").
    Conflict between rule 141 and token ".^" resolved as shift ("-" < ".^").
    Conflict between rule 141 and token "==" resolved as reduce ("==" < "-").
    Conflict between rule 141 and token "<> or ~=" resolved as reduce ("<> or ~=" < "-").
    Conflict between rule 141 and token "<" resolved as reduce ("<" < "-").
    Conflict between rule 141 and token "<=" resolved as reduce ("<=" < "-").
    Conflict between rule 141 and token ">" resolved as reduce (">" < "-").
    Conflict between rule 141 and token ">=" resolved as reduce (">=" < "-").
    Conflict between rule 141 and token "&" resolved as reduce ("&" < "-").
    Conflict between rule 141 and token "&&" resolved as reduce ("&&" < "-").
    Conflict between rule 141 and token "|" resolved as reduce ("|" < "-").
    Conflict between rule 141 and token "||" resolved as reduce ("||" < "-").


State 274

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  144             | "*" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 144 (rightOperand)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 144 and token "'" resolved as shift ("*" < "'").
    Conflict between rule 144 and token ":" resolved as reduce (":" < "*").
    Conflict between rule 144 and token "(" resolved as shift ("*" < "(").
    Conflict between rule 144 and token "." resolved as shift ("*" < ".").
    Conflict between rule 144 and token ".'" resolved as shift ("*" < ".'").
    Conflict between rule 144 and token "+" resolved as reduce ("+" < "*").
    Conflict between rule 144 and token "-" resolved as reduce ("-" < "*").
    Conflict between rule 144 and token "*" resolved as reduce (%left "*").
    Conflict between rule 144 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 144 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 144 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 144 and token "/" resolved as reduce (%left "/").
    Conflict between rule 144 and token "./" resolved as reduce (%left "./").
    Conflict between rule 144 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 144 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 144 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 144 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 144 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 144 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 144 and token "** or ^" resolved as shift ("*" < "** or ^").
    Conflict between rule 144 and token ".^" resolved as shift ("*" < ".^").
    Conflict between rule 144 and token "==" resolved as reduce ("==" < "*").
    Conflict between rule 144 and token "<> or ~=" resolved as reduce ("<> or ~=" < "*").
    Conflict between rule 144 and token "<" resolved as reduce ("<" < "*").
    Conflict between rule 144 and token "<=" resolved as reduce ("<=" < "*").
    Conflict between rule 144 and token ">" resolved as reduce (">" < "*").
    Conflict between rule 144 and token ">=" resolved as reduce (">=" < "*").
    Conflict between rule 144 and token "&" resolved as reduce ("&" < "*").
    Conflict between rule 144 and token "&&" resolved as reduce ("&&" < "*").
    Conflict between rule 144 and token "|" resolved as reduce ("|" < "*").
    Conflict between rule 144 and token "||" resolved as reduce ("||" < "*").


State 275

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  143             | "*" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 143 (rightOperand)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 143 and token "'" resolved as shift ("*" < "'").
    Conflict between rule 143 and token ":" resolved as reduce (":" < "*").
    Conflict between rule 143 and token "(" resolved as shift ("*" < "(").
    Conflict between rule 143 and token "." resolved as shift ("*" < ".").
    Conflict between rule 143 and token ".'" resolved as shift ("*" < ".'").
    Conflict between rule 143 and token "+" resolved as reduce ("+" < "*").
    Conflict between rule 143 and token "-" resolved as reduce ("-" < "*").
    Conflict between rule 143 and token "*" resolved as reduce (%left "*").
    Conflict between rule 143 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 143 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 143 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 143 and token "/" resolved as reduce (%left "/").
    Conflict between rule 143 and token "./" resolved as reduce (%left "./").
    Conflict between rule 143 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 143 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 143 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 143 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 143 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 143 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 143 and token "** or ^" resolved as shift ("*" < "** or ^").
    Conflict between rule 143 and token ".^" resolved as shift ("*" < ".^").
    Conflict between rule 143 and token "==" resolved as reduce ("==" < "*").
    Conflict between rule 143 and token "<> or ~=" resolved as reduce ("<> or ~=" < "*").
    Conflict between rule 143 and token "<" resolved as reduce ("<" < "*").
    Conflict between rule 143 and token "<=" resolved as reduce ("<=" < "*").
    Conflict between rule 143 and token ">" resolved as reduce (">" < "*").
    Conflict between rule 143 and token ">=" resolved as reduce (">=" < "*").
    Conflict between rule 143 and token "&" resolved as reduce ("&" < "*").
    Conflict between rule 143 and token "&&" resolved as reduce ("&&" < "*").
    Conflict between rule 143 and token "|" resolved as reduce ("|" < "*").
    Conflict between rule 143 and token "||" resolved as reduce ("||" < "*").


State 276

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  146             | ".*" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 146 (rightOperand)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 146 and token "'" resolved as shift (".*" < "'").
    Conflict between rule 146 and token ":" resolved as reduce (":" < ".*").
    Conflict between rule 146 and token "(" resolved as shift (".*" < "(").
    Conflict between rule 146 and token "." resolved as shift (".*" < ".").
    Conflict between rule 146 and token ".'" resolved as shift (".*" < ".'").
    Conflict between rule 146 and token "+" resolved as reduce ("+" < ".*").
    Conflict between rule 146 and token "-" resolved as reduce ("-" < ".*").
    Conflict between rule 146 and token "*" resolved as reduce (%left "*").
    Conflict between rule 146 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 146 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 146 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 146 and token "/" resolved as reduce (%left "/").
    Conflict between rule 146 and token "./" resolved as reduce (%left "./").
    Conflict between rule 146 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 146 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 146 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 146 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 146 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 146 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 146 and token "** or ^" resolved as shift (".*" < "** or ^").
    Conflict between rule 146 and token ".^" resolved as shift (".*" < ".^").
    Conflict between rule 146 and token "==" resolved as reduce ("==" < ".*").
    Conflict between rule 146 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".*").
    Conflict between rule 146 and token "<" resolved as reduce ("<" < ".*").
    Conflict between rule 146 and token "<=" resolved as reduce ("<=" < ".*").
    Conflict between rule 146 and token ">" resolved as reduce (">" < ".*").
    Conflict between rule 146 and token ">=" resolved as reduce (">=" < ".*").
    Conflict between rule 146 and token "&" resolved as reduce ("&" < ".*").
    Conflict between rule 146 and token "&&" resolved as reduce ("&&" < ".*").
    Conflict between rule 146 and token "|" resolved as reduce ("|" < ".*").
    Conflict between rule 146 and token "||" resolved as reduce ("||" < ".*").


State 277

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  145             | ".*" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 145 (rightOperand)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 145 and token "'" resolved as shift (".*" < "'").
    Conflict between rule 145 and token ":" resolved as reduce (":" < ".*").
    Conflict between rule 145 and token "(" resolved as shift (".*" < "(").
    Conflict between rule 145 and token "." resolved as shift (".*" < ".").
    Conflict between rule 145 and token ".'" resolved as shift (".*" < ".'").
    Conflict between rule 145 and token "+" resolved as reduce ("+" < ".*").
    Conflict between rule 145 and token "-" resolved as reduce ("-" < ".*").
    Conflict between rule 145 and token "*" resolved as reduce (%left "*").
    Conflict between rule 145 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 145 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 145 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 145 and token "/" resolved as reduce (%left "/").
    Conflict between rule 145 and token "./" resolved as reduce (%left "./").
    Conflict between rule 145 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 145 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 145 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 145 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 145 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 145 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 145 and token "** or ^" resolved as shift (".*" < "** or ^").
    Conflict between rule 145 and token ".^" resolved as shift (".*" < ".^").
    Conflict between rule 145 and token "==" resolved as reduce ("==" < ".*").
    Conflict between rule 145 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".*").
    Conflict between rule 145 and token "<" resolved as reduce ("<" < ".*").
    Conflict between rule 145 and token "<=" resolved as reduce ("<=" < ".*").
    Conflict between rule 145 and token ">" resolved as reduce (">" < ".*").
    Conflict between rule 145 and token ">=" resolved as reduce (">=" < ".*").
    Conflict between rule 145 and token "&" resolved as reduce ("&" < ".*").
    Conflict between rule 145 and token "&&" resolved as reduce ("&&" < ".*").
    Conflict between rule 145 and token "|" resolved as reduce ("|" < ".*").
    Conflict between rule 145 and token "||" resolved as reduce ("||" < ".*").


State 278

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  148             | ".*." functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 148 (rightOperand)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 148 and token "'" resolved as shift (".*." < "'").
    Conflict between rule 148 and token ":" resolved as reduce (":" < ".*.").
    Conflict between rule 148 and token "(" resolved as shift (".*." < "(").
    Conflict between rule 148 and token "." resolved as shift (".*." < ".").
    Conflict between rule 148 and token ".'" resolved as shift (".*." < ".'").
    Conflict between rule 148 and token "+" resolved as reduce ("+" < ".*.").
    Conflict between rule 148 and token "-" resolved as reduce ("-" < ".*.").
    Conflict between rule 148 and token "*" resolved as reduce (%left "*").
    Conflict between rule 148 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 148 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 148 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 148 and token "/" resolved as reduce (%left "/").
    Conflict between rule 148 and token "./" resolved as reduce (%left "./").
    Conflict between rule 148 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 148 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 148 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 148 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 148 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 148 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 148 and token "** or ^" resolved as shift (".*." < "** or ^").
    Conflict between rule 148 and token ".^" resolved as shift (".*." < ".^").
    Conflict between rule 148 and token "==" resolved as reduce ("==" < ".*.").
    Conflict between rule 148 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".*.").
    Conflict between rule 148 and token "<" resolved as reduce ("<" < ".*.").
    Conflict between rule 148 and token "<=" resolved as reduce ("<=" < ".*.").
    Conflict between rule 148 and token ">" resolved as reduce (">" < ".*.").
    Conflict between rule 148 and token ">=" resolved as reduce (">=" < ".*.").
    Conflict between rule 148 and token "&" resolved as reduce ("&" < ".*.").
    Conflict between rule 148 and token "&&" resolved as reduce ("&&" < ".*.").
    Conflict between rule 148 and token "|" resolved as reduce ("|" < ".*.").
    Conflict between rule 148 and token "||" resolved as reduce ("||" < ".*.").


State 279

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  147             | ".*." variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 147 (rightOperand)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 147 and token "'" resolved as shift (".*." < "'").
    Conflict between rule 147 and token ":" resolved as reduce (":" < ".*.").
    Conflict between rule 147 and token "(" resolved as shift (".*." < "(").
    Conflict between rule 147 and token "." resolved as shift (".*." < ".").
    Conflict between rule 147 and token ".'" resolved as shift (".*." < ".'").
    Conflict between rule 147 and token "+" resolved as reduce ("+" < ".*.").
    Conflict between rule 147 and token "-" resolved as reduce ("-" < ".*.").
    Conflict between rule 147 and token "*" resolved as reduce (%left "*").
    Conflict between rule 147 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 147 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 147 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 147 and token "/" resolved as reduce (%left "/").
    Conflict between rule 147 and token "./" resolved as reduce (%left "./").
    Conflict between rule 147 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 147 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 147 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 147 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 147 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 147 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 147 and token "** or ^" resolved as shift (".*." < "** or ^").
    Conflict between rule 147 and token ".^" resolved as shift (".*." < ".^").
    Conflict between rule 147 and token "==" resolved as reduce ("==" < ".*.").
    Conflict between rule 147 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".*.").
    Conflict between rule 147 and token "<" resolved as reduce ("<" < ".*.").
    Conflict between rule 147 and token "<=" resolved as reduce ("<=" < ".*.").
    Conflict between rule 147 and token ">" resolved as reduce (">" < ".*.").
    Conflict between rule 147 and token ">=" resolved as reduce (">=" < ".*.").
    Conflict between rule 147 and token "&" resolved as reduce ("&" < ".*.").
    Conflict between rule 147 and token "&&" resolved as reduce ("&&" < ".*.").
    Conflict between rule 147 and token "|" resolved as reduce ("|" < ".*.").
    Conflict between rule 147 and token "||" resolved as reduce ("||" < ".*.").


State 280

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  150             | "*." functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 150 (rightOperand)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 150 and token "'" resolved as shift ("*." < "'").
    Conflict between rule 150 and token ":" resolved as reduce (":" < "*.").
    Conflict between rule 150 and token "(" resolved as shift ("*." < "(").
    Conflict between rule 150 and token "." resolved as shift ("*." < ".").
    Conflict between rule 150 and token ".'" resolved as shift ("*." < ".'").
    Conflict between rule 150 and token "+" resolved as reduce ("+" < "*.").
    Conflict between rule 150 and token "-" resolved as reduce ("-" < "*.").
    Conflict between rule 150 and token "*" resolved as reduce (%left "*").
    Conflict between rule 150 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 150 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 150 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 150 and token "/" resolved as reduce (%left "/").
    Conflict between rule 150 and token "./" resolved as reduce (%left "./").
    Conflict between rule 150 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 150 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 150 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 150 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 150 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 150 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 150 and token "** or ^" resolved as shift ("*." < "** or ^").
    Conflict between rule 150 and token ".^" resolved as shift ("*." < ".^").
    Conflict between rule 150 and token "==" resolved as reduce ("==" < "*.").
    Conflict between rule 150 and token "<> or ~=" resolved as reduce ("<> or ~=" < "*.").
    Conflict between rule 150 and token "<" resolved as reduce ("<" < "*.").
    Conflict between rule 150 and token "<=" resolved as reduce ("<=" < "*.").
    Conflict between rule 150 and token ">" resolved as reduce (">" < "*.").
    Conflict between rule 150 and token ">=" resolved as reduce (">=" < "*.").
    Conflict between rule 150 and token "&" resolved as reduce ("&" < "*.").
    Conflict between rule 150 and token "&&" resolved as reduce ("&&" < "*.").
    Conflict between rule 150 and token "|" resolved as reduce ("|" < "*.").
    Conflict between rule 150 and token "||" resolved as reduce ("||" < "*.").


State 281

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  149             | "*." variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 149 (rightOperand)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 149 and token "'" resolved as shift ("*." < "'").
    Conflict between rule 149 and token ":" resolved as reduce (":" < "*.").
    Conflict between rule 149 and token "(" resolved as shift ("*." < "(").
    Conflict between rule 149 and token "." resolved as shift ("*." < ".").
    Conflict between rule 149 and token ".'" resolved as shift ("*." < ".'").
    Conflict between rule 149 and token "+" resolved as reduce ("+" < "*.").
    Conflict between rule 149 and token "-" resolved as reduce ("-" < "*.").
    Conflict between rule 149 and token "*" resolved as reduce (%left "*").
    Conflict between rule 149 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 149 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 149 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 149 and token "/" resolved as reduce (%left "/").
    Conflict between rule 149 and token "./" resolved as reduce (%left "./").
    Conflict between rule 149 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 149 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 149 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 149 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 149 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 149 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 149 and token "** or ^" resolved as shift ("*." < "** or ^").
    Conflict between rule 149 and token ".^" resolved as shift ("*." < ".^").
    Conflict between rule 149 and token "==" resolved as reduce ("==" < "*.").
    Conflict between rule 149 and token "<> or ~=" resolved as reduce ("<> or ~=" < "*.").
    Conflict between rule 149 and token "<" resolved as reduce ("<" < "*.").
    Conflict between rule 149 and token "<=" resolved as reduce ("<=" < "*.").
    Conflict between rule 149 and token ">" resolved as reduce (">" < "*.").
    Conflict between rule 149 and token ">=" resolved as reduce (">=" < "*.").
    Conflict between rule 149 and token "&" resolved as reduce ("&" < "*.").
    Conflict between rule 149 and token "&&" resolved as reduce ("&&" < "*.").
    Conflict between rule 149 and token "|" resolved as reduce ("|" < "*.").
    Conflict between rule 149 and token "||" resolved as reduce ("||" < "*.").


State 282

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  152             | "/" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 152 (rightOperand)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 152 and token "'" resolved as shift ("/" < "'").
    Conflict between rule 152 and token ":" resolved as reduce (":" < "/").
    Conflict between rule 152 and token "(" resolved as shift ("/" < "(").
    Conflict between rule 152 and token "." resolved as shift ("/" < ".").
    Conflict between rule 152 and token ".'" resolved as shift ("/" < ".'").
    Conflict between rule 152 and token "+" resolved as reduce ("+" < "/").
    Conflict between rule 152 and token "-" resolved as reduce ("-" < "/").
    Conflict between rule 152 and token "*" resolved as reduce (%left "*").
    Conflict between rule 152 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 152 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 152 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 152 and token "/" resolved as reduce (%left "/").
    Conflict between rule 152 and token "./" resolved as reduce (%left "./").
    Conflict between rule 152 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 152 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 152 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 152 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 152 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 152 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 152 and token "** or ^" resolved as shift ("/" < "** or ^").
    Conflict between rule 152 and token ".^" resolved as shift ("/" < ".^").
    Conflict between rule 152 and token "==" resolved as reduce ("==" < "/").
    Conflict between rule 152 and token "<> or ~=" resolved as reduce ("<> or ~=" < "/").
    Conflict between rule 152 and token "<" resolved as reduce ("<" < "/").
    Conflict between rule 152 and token "<=" resolved as reduce ("<=" < "/").
    Conflict between rule 152 and token ">" resolved as reduce (">" < "/").
    Conflict between rule 152 and token ">=" resolved as reduce (">=" < "/").
    Conflict between rule 152 and token "&" resolved as reduce ("&" < "/").
    Conflict between rule 152 and token "&&" resolved as reduce ("&&" < "/").
    Conflict between rule 152 and token "|" resolved as reduce ("|" < "/").
    Conflict between rule 152 and token "||" resolved as reduce ("||" < "/").


State 283

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  151             | "/" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 151 (rightOperand)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 151 and token "'" resolved as shift ("/" < "'").
    Conflict between rule 151 and token ":" resolved as reduce (":" < "/").
    Conflict between rule 151 and token "(" resolved as shift ("/" < "(").
    Conflict between rule 151 and token "." resolved as shift ("/" < ".").
    Conflict between rule 151 and token ".'" resolved as shift ("/" < ".'").
    Conflict between rule 151 and token "+" resolved as reduce ("+" < "/").
    Conflict between rule 151 and token "-" resolved as reduce ("-" < "/").
    Conflict between rule 151 and token "*" resolved as reduce (%left "*").
    Conflict between rule 151 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 151 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 151 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 151 and token "/" resolved as reduce (%left "/").
    Conflict between rule 151 and token "./" resolved as reduce (%left "./").
    Conflict between rule 151 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 151 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 151 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 151 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 151 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 151 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 151 and token "** or ^" resolved as shift ("/" < "** or ^").
    Conflict between rule 151 and token ".^" resolved as shift ("/" < ".^").
    Conflict between rule 151 and token "==" resolved as reduce ("==" < "/").
    Conflict between rule 151 and token "<> or ~=" resolved as reduce ("<> or ~=" < "/").
    Conflict between rule 151 and token "<" resolved as reduce ("<" < "/").
    Conflict between rule 151 and token "<=" resolved as reduce ("<=" < "/").
    Conflict between rule 151 and token ">" resolved as reduce (">" < "/").
    Conflict between rule 151 and token ">=" resolved as reduce (">=" < "/").
    Conflict between rule 151 and token "&" resolved as reduce ("&" < "/").
    Conflict between rule 151 and token "&&" resolved as reduce ("&&" < "/").
    Conflict between rule 151 and token "|" resolved as reduce ("|" < "/").
    Conflict between rule 151 and token "||" resolved as reduce ("||" < "/").


State 284

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  154             | "./" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 154 (rightOperand)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 154 and token "'" resolved as shift ("./" < "'").
    Conflict between rule 154 and token ":" resolved as reduce (":" < "./").
    Conflict between rule 154 and token "(" resolved as shift ("./" < "(").
    Conflict between rule 154 and token "." resolved as shift ("./" < ".").
    Conflict between rule 154 and token ".'" resolved as shift ("./" < ".'").
    Conflict between rule 154 and token "+" resolved as reduce ("+" < "./").
    Conflict between rule 154 and token "-" resolved as reduce ("-" < "./").
    Conflict between rule 154 and token "*" resolved as reduce (%left "*").
    Conflict between rule 154 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 154 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 154 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 154 and token "/" resolved as reduce (%left "/").
    Conflict between rule 154 and token "./" resolved as reduce (%left "./").
    Conflict between rule 154 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 154 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 154 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 154 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 154 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 154 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 154 and token "** or ^" resolved as shift ("./" < "** or ^").
    Conflict between rule 154 and token ".^" resolved as shift ("./" < ".^").
    Conflict between rule 154 and token "==" resolved as reduce ("==" < "./").
    Conflict between rule 154 and token "<> or ~=" resolved as reduce ("<> or ~=" < "./").
    Conflict between rule 154 and token "<" resolved as reduce ("<" < "./").
    Conflict between rule 154 and token "<=" resolved as reduce ("<=" < "./").
    Conflict between rule 154 and token ">" resolved as reduce (">" < "./").
    Conflict between rule 154 and token ">=" resolved as reduce (">=" < "./").
    Conflict between rule 154 and token "&" resolved as reduce ("&" < "./").
    Conflict between rule 154 and token "&&" resolved as reduce ("&&" < "./").
    Conflict between rule 154 and token "|" resolved as reduce ("|" < "./").
    Conflict between rule 154 and token "||" resolved as reduce ("||" < "./").


State 285

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  153             | "./" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 153 (rightOperand)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 153 and token "'" resolved as shift ("./" < "'").
    Conflict between rule 153 and token ":" resolved as reduce (":" < "./").
    Conflict between rule 153 and token "(" resolved as shift ("./" < "(").
    Conflict between rule 153 and token "." resolved as shift ("./" < ".").
    Conflict between rule 153 and token ".'" resolved as shift ("./" < ".'").
    Conflict between rule 153 and token "+" resolved as reduce ("+" < "./").
    Conflict between rule 153 and token "-" resolved as reduce ("-" < "./").
    Conflict between rule 153 and token "*" resolved as reduce (%left "*").
    Conflict between rule 153 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 153 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 153 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 153 and token "/" resolved as reduce (%left "/").
    Conflict between rule 153 and token "./" resolved as reduce (%left "./").
    Conflict between rule 153 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 153 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 153 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 153 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 153 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 153 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 153 and token "** or ^" resolved as shift ("./" < "** or ^").
    Conflict between rule 153 and token ".^" resolved as shift ("./" < ".^").
    Conflict between rule 153 and token "==" resolved as reduce ("==" < "./").
    Conflict between rule 153 and token "<> or ~=" resolved as reduce ("<> or ~=" < "./").
    Conflict between rule 153 and token "<" resolved as reduce ("<" < "./").
    Conflict between rule 153 and token "<=" resolved as reduce ("<=" < "./").
    Conflict between rule 153 and token ">" resolved as reduce (">" < "./").
    Conflict between rule 153 and token ">=" resolved as reduce (">=" < "./").
    Conflict between rule 153 and token "&" resolved as reduce ("&" < "./").
    Conflict between rule 153 and token "&&" resolved as reduce ("&&" < "./").
    Conflict between rule 153 and token "|" resolved as reduce ("|" < "./").
    Conflict between rule 153 and token "||" resolved as reduce ("||" < "./").


State 286

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  158             | "/." functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 158 (rightOperand)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 158 and token "'" resolved as shift ("/." < "'").
    Conflict between rule 158 and token ":" resolved as reduce (":" < "/.").
    Conflict between rule 158 and token "(" resolved as shift ("/." < "(").
    Conflict between rule 158 and token "." resolved as shift ("/." < ".").
    Conflict between rule 158 and token ".'" resolved as shift ("/." < ".'").
    Conflict between rule 158 and token "+" resolved as reduce ("+" < "/.").
    Conflict between rule 158 and token "-" resolved as reduce ("-" < "/.").
    Conflict between rule 158 and token "*" resolved as reduce (%left "*").
    Conflict between rule 158 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 158 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 158 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 158 and token "/" resolved as reduce (%left "/").
    Conflict between rule 158 and token "./" resolved as reduce (%left "./").
    Conflict between rule 158 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 158 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 158 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 158 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 158 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 158 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 158 and token "** or ^" resolved as shift ("/." < "** or ^").
    Conflict between rule 158 and token ".^" resolved as shift ("/." < ".^").
    Conflict between rule 158 and token "==" resolved as reduce ("==" < "/.").
    Conflict between rule 158 and token "<> or ~=" resolved as reduce ("<> or ~=" < "/.").
    Conflict between rule 158 and token "<" resolved as reduce ("<" < "/.").
    Conflict between rule 158 and token "<=" resolved as reduce ("<=" < "/.").
    Conflict between rule 158 and token ">" resolved as reduce (">" < "/.").
    Conflict between rule 158 and token ">=" resolved as reduce (">=" < "/.").
    Conflict between rule 158 and token "&" resolved as reduce ("&" < "/.").
    Conflict between rule 158 and token "&&" resolved as reduce ("&&" < "/.").
    Conflict between rule 158 and token "|" resolved as reduce ("|" < "/.").
    Conflict between rule 158 and token "||" resolved as reduce ("||" < "/.").


State 287

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  157             | "/." variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 157 (rightOperand)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 157 and token "'" resolved as shift ("/." < "'").
    Conflict between rule 157 and token ":" resolved as reduce (":" < "/.").
    Conflict between rule 157 and token "(" resolved as shift ("/." < "(").
    Conflict between rule 157 and token "." resolved as shift ("/." < ".").
    Conflict between rule 157 and token ".'" resolved as shift ("/." < ".'").
    Conflict between rule 157 and token "+" resolved as reduce ("+" < "/.").
    Conflict between rule 157 and token "-" resolved as reduce ("-" < "/.").
    Conflict between rule 157 and token "*" resolved as reduce (%left "*").
    Conflict between rule 157 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 157 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 157 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 157 and token "/" resolved as reduce (%left "/").
    Conflict between rule 157 and token "./" resolved as reduce (%left "./").
    Conflict between rule 157 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 157 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 157 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 157 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 157 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 157 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 157 and token "** or ^" resolved as shift ("/." < "** or ^").
    Conflict between rule 157 and token ".^" resolved as shift ("/." < ".^").
    Conflict between rule 157 and token "==" resolved as reduce ("==" < "/.").
    Conflict between rule 157 and token "<> or ~=" resolved as reduce ("<> or ~=" < "/.").
    Conflict between rule 157 and token "<" resolved as reduce ("<" < "/.").
    Conflict between rule 157 and token "<=" resolved as reduce ("<=" < "/.").
    Conflict between rule 157 and token ">" resolved as reduce (">" < "/.").
    Conflict between rule 157 and token ">=" resolved as reduce (">=" < "/.").
    Conflict between rule 157 and token "&" resolved as reduce ("&" < "/.").
    Conflict between rule 157 and token "&&" resolved as reduce ("&&" < "/.").
    Conflict between rule 157 and token "|" resolved as reduce ("|" < "/.").
    Conflict between rule 157 and token "||" resolved as reduce ("||" < "/.").


State 288

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  156             | "./." functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 156 (rightOperand)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 156 and token "'" resolved as shift ("./." < "'").
    Conflict between rule 156 and token ":" resolved as reduce (":" < "./.").
    Conflict between rule 156 and token "(" resolved as shift ("./." < "(").
    Conflict between rule 156 and token "." resolved as shift ("./." < ".").
    Conflict between rule 156 and token ".'" resolved as shift ("./." < ".'").
    Conflict between rule 156 and token "+" resolved as reduce ("+" < "./.").
    Conflict between rule 156 and token "-" resolved as reduce ("-" < "./.").
    Conflict between rule 156 and token "*" resolved as reduce (%left "*").
    Conflict between rule 156 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 156 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 156 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 156 and token "/" resolved as reduce (%left "/").
    Conflict between rule 156 and token "./" resolved as reduce (%left "./").
    Conflict between rule 156 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 156 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 156 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 156 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 156 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 156 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 156 and token "** or ^" resolved as shift ("./." < "** or ^").
    Conflict between rule 156 and token ".^" resolved as shift ("./." < ".^").
    Conflict between rule 156 and token "==" resolved as reduce ("==" < "./.").
    Conflict between rule 156 and token "<> or ~=" resolved as reduce ("<> or ~=" < "./.").
    Conflict between rule 156 and token "<" resolved as reduce ("<" < "./.").
    Conflict between rule 156 and token "<=" resolved as reduce ("<=" < "./.").
    Conflict between rule 156 and token ">" resolved as reduce (">" < "./.").
    Conflict between rule 156 and token ">=" resolved as reduce (">=" < "./.").
    Conflict between rule 156 and token "&" resolved as reduce ("&" < "./.").
    Conflict between rule 156 and token "&&" resolved as reduce ("&&" < "./.").
    Conflict between rule 156 and token "|" resolved as reduce ("|" < "./.").
    Conflict between rule 156 and token "||" resolved as reduce ("||" < "./.").


State 289

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  155             | "./." variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 155 (rightOperand)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 155 and token "'" resolved as shift ("./." < "'").
    Conflict between rule 155 and token ":" resolved as reduce (":" < "./.").
    Conflict between rule 155 and token "(" resolved as shift ("./." < "(").
    Conflict between rule 155 and token "." resolved as shift ("./." < ".").
    Conflict between rule 155 and token ".'" resolved as shift ("./." < ".'").
    Conflict between rule 155 and token "+" resolved as reduce ("+" < "./.").
    Conflict between rule 155 and token "-" resolved as reduce ("-" < "./.").
    Conflict between rule 155 and token "*" resolved as reduce (%left "*").
    Conflict between rule 155 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 155 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 155 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 155 and token "/" resolved as reduce (%left "/").
    Conflict between rule 155 and token "./" resolved as reduce (%left "./").
    Conflict between rule 155 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 155 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 155 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 155 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 155 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 155 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 155 and token "** or ^" resolved as shift ("./." < "** or ^").
    Conflict between rule 155 and token ".^" resolved as shift ("./." < ".^").
    Conflict between rule 155 and token "==" resolved as reduce ("==" < "./.").
    Conflict between rule 155 and token "<> or ~=" resolved as reduce ("<> or ~=" < "./.").
    Conflict between rule 155 and token "<" resolved as reduce ("<" < "./.").
    Conflict between rule 155 and token "<=" resolved as reduce ("<=" < "./.").
    Conflict between rule 155 and token ">" resolved as reduce (">" < "./.").
    Conflict between rule 155 and token ">=" resolved as reduce (">=" < "./.").
    Conflict between rule 155 and token "&" resolved as reduce ("&" < "./.").
    Conflict between rule 155 and token "&&" resolved as reduce ("&&" < "./.").
    Conflict between rule 155 and token "|" resolved as reduce ("|" < "./.").
    Conflict between rule 155 and token "||" resolved as reduce ("||" < "./.").


State 290

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  160             | "\\" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 160 (rightOperand)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 160 and token "'" resolved as shift ("\\" < "'").
    Conflict between rule 160 and token ":" resolved as reduce (":" < "\\").
    Conflict between rule 160 and token "(" resolved as shift ("\\" < "(").
    Conflict between rule 160 and token "." resolved as shift ("\\" < ".").
    Conflict between rule 160 and token ".'" resolved as shift ("\\" < ".'").
    Conflict between rule 160 and token "+" resolved as reduce ("+" < "\\").
    Conflict between rule 160 and token "-" resolved as reduce ("-" < "\\").
    Conflict between rule 160 and token "*" resolved as reduce (%left "*").
    Conflict between rule 160 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 160 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 160 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 160 and token "/" resolved as reduce (%left "/").
    Conflict between rule 160 and token "./" resolved as reduce (%left "./").
    Conflict between rule 160 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 160 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 160 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 160 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 160 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 160 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 160 and token "** or ^" resolved as shift ("\\" < "** or ^").
    Conflict between rule 160 and token ".^" resolved as shift ("\\" < ".^").
    Conflict between rule 160 and token "==" resolved as reduce ("==" < "\\").
    Conflict between rule 160 and token "<> or ~=" resolved as reduce ("<> or ~=" < "\\").
    Conflict between rule 160 and token "<" resolved as reduce ("<" < "\\").
    Conflict between rule 160 and token "<=" resolved as reduce ("<=" < "\\").
    Conflict between rule 160 and token ">" resolved as reduce (">" < "\\").
    Conflict between rule 160 and token ">=" resolved as reduce (">=" < "\\").
    Conflict between rule 160 and token "&" resolved as reduce ("&" < "\\").
    Conflict between rule 160 and token "&&" resolved as reduce ("&&" < "\\").
    Conflict between rule 160 and token "|" resolved as reduce ("|" < "\\").
    Conflict between rule 160 and token "||" resolved as reduce ("||" < "\\").


State 291

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  159             | "\\" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 159 (rightOperand)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 159 and token "'" resolved as shift ("\\" < "'").
    Conflict between rule 159 and token ":" resolved as reduce (":" < "\\").
    Conflict between rule 159 and token "(" resolved as shift ("\\" < "(").
    Conflict between rule 159 and token "." resolved as shift ("\\" < ".").
    Conflict between rule 159 and token ".'" resolved as shift ("\\" < ".'").
    Conflict between rule 159 and token "+" resolved as reduce ("+" < "\\").
    Conflict between rule 159 and token "-" resolved as reduce ("-" < "\\").
    Conflict between rule 159 and token "*" resolved as reduce (%left "*").
    Conflict between rule 159 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 159 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 159 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 159 and token "/" resolved as reduce (%left "/").
    Conflict between rule 159 and token "./" resolved as reduce (%left "./").
    Conflict between rule 159 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 159 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 159 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 159 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 159 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 159 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 159 and token "** or ^" resolved as shift ("\\" < "** or ^").
    Conflict between rule 159 and token ".^" resolved as shift ("\\" < ".^").
    Conflict between rule 159 and token "==" resolved as reduce ("==" < "\\").
    Conflict between rule 159 and token "<> or ~=" resolved as reduce ("<> or ~=" < "\\").
    Conflict between rule 159 and token "<" resolved as reduce ("<" < "\\").
    Conflict between rule 159 and token "<=" resolved as reduce ("<=" < "\\").
    Conflict between rule 159 and token ">" resolved as reduce (">" < "\\").
    Conflict between rule 159 and token ">=" resolved as reduce (">=" < "\\").
    Conflict between rule 159 and token "&" resolved as reduce ("&" < "\\").
    Conflict between rule 159 and token "&&" resolved as reduce ("&&" < "\\").
    Conflict between rule 159 and token "|" resolved as reduce ("|" < "\\").
    Conflict between rule 159 and token "||" resolved as reduce ("||" < "\\").


State 292

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  162             | ".\\" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 162 (rightOperand)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 162 and token "'" resolved as shift (".\\" < "'").
    Conflict between rule 162 and token ":" resolved as reduce (":" < ".\\").
    Conflict between rule 162 and token "(" resolved as shift (".\\" < "(").
    Conflict between rule 162 and token "." resolved as shift (".\\" < ".").
    Conflict between rule 162 and token ".'" resolved as shift (".\\" < ".'").
    Conflict between rule 162 and token "+" resolved as reduce ("+" < ".\\").
    Conflict between rule 162 and token "-" resolved as reduce ("-" < ".\\").
    Conflict between rule 162 and token "*" resolved as reduce (%left "*").
    Conflict between rule 162 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 162 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 162 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 162 and token "/" resolved as reduce (%left "/").
    Conflict between rule 162 and token "./" resolved as reduce (%left "./").
    Conflict between rule 162 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 162 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 162 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 162 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 162 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 162 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 162 and token "** or ^" resolved as shift (".\\" < "** or ^").
    Conflict between rule 162 and token ".^" resolved as shift (".\\" < ".^").
    Conflict between rule 162 and token "==" resolved as reduce ("==" < ".\\").
    Conflict between rule 162 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".\\").
    Conflict between rule 162 and token "<" resolved as reduce ("<" < ".\\").
    Conflict between rule 162 and token "<=" resolved as reduce ("<=" < ".\\").
    Conflict between rule 162 and token ">" resolved as reduce (">" < ".\\").
    Conflict between rule 162 and token ">=" resolved as reduce (">=" < ".\\").
    Conflict between rule 162 and token "&" resolved as reduce ("&" < ".\\").
    Conflict between rule 162 and token "&&" resolved as reduce ("&&" < ".\\").
    Conflict between rule 162 and token "|" resolved as reduce ("|" < ".\\").
    Conflict between rule 162 and token "||" resolved as reduce ("||" < ".\\").


State 293

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  161             | ".\\" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 161 (rightOperand)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 161 and token "'" resolved as shift (".\\" < "'").
    Conflict between rule 161 and token ":" resolved as reduce (":" < ".\\").
    Conflict between rule 161 and token "(" resolved as shift (".\\" < "(").
    Conflict between rule 161 and token "." resolved as shift (".\\" < ".").
    Conflict between rule 161 and token ".'" resolved as shift (".\\" < ".'").
    Conflict between rule 161 and token "+" resolved as reduce ("+" < ".\\").
    Conflict between rule 161 and token "-" resolved as reduce ("-" < ".\\").
    Conflict between rule 161 and token "*" resolved as reduce (%left "*").
    Conflict between rule 161 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 161 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 161 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 161 and token "/" resolved as reduce (%left "/").
    Conflict between rule 161 and token "./" resolved as reduce (%left "./").
    Conflict between rule 161 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 161 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 161 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 161 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 161 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 161 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 161 and token "** or ^" resolved as shift (".\\" < "** or ^").
    Conflict between rule 161 and token ".^" resolved as shift (".\\" < ".^").
    Conflict between rule 161 and token "==" resolved as reduce ("==" < ".\\").
    Conflict between rule 161 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".\\").
    Conflict between rule 161 and token "<" resolved as reduce ("<" < ".\\").
    Conflict between rule 161 and token "<=" resolved as reduce ("<=" < ".\\").
    Conflict between rule 161 and token ">" resolved as reduce (">" < ".\\").
    Conflict between rule 161 and token ">=" resolved as reduce (">=" < ".\\").
    Conflict between rule 161 and token "&" resolved as reduce ("&" < ".\\").
    Conflict between rule 161 and token "&&" resolved as reduce ("&&" < ".\\").
    Conflict between rule 161 and token "|" resolved as reduce ("|" < ".\\").
    Conflict between rule 161 and token "||" resolved as reduce ("||" < ".\\").


State 294

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  166             | "\\." functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 166 (rightOperand)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 166 and token "'" resolved as shift ("\\." < "'").
    Conflict between rule 166 and token ":" resolved as reduce (":" < "\\.").
    Conflict between rule 166 and token "(" resolved as shift ("\\." < "(").
    Conflict between rule 166 and token "." resolved as shift ("\\." < ".").
    Conflict between rule 166 and token ".'" resolved as shift ("\\." < ".'").
    Conflict between rule 166 and token "+" resolved as reduce ("+" < "\\.").
    Conflict between rule 166 and token "-" resolved as reduce ("-" < "\\.").
    Conflict between rule 166 and token "*" resolved as reduce (%left "*").
    Conflict between rule 166 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 166 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 166 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 166 and token "/" resolved as reduce (%left "/").
    Conflict between rule 166 and token "./" resolved as reduce (%left "./").
    Conflict between rule 166 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 166 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 166 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 166 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 166 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 166 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 166 and token "** or ^" resolved as shift ("\\." < "** or ^").
    Conflict between rule 166 and token ".^" resolved as shift ("\\." < ".^").
    Conflict between rule 166 and token "==" resolved as reduce ("==" < "\\.").
    Conflict between rule 166 and token "<> or ~=" resolved as reduce ("<> or ~=" < "\\.").
    Conflict between rule 166 and token "<" resolved as reduce ("<" < "\\.").
    Conflict between rule 166 and token "<=" resolved as reduce ("<=" < "\\.").
    Conflict between rule 166 and token ">" resolved as reduce (">" < "\\.").
    Conflict between rule 166 and token ">=" resolved as reduce (">=" < "\\.").
    Conflict between rule 166 and token "&" resolved as reduce ("&" < "\\.").
    Conflict between rule 166 and token "&&" resolved as reduce ("&&" < "\\.").
    Conflict between rule 166 and token "|" resolved as reduce ("|" < "\\.").
    Conflict between rule 166 and token "||" resolved as reduce ("||" < "\\.").


State 295

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  165             | "\\." variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 165 (rightOperand)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 165 and token "'" resolved as shift ("\\." < "'").
    Conflict between rule 165 and token ":" resolved as reduce (":" < "\\.").
    Conflict between rule 165 and token "(" resolved as shift ("\\." < "(").
    Conflict between rule 165 and token "." resolved as shift ("\\." < ".").
    Conflict between rule 165 and token ".'" resolved as shift ("\\." < ".'").
    Conflict between rule 165 and token "+" resolved as reduce ("+" < "\\.").
    Conflict between rule 165 and token "-" resolved as reduce ("-" < "\\.").
    Conflict between rule 165 and token "*" resolved as reduce (%left "*").
    Conflict between rule 165 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 165 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 165 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 165 and token "/" resolved as reduce (%left "/").
    Conflict between rule 165 and token "./" resolved as reduce (%left "./").
    Conflict between rule 165 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 165 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 165 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 165 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 165 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 165 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 165 and token "** or ^" resolved as shift ("\\." < "** or ^").
    Conflict between rule 165 and token ".^" resolved as shift ("\\." < ".^").
    Conflict between rule 165 and token "==" resolved as reduce ("==" < "\\.").
    Conflict between rule 165 and token "<> or ~=" resolved as reduce ("<> or ~=" < "\\.").
    Conflict between rule 165 and token "<" resolved as reduce ("<" < "\\.").
    Conflict between rule 165 and token "<=" resolved as reduce ("<=" < "\\.").
    Conflict between rule 165 and token ">" resolved as reduce (">" < "\\.").
    Conflict between rule 165 and token ">=" resolved as reduce (">=" < "\\.").
    Conflict between rule 165 and token "&" resolved as reduce ("&" < "\\.").
    Conflict between rule 165 and token "&&" resolved as reduce ("&&" < "\\.").
    Conflict between rule 165 and token "|" resolved as reduce ("|" < "\\.").
    Conflict between rule 165 and token "||" resolved as reduce ("||" < "\\.").


State 296

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  164             | ".\\." functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 164 (rightOperand)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 164 and token "'" resolved as shift (".\\." < "'").
    Conflict between rule 164 and token ":" resolved as reduce (":" < ".\\.").
    Conflict between rule 164 and token "(" resolved as shift (".\\." < "(").
    Conflict between rule 164 and token "." resolved as shift (".\\." < ".").
    Conflict between rule 164 and token ".'" resolved as shift (".\\." < ".'").
    Conflict between rule 164 and token "+" resolved as reduce ("+" < ".\\.").
    Conflict between rule 164 and token "-" resolved as reduce ("-" < ".\\.").
    Conflict between rule 164 and token "*" resolved as reduce (%left "*").
    Conflict between rule 164 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 164 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 164 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 164 and token "/" resolved as reduce (%left "/").
    Conflict between rule 164 and token "./" resolved as reduce (%left "./").
    Conflict between rule 164 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 164 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 164 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 164 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 164 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 164 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 164 and token "** or ^" resolved as shift (".\\." < "** or ^").
    Conflict between rule 164 and token ".^" resolved as shift (".\\." < ".^").
    Conflict between rule 164 and token "==" resolved as reduce ("==" < ".\\.").
    Conflict between rule 164 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".\\.").
    Conflict between rule 164 and token "<" resolved as reduce ("<" < ".\\.").
    Conflict between rule 164 and token "<=" resolved as reduce ("<=" < ".\\.").
    Conflict between rule 164 and token ">" resolved as reduce (">" < ".\\.").
    Conflict between rule 164 and token ">=" resolved as reduce (">=" < ".\\.").
    Conflict between rule 164 and token "&" resolved as reduce ("&" < ".\\.").
    Conflict between rule 164 and token "&&" resolved as reduce ("&&" < ".\\.").
    Conflict between rule 164 and token "|" resolved as reduce ("|" < ".\\.").
    Conflict between rule 164 and token "||" resolved as reduce ("||" < ".\\.").


State 297

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  163             | ".\\." variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 163 (rightOperand)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 163 and token "'" resolved as shift (".\\." < "'").
    Conflict between rule 163 and token ":" resolved as reduce (":" < ".\\.").
    Conflict between rule 163 and token "(" resolved as shift (".\\." < "(").
    Conflict between rule 163 and token "." resolved as shift (".\\." < ".").
    Conflict between rule 163 and token ".'" resolved as shift (".\\." < ".'").
    Conflict between rule 163 and token "+" resolved as reduce ("+" < ".\\.").
    Conflict between rule 163 and token "-" resolved as reduce ("-" < ".\\.").
    Conflict between rule 163 and token "*" resolved as reduce (%left "*").
    Conflict between rule 163 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 163 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 163 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 163 and token "/" resolved as reduce (%left "/").
    Conflict between rule 163 and token "./" resolved as reduce (%left "./").
    Conflict between rule 163 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 163 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 163 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 163 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 163 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 163 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 163 and token "** or ^" resolved as shift (".\\." < "** or ^").
    Conflict between rule 163 and token ".^" resolved as shift (".\\." < ".^").
    Conflict between rule 163 and token "==" resolved as reduce ("==" < ".\\.").
    Conflict between rule 163 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".\\.").
    Conflict between rule 163 and token "<" resolved as reduce ("<" < ".\\.").
    Conflict between rule 163 and token "<=" resolved as reduce ("<=" < ".\\.").
    Conflict between rule 163 and token ">" resolved as reduce (">" < ".\\.").
    Conflict between rule 163 and token ">=" resolved as reduce (">=" < ".\\.").
    Conflict between rule 163 and token "&" resolved as reduce ("&" < ".\\.").
    Conflict between rule 163 and token "&&" resolved as reduce ("&&" < ".\\.").
    Conflict between rule 163 and token "|" resolved as reduce ("|" < ".\\.").
    Conflict between rule 163 and token "||" resolved as reduce ("||" < ".\\.").


State 298

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  130          | functionCall "** or ^" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 130 (operation)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 130 and token "'" resolved as shift ("** or ^" < "'").
    Conflict between rule 130 and token ":" resolved as reduce (":" < "** or ^").
    Conflict between rule 130 and token "(" resolved as shift ("** or ^" < "(").
    Conflict between rule 130 and token "." resolved as shift ("** or ^" < ".").
    Conflict between rule 130 and token ".'" resolved as shift ("** or ^" < ".'").
    Conflict between rule 130 and token "+" resolved as reduce ("+" < "** or ^").
    Conflict between rule 130 and token "-" resolved as reduce ("-" < "** or ^").
    Conflict between rule 130 and token "*" resolved as reduce ("*" < "** or ^").
    Conflict between rule 130 and token ".*" resolved as reduce (".*" < "** or ^").
    Conflict between rule 130 and token ".*." resolved as reduce (".*." < "** or ^").
    Conflict between rule 130 and token "*." resolved as reduce ("*." < "** or ^").
    Conflict between rule 130 and token "/" resolved as reduce ("/" < "** or ^").
    Conflict between rule 130 and token "./" resolved as reduce ("./" < "** or ^").
    Conflict between rule 130 and token "/." resolved as reduce ("/." < "** or ^").
    Conflict between rule 130 and token "./." resolved as reduce ("./." < "** or ^").
    Conflict between rule 130 and token "\\" resolved as reduce ("\\" < "** or ^").
    Conflict between rule 130 and token ".\\" resolved as reduce (".\\" < "** or ^").
    Conflict between rule 130 and token "\\." resolved as reduce ("\\." < "** or ^").
    Conflict between rule 130 and token ".\\." resolved as reduce (".\\." < "** or ^").
    Conflict between rule 130 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 130 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 130 and token "==" resolved as reduce ("==" < "** or ^").
    Conflict between rule 130 and token "<> or ~=" resolved as reduce ("<> or ~=" < "** or ^").
    Conflict between rule 130 and token "<" resolved as reduce ("<" < "** or ^").
    Conflict between rule 130 and token "<=" resolved as reduce ("<=" < "** or ^").
    Conflict between rule 130 and token ">" resolved as reduce (">" < "** or ^").
    Conflict between rule 130 and token ">=" resolved as reduce (">=" < "** or ^").
    Conflict between rule 130 and token "&" resolved as reduce ("&" < "** or ^").
    Conflict between rule 130 and token "&&" resolved as reduce ("&&" < "** or ^").
    Conflict between rule 130 and token "|" resolved as reduce ("|" < "** or ^").
    Conflict between rule 130 and token "||" resolved as reduce ("||" < "** or ^").


State 299

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  129          | functionCall "** or ^" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 129 (operation)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 129 and token "'" resolved as shift ("** or ^" < "'").
    Conflict between rule 129 and token ":" resolved as reduce (":" < "** or ^").
    Conflict between rule 129 and token "(" resolved as shift ("** or ^" < "(").
    Conflict between rule 129 and token "." resolved as shift ("** or ^" < ".").
    Conflict between rule 129 and token ".'" resolved as shift ("** or ^" < ".'").
    Conflict between rule 129 and token "+" resolved as reduce ("+" < "** or ^").
    Conflict between rule 129 and token "-" resolved as reduce ("-" < "** or ^").
    Conflict between rule 129 and token "*" resolved as reduce ("*" < "** or ^").
    Conflict between rule 129 and token ".*" resolved as reduce (".*" < "** or ^").
    Conflict between rule 129 and token ".*." resolved as reduce (".*." < "** or ^").
    Conflict between rule 129 and token "*." resolved as reduce ("*." < "** or ^").
    Conflict between rule 129 and token "/" resolved as reduce ("/" < "** or ^").
    Conflict between rule 129 and token "./" resolved as reduce ("./" < "** or ^").
    Conflict between rule 129 and token "/." resolved as reduce ("/." < "** or ^").
    Conflict between rule 129 and token "./." resolved as reduce ("./." < "** or ^").
    Conflict between rule 129 and token "\\" resolved as reduce ("\\" < "** or ^").
    Conflict between rule 129 and token ".\\" resolved as reduce (".\\" < "** or ^").
    Conflict between rule 129 and token "\\." resolved as reduce ("\\." < "** or ^").
    Conflict between rule 129 and token ".\\." resolved as reduce (".\\." < "** or ^").
    Conflict between rule 129 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 129 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 129 and token "==" resolved as reduce ("==" < "** or ^").
    Conflict between rule 129 and token "<> or ~=" resolved as reduce ("<> or ~=" < "** or ^").
    Conflict between rule 129 and token "<" resolved as reduce ("<" < "** or ^").
    Conflict between rule 129 and token "<=" resolved as reduce ("<=" < "** or ^").
    Conflict between rule 129 and token ">" resolved as reduce (">" < "** or ^").
    Conflict between rule 129 and token ">=" resolved as reduce (">=" < "** or ^").
    Conflict between rule 129 and token "&" resolved as reduce ("&" < "** or ^").
    Conflict between rule 129 and token "&&" resolved as reduce ("&&" < "** or ^").
    Conflict between rule 129 and token "|" resolved as reduce ("|" < "** or ^").
    Conflict between rule 129 and token "||" resolved as reduce ("||" < "** or ^").


State 300

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  134          | functionCall ".^" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 134 (operation)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 134 and token "'" resolved as shift (".^" < "'").
    Conflict between rule 134 and token ":" resolved as reduce (":" < ".^").
    Conflict between rule 134 and token "(" resolved as shift (".^" < "(").
    Conflict between rule 134 and token "." resolved as shift (".^" < ".").
    Conflict between rule 134 and token ".'" resolved as shift (".^" < ".'").
    Conflict between rule 134 and token "+" resolved as reduce ("+" < ".^").
    Conflict between rule 134 and token "-" resolved as reduce ("-" < ".^").
    Conflict between rule 134 and token "*" resolved as reduce ("*" < ".^").
    Conflict between rule 134 and token ".*" resolved as reduce (".*" < ".^").
    Conflict between rule 134 and token ".*." resolved as reduce (".*." < ".^").
    Conflict between rule 134 and token "*." resolved as reduce ("*." < ".^").
    Conflict between rule 134 and token "/" resolved as reduce ("/" < ".^").
    Conflict between rule 134 and token "./" resolved as reduce ("./" < ".^").
    Conflict between rule 134 and token "/." resolved as reduce ("/." < ".^").
    Conflict between rule 134 and token "./." resolved as reduce ("./." < ".^").
    Conflict between rule 134 and token "\\" resolved as reduce ("\\" < ".^").
    Conflict between rule 134 and token ".\\" resolved as reduce (".\\" < ".^").
    Conflict between rule 134 and token "\\." resolved as reduce ("\\." < ".^").
    Conflict between rule 134 and token ".\\." resolved as reduce (".\\." < ".^").
    Conflict between rule 134 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 134 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 134 and token "==" resolved as reduce ("==" < ".^").
    Conflict between rule 134 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".^").
    Conflict between rule 134 and token "<" resolved as reduce ("<" < ".^").
    Conflict between rule 134 and token "<=" resolved as reduce ("<=" < ".^").
    Conflict between rule 134 and token ">" resolved as reduce (">" < ".^").
    Conflict between rule 134 and token ">=" resolved as reduce (">=" < ".^").
    Conflict between rule 134 and token "&" resolved as reduce ("&" < ".^").
    Conflict between rule 134 and token "&&" resolved as reduce ("&&" < ".^").
    Conflict between rule 134 and token "|" resolved as reduce ("|" < ".^").
    Conflict between rule 134 and token "||" resolved as reduce ("||" < ".^").


State 301

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  133          | functionCall ".^" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 133 (operation)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 133 and token "'" resolved as shift (".^" < "'").
    Conflict between rule 133 and token ":" resolved as reduce (":" < ".^").
    Conflict between rule 133 and token "(" resolved as shift (".^" < "(").
    Conflict between rule 133 and token "." resolved as shift (".^" < ".").
    Conflict between rule 133 and token ".'" resolved as shift (".^" < ".'").
    Conflict between rule 133 and token "+" resolved as reduce ("+" < ".^").
    Conflict between rule 133 and token "-" resolved as reduce ("-" < ".^").
    Conflict between rule 133 and token "*" resolved as reduce ("*" < ".^").
    Conflict between rule 133 and token ".*" resolved as reduce (".*" < ".^").
    Conflict between rule 133 and token ".*." resolved as reduce (".*." < ".^").
    Conflict between rule 133 and token "*." resolved as reduce ("*." < ".^").
    Conflict between rule 133 and token "/" resolved as reduce ("/" < ".^").
    Conflict between rule 133 and token "./" resolved as reduce ("./" < ".^").
    Conflict between rule 133 and token "/." resolved as reduce ("/." < ".^").
    Conflict between rule 133 and token "./." resolved as reduce ("./." < ".^").
    Conflict between rule 133 and token "\\" resolved as reduce ("\\" < ".^").
    Conflict between rule 133 and token ".\\" resolved as reduce (".\\" < ".^").
    Conflict between rule 133 and token "\\." resolved as reduce ("\\." < ".^").
    Conflict between rule 133 and token ".\\." resolved as reduce (".\\." < ".^").
    Conflict between rule 133 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 133 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 133 and token "==" resolved as reduce ("==" < ".^").
    Conflict between rule 133 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".^").
    Conflict between rule 133 and token "<" resolved as reduce ("<" < ".^").
    Conflict between rule 133 and token "<=" resolved as reduce ("<=" < ".^").
    Conflict between rule 133 and token ">" resolved as reduce (">" < ".^").
    Conflict between rule 133 and token ">=" resolved as reduce (">=" < ".^").
    Conflict between rule 133 and token "&" resolved as reduce ("&" < ".^").
    Conflict between rule 133 and token "&&" resolved as reduce ("&&" < ".^").
    Conflict between rule 133 and token "|" resolved as reduce ("|" < ".^").
    Conflict between rule 133 and token "||" resolved as reduce ("||" < ".^").


State 302

  105 rightComparable: "==" ":" •

    $default  reduce using rule 105 (rightComparable)


State 303

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  104                | "==" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    ":"        shift, and go to state 118
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 104 (rightComparable)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 104 and token "'" resolved as shift ("==" < "'").
    Conflict between rule 104 and token ":" resolved as shift ("==" < ":").
    Conflict between rule 104 and token "(" resolved as shift ("==" < "(").
    Conflict between rule 104 and token "." resolved as shift ("==" < ".").
    Conflict between rule 104 and token ".'" resolved as shift ("==" < ".'").
    Conflict between rule 104 and token "+" resolved as shift ("==" < "+").
    Conflict between rule 104 and token "-" resolved as shift ("==" < "-").
    Conflict between rule 104 and token "*" resolved as shift ("==" < "*").
    Conflict between rule 104 and token ".*" resolved as shift ("==" < ".*").
    Conflict between rule 104 and token ".*." resolved as shift ("==" < ".*.").
    Conflict between rule 104 and token "*." resolved as shift ("==" < "*.").
    Conflict between rule 104 and token "/" resolved as shift ("==" < "/").
    Conflict between rule 104 and token "./" resolved as shift ("==" < "./").
    Conflict between rule 104 and token "/." resolved as shift ("==" < "/.").
    Conflict between rule 104 and token "./." resolved as shift ("==" < "./.").
    Conflict between rule 104 and token "\\" resolved as shift ("==" < "\\").
    Conflict between rule 104 and token ".\\" resolved as shift ("==" < ".\\").
    Conflict between rule 104 and token "\\." resolved as shift ("==" < "\\.").
    Conflict between rule 104 and token ".\\." resolved as shift ("==" < ".\\.").
    Conflict between rule 104 and token "** or ^" resolved as shift ("==" < "** or ^").
    Conflict between rule 104 and token ".^" resolved as shift ("==" < ".^").
    Conflict between rule 104 and token "==" resolved as reduce (%left "==").
    Conflict between rule 104 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 104 and token "<" resolved as reduce (%left "<").
    Conflict between rule 104 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 104 and token ">" resolved as reduce (%left ">").
    Conflict between rule 104 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 104 and token "&" resolved as reduce ("&" < "==").
    Conflict between rule 104 and token "&&" resolved as reduce ("&&" < "==").
    Conflict between rule 104 and token "|" resolved as reduce ("|" < "==").
    Conflict between rule 104 and token "||" resolved as reduce ("||" < "==").


State 304

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  103                | "==" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    ":"        shift, and go to state 118
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 103 (rightComparable)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 103 and token "'" resolved as shift ("==" < "'").
    Conflict between rule 103 and token ":" resolved as shift ("==" < ":").
    Conflict between rule 103 and token "(" resolved as shift ("==" < "(").
    Conflict between rule 103 and token "." resolved as shift ("==" < ".").
    Conflict between rule 103 and token ".'" resolved as shift ("==" < ".'").
    Conflict between rule 103 and token "+" resolved as shift ("==" < "+").
    Conflict between rule 103 and token "-" resolved as shift ("==" < "-").
    Conflict between rule 103 and token "*" resolved as shift ("==" < "*").
    Conflict between rule 103 and token ".*" resolved as shift ("==" < ".*").
    Conflict between rule 103 and token ".*." resolved as shift ("==" < ".*.").
    Conflict between rule 103 and token "*." resolved as shift ("==" < "*.").
    Conflict between rule 103 and token "/" resolved as shift ("==" < "/").
    Conflict between rule 103 and token "./" resolved as shift ("==" < "./").
    Conflict between rule 103 and token "/." resolved as shift ("==" < "/.").
    Conflict between rule 103 and token "./." resolved as shift ("==" < "./.").
    Conflict between rule 103 and token "\\" resolved as shift ("==" < "\\").
    Conflict between rule 103 and token ".\\" resolved as shift ("==" < ".\\").
    Conflict between rule 103 and token "\\." resolved as shift ("==" < "\\.").
    Conflict between rule 103 and token ".\\." resolved as shift ("==" < ".\\.").
    Conflict between rule 103 and token "** or ^" resolved as shift ("==" < "** or ^").
    Conflict between rule 103 and token ".^" resolved as shift ("==" < ".^").
    Conflict between rule 103 and token "==" resolved as reduce (%left "==").
    Conflict between rule 103 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 103 and token "<" resolved as reduce (%left "<").
    Conflict between rule 103 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 103 and token ">" resolved as reduce (%left ">").
    Conflict between rule 103 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 103 and token "&" resolved as reduce ("&" < "==").
    Conflict between rule 103 and token "&&" resolved as reduce ("&&" < "==").
    Conflict between rule 103 and token "|" resolved as reduce ("|" < "==").
    Conflict between rule 103 and token "||" resolved as reduce ("||" < "==").


State 305

  108 rightComparable: "<> or ~=" ":" •

    $default  reduce using rule 108 (rightComparable)


State 306

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  107                | "<> or ~=" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    ":"        shift, and go to state 118
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 107 (rightComparable)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 107 and token "'" resolved as shift ("<> or ~=" < "'").
    Conflict between rule 107 and token ":" resolved as shift ("<> or ~=" < ":").
    Conflict between rule 107 and token "(" resolved as shift ("<> or ~=" < "(").
    Conflict between rule 107 and token "." resolved as shift ("<> or ~=" < ".").
    Conflict between rule 107 and token ".'" resolved as shift ("<> or ~=" < ".'").
    Conflict between rule 107 and token "+" resolved as shift ("<> or ~=" < "+").
    Conflict between rule 107 and token "-" resolved as shift ("<> or ~=" < "-").
    Conflict between rule 107 and token "*" resolved as shift ("<> or ~=" < "*").
    Conflict between rule 107 and token ".*" resolved as shift ("<> or ~=" < ".*").
    Conflict between rule 107 and token ".*." resolved as shift ("<> or ~=" < ".*.").
    Conflict between rule 107 and token "*." resolved as shift ("<> or ~=" < "*.").
    Conflict between rule 107 and token "/" resolved as shift ("<> or ~=" < "/").
    Conflict between rule 107 and token "./" resolved as shift ("<> or ~=" < "./").
    Conflict between rule 107 and token "/." resolved as shift ("<> or ~=" < "/.").
    Conflict between rule 107 and token "./." resolved as shift ("<> or ~=" < "./.").
    Conflict between rule 107 and token "\\" resolved as shift ("<> or ~=" < "\\").
    Conflict between rule 107 and token ".\\" resolved as shift ("<> or ~=" < ".\\").
    Conflict between rule 107 and token "\\." resolved as shift ("<> or ~=" < "\\.").
    Conflict between rule 107 and token ".\\." resolved as shift ("<> or ~=" < ".\\.").
    Conflict between rule 107 and token "** or ^" resolved as shift ("<> or ~=" < "** or ^").
    Conflict between rule 107 and token ".^" resolved as shift ("<> or ~=" < ".^").
    Conflict between rule 107 and token "==" resolved as reduce (%left "==").
    Conflict between rule 107 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 107 and token "<" resolved as reduce (%left "<").
    Conflict between rule 107 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 107 and token ">" resolved as reduce (%left ">").
    Conflict between rule 107 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 107 and token "&" resolved as reduce ("&" < "<> or ~=").
    Conflict between rule 107 and token "&&" resolved as reduce ("&&" < "<> or ~=").
    Conflict between rule 107 and token "|" resolved as reduce ("|" < "<> or ~=").
    Conflict between rule 107 and token "||" resolved as reduce ("||" < "<> or ~=").


State 307

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  106                | "<> or ~=" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    ":"        shift, and go to state 118
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 106 (rightComparable)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 106 and token "'" resolved as shift ("<> or ~=" < "'").
    Conflict between rule 106 and token ":" resolved as shift ("<> or ~=" < ":").
    Conflict between rule 106 and token "(" resolved as shift ("<> or ~=" < "(").
    Conflict between rule 106 and token "." resolved as shift ("<> or ~=" < ".").
    Conflict between rule 106 and token ".'" resolved as shift ("<> or ~=" < ".'").
    Conflict between rule 106 and token "+" resolved as shift ("<> or ~=" < "+").
    Conflict between rule 106 and token "-" resolved as shift ("<> or ~=" < "-").
    Conflict between rule 106 and token "*" resolved as shift ("<> or ~=" < "*").
    Conflict between rule 106 and token ".*" resolved as shift ("<> or ~=" < ".*").
    Conflict between rule 106 and token ".*." resolved as shift ("<> or ~=" < ".*.").
    Conflict between rule 106 and token "*." resolved as shift ("<> or ~=" < "*.").
    Conflict between rule 106 and token "/" resolved as shift ("<> or ~=" < "/").
    Conflict between rule 106 and token "./" resolved as shift ("<> or ~=" < "./").
    Conflict between rule 106 and token "/." resolved as shift ("<> or ~=" < "/.").
    Conflict between rule 106 and token "./." resolved as shift ("<> or ~=" < "./.").
    Conflict between rule 106 and token "\\" resolved as shift ("<> or ~=" < "\\").
    Conflict between rule 106 and token ".\\" resolved as shift ("<> or ~=" < ".\\").
    Conflict between rule 106 and token "\\." resolved as shift ("<> or ~=" < "\\.").
    Conflict between rule 106 and token ".\\." resolved as shift ("<> or ~=" < ".\\.").
    Conflict between rule 106 and token "** or ^" resolved as shift ("<> or ~=" < "** or ^").
    Conflict between rule 106 and token ".^" resolved as shift ("<> or ~=" < ".^").
    Conflict between rule 106 and token "==" resolved as reduce (%left "==").
    Conflict between rule 106 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 106 and token "<" resolved as reduce (%left "<").
    Conflict between rule 106 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 106 and token ">" resolved as reduce (%left ">").
    Conflict between rule 106 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 106 and token "&" resolved as reduce ("&" < "<> or ~=").
    Conflict between rule 106 and token "&&" resolved as reduce ("&&" < "<> or ~=").
    Conflict between rule 106 and token "|" resolved as reduce ("|" < "<> or ~=").
    Conflict between rule 106 and token "||" resolved as reduce ("||" < "<> or ~=").


State 308

  114 rightComparable: "<" ":" •

    $default  reduce using rule 114 (rightComparable)


State 309

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  113                | "<" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    ":"        shift, and go to state 118
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 113 (rightComparable)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 113 and token "'" resolved as shift ("<" < "'").
    Conflict between rule 113 and token ":" resolved as shift ("<" < ":").
    Conflict between rule 113 and token "(" resolved as shift ("<" < "(").
    Conflict between rule 113 and token "." resolved as shift ("<" < ".").
    Conflict between rule 113 and token ".'" resolved as shift ("<" < ".'").
    Conflict between rule 113 and token "+" resolved as shift ("<" < "+").
    Conflict between rule 113 and token "-" resolved as shift ("<" < "-").
    Conflict between rule 113 and token "*" resolved as shift ("<" < "*").
    Conflict between rule 113 and token ".*" resolved as shift ("<" < ".*").
    Conflict between rule 113 and token ".*." resolved as shift ("<" < ".*.").
    Conflict between rule 113 and token "*." resolved as shift ("<" < "*.").
    Conflict between rule 113 and token "/" resolved as shift ("<" < "/").
    Conflict between rule 113 and token "./" resolved as shift ("<" < "./").
    Conflict between rule 113 and token "/." resolved as shift ("<" < "/.").
    Conflict between rule 113 and token "./." resolved as shift ("<" < "./.").
    Conflict between rule 113 and token "\\" resolved as shift ("<" < "\\").
    Conflict between rule 113 and token ".\\" resolved as shift ("<" < ".\\").
    Conflict between rule 113 and token "\\." resolved as shift ("<" < "\\.").
    Conflict between rule 113 and token ".\\." resolved as shift ("<" < ".\\.").
    Conflict between rule 113 and token "** or ^" resolved as shift ("<" < "** or ^").
    Conflict between rule 113 and token ".^" resolved as shift ("<" < ".^").
    Conflict between rule 113 and token "==" resolved as reduce (%left "==").
    Conflict between rule 113 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 113 and token "<" resolved as reduce (%left "<").
    Conflict between rule 113 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 113 and token ">" resolved as reduce (%left ">").
    Conflict between rule 113 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 113 and token "&" resolved as reduce ("&" < "<").
    Conflict between rule 113 and token "&&" resolved as reduce ("&&" < "<").
    Conflict between rule 113 and token "|" resolved as reduce ("|" < "<").
    Conflict between rule 113 and token "||" resolved as reduce ("||" < "<").


State 310

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  112                | "<" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    ":"        shift, and go to state 118
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 112 (rightComparable)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 112 and token "'" resolved as shift ("<" < "'").
    Conflict between rule 112 and token ":" resolved as shift ("<" < ":").
    Conflict between rule 112 and token "(" resolved as shift ("<" < "(").
    Conflict between rule 112 and token "." resolved as shift ("<" < ".").
    Conflict between rule 112 and token ".'" resolved as shift ("<" < ".'").
    Conflict between rule 112 and token "+" resolved as shift ("<" < "+").
    Conflict between rule 112 and token "-" resolved as shift ("<" < "-").
    Conflict between rule 112 and token "*" resolved as shift ("<" < "*").
    Conflict between rule 112 and token ".*" resolved as shift ("<" < ".*").
    Conflict between rule 112 and token ".*." resolved as shift ("<" < ".*.").
    Conflict between rule 112 and token "*." resolved as shift ("<" < "*.").
    Conflict between rule 112 and token "/" resolved as shift ("<" < "/").
    Conflict between rule 112 and token "./" resolved as shift ("<" < "./").
    Conflict between rule 112 and token "/." resolved as shift ("<" < "/.").
    Conflict between rule 112 and token "./." resolved as shift ("<" < "./.").
    Conflict between rule 112 and token "\\" resolved as shift ("<" < "\\").
    Conflict between rule 112 and token ".\\" resolved as shift ("<" < ".\\").
    Conflict between rule 112 and token "\\." resolved as shift ("<" < "\\.").
    Conflict between rule 112 and token ".\\." resolved as shift ("<" < ".\\.").
    Conflict between rule 112 and token "** or ^" resolved as shift ("<" < "** or ^").
    Conflict between rule 112 and token ".^" resolved as shift ("<" < ".^").
    Conflict between rule 112 and token "==" resolved as reduce (%left "==").
    Conflict between rule 112 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 112 and token "<" resolved as reduce (%left "<").
    Conflict between rule 112 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 112 and token ">" resolved as reduce (%left ">").
    Conflict between rule 112 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 112 and token "&" resolved as reduce ("&" < "<").
    Conflict between rule 112 and token "&&" resolved as reduce ("&&" < "<").
    Conflict between rule 112 and token "|" resolved as reduce ("|" < "<").
    Conflict between rule 112 and token "||" resolved as reduce ("||" < "<").


State 311

  120 rightComparable: "<=" ":" •

    $default  reduce using rule 120 (rightComparable)


State 312

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  119                | "<=" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    ":"        shift, and go to state 118
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 119 (rightComparable)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 119 and token "'" resolved as shift ("<=" < "'").
    Conflict between rule 119 and token ":" resolved as shift ("<=" < ":").
    Conflict between rule 119 and token "(" resolved as shift ("<=" < "(").
    Conflict between rule 119 and token "." resolved as shift ("<=" < ".").
    Conflict between rule 119 and token ".'" resolved as shift ("<=" < ".'").
    Conflict between rule 119 and token "+" resolved as shift ("<=" < "+").
    Conflict between rule 119 and token "-" resolved as shift ("<=" < "-").
    Conflict between rule 119 and token "*" resolved as shift ("<=" < "*").
    Conflict between rule 119 and token ".*" resolved as shift ("<=" < ".*").
    Conflict between rule 119 and token ".*." resolved as shift ("<=" < ".*.").
    Conflict between rule 119 and token "*." resolved as shift ("<=" < "*.").
    Conflict between rule 119 and token "/" resolved as shift ("<=" < "/").
    Conflict between rule 119 and token "./" resolved as shift ("<=" < "./").
    Conflict between rule 119 and token "/." resolved as shift ("<=" < "/.").
    Conflict between rule 119 and token "./." resolved as shift ("<=" < "./.").
    Conflict between rule 119 and token "\\" resolved as shift ("<=" < "\\").
    Conflict between rule 119 and token ".\\" resolved as shift ("<=" < ".\\").
    Conflict between rule 119 and token "\\." resolved as shift ("<=" < "\\.").
    Conflict between rule 119 and token ".\\." resolved as shift ("<=" < ".\\.").
    Conflict between rule 119 and token "** or ^" resolved as shift ("<=" < "** or ^").
    Conflict between rule 119 and token ".^" resolved as shift ("<=" < ".^").
    Conflict between rule 119 and token "==" resolved as reduce (%left "==").
    Conflict between rule 119 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 119 and token "<" resolved as reduce (%left "<").
    Conflict between rule 119 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 119 and token ">" resolved as reduce (%left ">").
    Conflict between rule 119 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 119 and token "&" resolved as reduce ("&" < "<=").
    Conflict between rule 119 and token "&&" resolved as reduce ("&&" < "<=").
    Conflict between rule 119 and token "|" resolved as reduce ("|" < "<=").
    Conflict between rule 119 and token "||" resolved as reduce ("||" < "<=").


State 313

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  118                | "<=" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    ":"        shift, and go to state 118
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 118 (rightComparable)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 118 and token "'" resolved as shift ("<=" < "'").
    Conflict between rule 118 and token ":" resolved as shift ("<=" < ":").
    Conflict between rule 118 and token "(" resolved as shift ("<=" < "(").
    Conflict between rule 118 and token "." resolved as shift ("<=" < ".").
    Conflict between rule 118 and token ".'" resolved as shift ("<=" < ".'").
    Conflict between rule 118 and token "+" resolved as shift ("<=" < "+").
    Conflict between rule 118 and token "-" resolved as shift ("<=" < "-").
    Conflict between rule 118 and token "*" resolved as shift ("<=" < "*").
    Conflict between rule 118 and token ".*" resolved as shift ("<=" < ".*").
    Conflict between rule 118 and token ".*." resolved as shift ("<=" < ".*.").
    Conflict between rule 118 and token "*." resolved as shift ("<=" < "*.").
    Conflict between rule 118 and token "/" resolved as shift ("<=" < "/").
    Conflict between rule 118 and token "./" resolved as shift ("<=" < "./").
    Conflict between rule 118 and token "/." resolved as shift ("<=" < "/.").
    Conflict between rule 118 and token "./." resolved as shift ("<=" < "./.").
    Conflict between rule 118 and token "\\" resolved as shift ("<=" < "\\").
    Conflict between rule 118 and token ".\\" resolved as shift ("<=" < ".\\").
    Conflict between rule 118 and token "\\." resolved as shift ("<=" < "\\.").
    Conflict between rule 118 and token ".\\." resolved as shift ("<=" < ".\\.").
    Conflict between rule 118 and token "** or ^" resolved as shift ("<=" < "** or ^").
    Conflict between rule 118 and token ".^" resolved as shift ("<=" < ".^").
    Conflict between rule 118 and token "==" resolved as reduce (%left "==").
    Conflict between rule 118 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 118 and token "<" resolved as reduce (%left "<").
    Conflict between rule 118 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 118 and token ">" resolved as reduce (%left ">").
    Conflict between rule 118 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 118 and token "&" resolved as reduce ("&" < "<=").
    Conflict between rule 118 and token "&&" resolved as reduce ("&&" < "<=").
    Conflict between rule 118 and token "|" resolved as reduce ("|" < "<=").
    Conflict between rule 118 and token "||" resolved as reduce ("||" < "<=").


State 314

  111 rightComparable: ">" ":" •

    $default  reduce using rule 111 (rightComparable)


State 315

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  110                | ">" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    ":"        shift, and go to state 118
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 110 (rightComparable)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 110 and token "'" resolved as shift (">" < "'").
    Conflict between rule 110 and token ":" resolved as shift (">" < ":").
    Conflict between rule 110 and token "(" resolved as shift (">" < "(").
    Conflict between rule 110 and token "." resolved as shift (">" < ".").
    Conflict between rule 110 and token ".'" resolved as shift (">" < ".'").
    Conflict between rule 110 and token "+" resolved as shift (">" < "+").
    Conflict between rule 110 and token "-" resolved as shift (">" < "-").
    Conflict between rule 110 and token "*" resolved as shift (">" < "*").
    Conflict between rule 110 and token ".*" resolved as shift (">" < ".*").
    Conflict between rule 110 and token ".*." resolved as shift (">" < ".*.").
    Conflict between rule 110 and token "*." resolved as shift (">" < "*.").
    Conflict between rule 110 and token "/" resolved as shift (">" < "/").
    Conflict between rule 110 and token "./" resolved as shift (">" < "./").
    Conflict between rule 110 and token "/." resolved as shift (">" < "/.").
    Conflict between rule 110 and token "./." resolved as shift (">" < "./.").
    Conflict between rule 110 and token "\\" resolved as shift (">" < "\\").
    Conflict between rule 110 and token ".\\" resolved as shift (">" < ".\\").
    Conflict between rule 110 and token "\\." resolved as shift (">" < "\\.").
    Conflict between rule 110 and token ".\\." resolved as shift (">" < ".\\.").
    Conflict between rule 110 and token "** or ^" resolved as shift (">" < "** or ^").
    Conflict between rule 110 and token ".^" resolved as shift (">" < ".^").
    Conflict between rule 110 and token "==" resolved as reduce (%left "==").
    Conflict between rule 110 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 110 and token "<" resolved as reduce (%left "<").
    Conflict between rule 110 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 110 and token ">" resolved as reduce (%left ">").
    Conflict between rule 110 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 110 and token "&" resolved as reduce ("&" < ">").
    Conflict between rule 110 and token "&&" resolved as reduce ("&&" < ">").
    Conflict between rule 110 and token "|" resolved as reduce ("|" < ">").
    Conflict between rule 110 and token "||" resolved as reduce ("||" < ">").


State 316

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  109                | ">" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    ":"        shift, and go to state 118
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 109 (rightComparable)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 109 and token "'" resolved as shift (">" < "'").
    Conflict between rule 109 and token ":" resolved as shift (">" < ":").
    Conflict between rule 109 and token "(" resolved as shift (">" < "(").
    Conflict between rule 109 and token "." resolved as shift (">" < ".").
    Conflict between rule 109 and token ".'" resolved as shift (">" < ".'").
    Conflict between rule 109 and token "+" resolved as shift (">" < "+").
    Conflict between rule 109 and token "-" resolved as shift (">" < "-").
    Conflict between rule 109 and token "*" resolved as shift (">" < "*").
    Conflict between rule 109 and token ".*" resolved as shift (">" < ".*").
    Conflict between rule 109 and token ".*." resolved as shift (">" < ".*.").
    Conflict between rule 109 and token "*." resolved as shift (">" < "*.").
    Conflict between rule 109 and token "/" resolved as shift (">" < "/").
    Conflict between rule 109 and token "./" resolved as shift (">" < "./").
    Conflict between rule 109 and token "/." resolved as shift (">" < "/.").
    Conflict between rule 109 and token "./." resolved as shift (">" < "./.").
    Conflict between rule 109 and token "\\" resolved as shift (">" < "\\").
    Conflict between rule 109 and token ".\\" resolved as shift (">" < ".\\").
    Conflict between rule 109 and token "\\." resolved as shift (">" < "\\.").
    Conflict between rule 109 and token ".\\." resolved as shift (">" < ".\\.").
    Conflict between rule 109 and token "** or ^" resolved as shift (">" < "** or ^").
    Conflict between rule 109 and token ".^" resolved as shift (">" < ".^").
    Conflict between rule 109 and token "==" resolved as reduce (%left "==").
    Conflict between rule 109 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 109 and token "<" resolved as reduce (%left "<").
    Conflict between rule 109 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 109 and token ">" resolved as reduce (%left ">").
    Conflict between rule 109 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 109 and token "&" resolved as reduce ("&" < ">").
    Conflict between rule 109 and token "&&" resolved as reduce ("&&" < ">").
    Conflict between rule 109 and token "|" resolved as reduce ("|" < ">").
    Conflict between rule 109 and token "||" resolved as reduce ("||" < ">").


State 317

  117 rightComparable: ">=" ":" •

    $default  reduce using rule 117 (rightComparable)


State 318

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  116                | ">=" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    ":"        shift, and go to state 118
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 116 (rightComparable)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 116 and token "'" resolved as shift (">=" < "'").
    Conflict between rule 116 and token ":" resolved as shift (">=" < ":").
    Conflict between rule 116 and token "(" resolved as shift (">=" < "(").
    Conflict between rule 116 and token "." resolved as shift (">=" < ".").
    Conflict between rule 116 and token ".'" resolved as shift (">=" < ".'").
    Conflict between rule 116 and token "+" resolved as shift (">=" < "+").
    Conflict between rule 116 and token "-" resolved as shift (">=" < "-").
    Conflict between rule 116 and token "*" resolved as shift (">=" < "*").
    Conflict between rule 116 and token ".*" resolved as shift (">=" < ".*").
    Conflict between rule 116 and token ".*." resolved as shift (">=" < ".*.").
    Conflict between rule 116 and token "*." resolved as shift (">=" < "*.").
    Conflict between rule 116 and token "/" resolved as shift (">=" < "/").
    Conflict between rule 116 and token "./" resolved as shift (">=" < "./").
    Conflict between rule 116 and token "/." resolved as shift (">=" < "/.").
    Conflict between rule 116 and token "./." resolved as shift (">=" < "./.").
    Conflict between rule 116 and token "\\" resolved as shift (">=" < "\\").
    Conflict between rule 116 and token ".\\" resolved as shift (">=" < ".\\").
    Conflict between rule 116 and token "\\." resolved as shift (">=" < "\\.").
    Conflict between rule 116 and token ".\\." resolved as shift (">=" < ".\\.").
    Conflict between rule 116 and token "** or ^" resolved as shift (">=" < "** or ^").
    Conflict between rule 116 and token ".^" resolved as shift (">=" < ".^").
    Conflict between rule 116 and token "==" resolved as reduce (%left "==").
    Conflict between rule 116 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 116 and token "<" resolved as reduce (%left "<").
    Conflict between rule 116 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 116 and token ">" resolved as reduce (%left ">").
    Conflict between rule 116 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 116 and token "&" resolved as reduce ("&" < ">=").
    Conflict between rule 116 and token "&&" resolved as reduce ("&&" < ">=").
    Conflict between rule 116 and token "|" resolved as reduce ("|" < ">=").
    Conflict between rule 116 and token "||" resolved as reduce ("||" < ">=").


State 319

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  115                | ">=" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    ":"        shift, and go to state 118
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 115 (rightComparable)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 115 and token "'" resolved as shift (">=" < "'").
    Conflict between rule 115 and token ":" resolved as shift (">=" < ":").
    Conflict between rule 115 and token "(" resolved as shift (">=" < "(").
    Conflict between rule 115 and token "." resolved as shift (">=" < ".").
    Conflict between rule 115 and token ".'" resolved as shift (">=" < ".'").
    Conflict between rule 115 and token "+" resolved as shift (">=" < "+").
    Conflict between rule 115 and token "-" resolved as shift (">=" < "-").
    Conflict between rule 115 and token "*" resolved as shift (">=" < "*").
    Conflict between rule 115 and token ".*" resolved as shift (">=" < ".*").
    Conflict between rule 115 and token ".*." resolved as shift (">=" < ".*.").
    Conflict between rule 115 and token "*." resolved as shift (">=" < "*.").
    Conflict between rule 115 and token "/" resolved as shift (">=" < "/").
    Conflict between rule 115 and token "./" resolved as shift (">=" < "./").
    Conflict between rule 115 and token "/." resolved as shift (">=" < "/.").
    Conflict between rule 115 and token "./." resolved as shift (">=" < "./.").
    Conflict between rule 115 and token "\\" resolved as shift (">=" < "\\").
    Conflict between rule 115 and token ".\\" resolved as shift (">=" < ".\\").
    Conflict between rule 115 and token "\\." resolved as shift (">=" < "\\.").
    Conflict between rule 115 and token ".\\." resolved as shift (">=" < ".\\.").
    Conflict between rule 115 and token "** or ^" resolved as shift (">=" < "** or ^").
    Conflict between rule 115 and token ".^" resolved as shift (">=" < ".^").
    Conflict between rule 115 and token "==" resolved as reduce (%left "==").
    Conflict between rule 115 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 115 and token "<" resolved as reduce (%left "<").
    Conflict between rule 115 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 115 and token ">" resolved as reduce (%left ">").
    Conflict between rule 115 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 115 and token "&" resolved as reduce ("&" < ">=").
    Conflict between rule 115 and token "&&" resolved as reduce ("&&" < ">=").
    Conflict between rule 115 and token "|" resolved as reduce ("|" < ">=").
    Conflict between rule 115 and token "||" resolved as reduce ("||" < ">=").


State 320

   93 rightComparable: "&" ":" •

    $default  reduce using rule 93 (rightComparable)


State 321

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   92                | "&" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143

    $default  reduce using rule 92 (rightComparable)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 92 and token "'" resolved as shift ("&" < "'").
    Conflict between rule 92 and token ":" resolved as shift ("&" < ":").
    Conflict between rule 92 and token "(" resolved as shift ("&" < "(").
    Conflict between rule 92 and token "." resolved as shift ("&" < ".").
    Conflict between rule 92 and token ".'" resolved as shift ("&" < ".'").
    Conflict between rule 92 and token "+" resolved as shift ("&" < "+").
    Conflict between rule 92 and token "-" resolved as shift ("&" < "-").
    Conflict between rule 92 and token "*" resolved as shift ("&" < "*").
    Conflict between rule 92 and token ".*" resolved as shift ("&" < ".*").
    Conflict between rule 92 and token ".*." resolved as shift ("&" < ".*.").
    Conflict between rule 92 and token "*." resolved as shift ("&" < "*.").
    Conflict between rule 92 and token "/" resolved as shift ("&" < "/").
    Conflict between rule 92 and token "./" resolved as shift ("&" < "./").
    Conflict between rule 92 and token "/." resolved as shift ("&" < "/.").
    Conflict between rule 92 and token "./." resolved as shift ("&" < "./.").
    Conflict between rule 92 and token "\\" resolved as shift ("&" < "\\").
    Conflict between rule 92 and token ".\\" resolved as shift ("&" < ".\\").
    Conflict between rule 92 and token "\\." resolved as shift ("&" < "\\.").
    Conflict between rule 92 and token ".\\." resolved as shift ("&" < ".\\.").
    Conflict between rule 92 and token "** or ^" resolved as shift ("&" < "** or ^").
    Conflict between rule 92 and token ".^" resolved as shift ("&" < ".^").
    Conflict between rule 92 and token "==" resolved as shift ("&" < "==").
    Conflict between rule 92 and token "<> or ~=" resolved as shift ("&" < "<> or ~=").
    Conflict between rule 92 and token "<" resolved as shift ("&" < "<").
    Conflict between rule 92 and token "<=" resolved as shift ("&" < "<=").
    Conflict between rule 92 and token ">" resolved as shift ("&" < ">").
    Conflict between rule 92 and token ">=" resolved as shift ("&" < ">=").
    Conflict between rule 92 and token "&" resolved as reduce (%left "&").
    Conflict between rule 92 and token "&&" resolved as reduce (%left "&&").
    Conflict between rule 92 and token "|" resolved as reduce ("|" < "&").
    Conflict between rule 92 and token "||" resolved as reduce ("||" < "&").


State 322

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   91                | "&" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143

    $default  reduce using rule 91 (rightComparable)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 91 and token "'" resolved as shift ("&" < "'").
    Conflict between rule 91 and token ":" resolved as shift ("&" < ":").
    Conflict between rule 91 and token "(" resolved as shift ("&" < "(").
    Conflict between rule 91 and token "." resolved as shift ("&" < ".").
    Conflict between rule 91 and token ".'" resolved as shift ("&" < ".'").
    Conflict between rule 91 and token "+" resolved as shift ("&" < "+").
    Conflict between rule 91 and token "-" resolved as shift ("&" < "-").
    Conflict between rule 91 and token "*" resolved as shift ("&" < "*").
    Conflict between rule 91 and token ".*" resolved as shift ("&" < ".*").
    Conflict between rule 91 and token ".*." resolved as shift ("&" < ".*.").
    Conflict between rule 91 and token "*." resolved as shift ("&" < "*.").
    Conflict between rule 91 and token "/" resolved as shift ("&" < "/").
    Conflict between rule 91 and token "./" resolved as shift ("&" < "./").
    Conflict between rule 91 and token "/." resolved as shift ("&" < "/.").
    Conflict between rule 91 and token "./." resolved as shift ("&" < "./.").
    Conflict between rule 91 and token "\\" resolved as shift ("&" < "\\").
    Conflict between rule 91 and token ".\\" resolved as shift ("&" < ".\\").
    Conflict between rule 91 and token "\\." resolved as shift ("&" < "\\.").
    Conflict between rule 91 and token ".\\." resolved as shift ("&" < ".\\.").
    Conflict between rule 91 and token "** or ^" resolved as shift ("&" < "** or ^").
    Conflict between rule 91 and token ".^" resolved as shift ("&" < ".^").
    Conflict between rule 91 and token "==" resolved as shift ("&" < "==").
    Conflict between rule 91 and token "<> or ~=" resolved as shift ("&" < "<> or ~=").
    Conflict between rule 91 and token "<" resolved as shift ("&" < "<").
    Conflict between rule 91 and token "<=" resolved as shift ("&" < "<=").
    Conflict between rule 91 and token ">" resolved as shift ("&" < ">").
    Conflict between rule 91 and token ">=" resolved as shift ("&" < ">=").
    Conflict between rule 91 and token "&" resolved as reduce (%left "&").
    Conflict between rule 91 and token "&&" resolved as reduce (%left "&&").
    Conflict between rule 91 and token "|" resolved as reduce ("|" < "&").
    Conflict between rule 91 and token "||" resolved as reduce ("||" < "&").


State 323

   96 rightComparable: "&&" ":" •

    $default  reduce using rule 96 (rightComparable)


State 324

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   95                | "&&" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143

    $default  reduce using rule 95 (rightComparable)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 95 and token "'" resolved as shift ("&&" < "'").
    Conflict between rule 95 and token ":" resolved as shift ("&&" < ":").
    Conflict between rule 95 and token "(" resolved as shift ("&&" < "(").
    Conflict between rule 95 and token "." resolved as shift ("&&" < ".").
    Conflict between rule 95 and token ".'" resolved as shift ("&&" < ".'").
    Conflict between rule 95 and token "+" resolved as shift ("&&" < "+").
    Conflict between rule 95 and token "-" resolved as shift ("&&" < "-").
    Conflict between rule 95 and token "*" resolved as shift ("&&" < "*").
    Conflict between rule 95 and token ".*" resolved as shift ("&&" < ".*").
    Conflict between rule 95 and token ".*." resolved as shift ("&&" < ".*.").
    Conflict between rule 95 and token "*." resolved as shift ("&&" < "*.").
    Conflict between rule 95 and token "/" resolved as shift ("&&" < "/").
    Conflict between rule 95 and token "./" resolved as shift ("&&" < "./").
    Conflict between rule 95 and token "/." resolved as shift ("&&" < "/.").
    Conflict between rule 95 and token "./." resolved as shift ("&&" < "./.").
    Conflict between rule 95 and token "\\" resolved as shift ("&&" < "\\").
    Conflict between rule 95 and token ".\\" resolved as shift ("&&" < ".\\").
    Conflict between rule 95 and token "\\." resolved as shift ("&&" < "\\.").
    Conflict between rule 95 and token ".\\." resolved as shift ("&&" < ".\\.").
    Conflict between rule 95 and token "** or ^" resolved as shift ("&&" < "** or ^").
    Conflict between rule 95 and token ".^" resolved as shift ("&&" < ".^").
    Conflict between rule 95 and token "==" resolved as shift ("&&" < "==").
    Conflict between rule 95 and token "<> or ~=" resolved as shift ("&&" < "<> or ~=").
    Conflict between rule 95 and token "<" resolved as shift ("&&" < "<").
    Conflict between rule 95 and token "<=" resolved as shift ("&&" < "<=").
    Conflict between rule 95 and token ">" resolved as shift ("&&" < ">").
    Conflict between rule 95 and token ">=" resolved as shift ("&&" < ">=").
    Conflict between rule 95 and token "&" resolved as reduce (%left "&").
    Conflict between rule 95 and token "&&" resolved as reduce (%left "&&").
    Conflict between rule 95 and token "|" resolved as reduce ("|" < "&&").
    Conflict between rule 95 and token "||" resolved as reduce ("||" < "&&").


State 325

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   94                | "&&" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143

    $default  reduce using rule 94 (rightComparable)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 94 and token "'" resolved as shift ("&&" < "'").
    Conflict between rule 94 and token ":" resolved as shift ("&&" < ":").
    Conflict between rule 94 and token "(" resolved as shift ("&&" < "(").
    Conflict between rule 94 and token "." resolved as shift ("&&" < ".").
    Conflict between rule 94 and token ".'" resolved as shift ("&&" < ".'").
    Conflict between rule 94 and token "+" resolved as shift ("&&" < "+").
    Conflict between rule 94 and token "-" resolved as shift ("&&" < "-").
    Conflict between rule 94 and token "*" resolved as shift ("&&" < "*").
    Conflict between rule 94 and token ".*" resolved as shift ("&&" < ".*").
    Conflict between rule 94 and token ".*." resolved as shift ("&&" < ".*.").
    Conflict between rule 94 and token "*." resolved as shift ("&&" < "*.").
    Conflict between rule 94 and token "/" resolved as shift ("&&" < "/").
    Conflict between rule 94 and token "./" resolved as shift ("&&" < "./").
    Conflict between rule 94 and token "/." resolved as shift ("&&" < "/.").
    Conflict between rule 94 and token "./." resolved as shift ("&&" < "./.").
    Conflict between rule 94 and token "\\" resolved as shift ("&&" < "\\").
    Conflict between rule 94 and token ".\\" resolved as shift ("&&" < ".\\").
    Conflict between rule 94 and token "\\." resolved as shift ("&&" < "\\.").
    Conflict between rule 94 and token ".\\." resolved as shift ("&&" < ".\\.").
    Conflict between rule 94 and token "** or ^" resolved as shift ("&&" < "** or ^").
    Conflict between rule 94 and token ".^" resolved as shift ("&&" < ".^").
    Conflict between rule 94 and token "==" resolved as shift ("&&" < "==").
    Conflict between rule 94 and token "<> or ~=" resolved as shift ("&&" < "<> or ~=").
    Conflict between rule 94 and token "<" resolved as shift ("&&" < "<").
    Conflict between rule 94 and token "<=" resolved as shift ("&&" < "<=").
    Conflict between rule 94 and token ">" resolved as shift ("&&" < ">").
    Conflict between rule 94 and token ">=" resolved as shift ("&&" < ">=").
    Conflict between rule 94 and token "&" resolved as reduce (%left "&").
    Conflict between rule 94 and token "&&" resolved as reduce (%left "&&").
    Conflict between rule 94 and token "|" resolved as reduce ("|" < "&&").
    Conflict between rule 94 and token "||" resolved as reduce ("||" < "&&").


State 326

   99 rightComparable: "|" ":" •

    $default  reduce using rule 99 (rightComparable)


State 327

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   98                | "|" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145

    $default  reduce using rule 98 (rightComparable)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 98 and token "'" resolved as shift ("|" < "'").
    Conflict between rule 98 and token ":" resolved as shift ("|" < ":").
    Conflict between rule 98 and token "(" resolved as shift ("|" < "(").
    Conflict between rule 98 and token "." resolved as shift ("|" < ".").
    Conflict between rule 98 and token ".'" resolved as shift ("|" < ".'").
    Conflict between rule 98 and token "+" resolved as shift ("|" < "+").
    Conflict between rule 98 and token "-" resolved as shift ("|" < "-").
    Conflict between rule 98 and token "*" resolved as shift ("|" < "*").
    Conflict between rule 98 and token ".*" resolved as shift ("|" < ".*").
    Conflict between rule 98 and token ".*." resolved as shift ("|" < ".*.").
    Conflict between rule 98 and token "*." resolved as shift ("|" < "*.").
    Conflict between rule 98 and token "/" resolved as shift ("|" < "/").
    Conflict between rule 98 and token "./" resolved as shift ("|" < "./").
    Conflict between rule 98 and token "/." resolved as shift ("|" < "/.").
    Conflict between rule 98 and token "./." resolved as shift ("|" < "./.").
    Conflict between rule 98 and token "\\" resolved as shift ("|" < "\\").
    Conflict between rule 98 and token ".\\" resolved as shift ("|" < ".\\").
    Conflict between rule 98 and token "\\." resolved as shift ("|" < "\\.").
    Conflict between rule 98 and token ".\\." resolved as shift ("|" < ".\\.").
    Conflict between rule 98 and token "** or ^" resolved as shift ("|" < "** or ^").
    Conflict between rule 98 and token ".^" resolved as shift ("|" < ".^").
    Conflict between rule 98 and token "==" resolved as shift ("|" < "==").
    Conflict between rule 98 and token "<> or ~=" resolved as shift ("|" < "<> or ~=").
    Conflict between rule 98 and token "<" resolved as shift ("|" < "<").
    Conflict between rule 98 and token "<=" resolved as shift ("|" < "<=").
    Conflict between rule 98 and token ">" resolved as shift ("|" < ">").
    Conflict between rule 98 and token ">=" resolved as shift ("|" < ">=").
    Conflict between rule 98 and token "&" resolved as shift ("|" < "&").
    Conflict between rule 98 and token "&&" resolved as shift ("|" < "&&").
    Conflict between rule 98 and token "|" resolved as reduce (%left "|").
    Conflict between rule 98 and token "||" resolved as reduce (%left "||").


State 328

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   97                | "|" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145

    $default  reduce using rule 97 (rightComparable)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 97 and token "'" resolved as shift ("|" < "'").
    Conflict between rule 97 and token ":" resolved as shift ("|" < ":").
    Conflict between rule 97 and token "(" resolved as shift ("|" < "(").
    Conflict between rule 97 and token "." resolved as shift ("|" < ".").
    Conflict between rule 97 and token ".'" resolved as shift ("|" < ".'").
    Conflict between rule 97 and token "+" resolved as shift ("|" < "+").
    Conflict between rule 97 and token "-" resolved as shift ("|" < "-").
    Conflict between rule 97 and token "*" resolved as shift ("|" < "*").
    Conflict between rule 97 and token ".*" resolved as shift ("|" < ".*").
    Conflict between rule 97 and token ".*." resolved as shift ("|" < ".*.").
    Conflict between rule 97 and token "*." resolved as shift ("|" < "*.").
    Conflict between rule 97 and token "/" resolved as shift ("|" < "/").
    Conflict between rule 97 and token "./" resolved as shift ("|" < "./").
    Conflict between rule 97 and token "/." resolved as shift ("|" < "/.").
    Conflict between rule 97 and token "./." resolved as shift ("|" < "./.").
    Conflict between rule 97 and token "\\" resolved as shift ("|" < "\\").
    Conflict between rule 97 and token ".\\" resolved as shift ("|" < ".\\").
    Conflict between rule 97 and token "\\." resolved as shift ("|" < "\\.").
    Conflict between rule 97 and token ".\\." resolved as shift ("|" < ".\\.").
    Conflict between rule 97 and token "** or ^" resolved as shift ("|" < "** or ^").
    Conflict between rule 97 and token ".^" resolved as shift ("|" < ".^").
    Conflict between rule 97 and token "==" resolved as shift ("|" < "==").
    Conflict between rule 97 and token "<> or ~=" resolved as shift ("|" < "<> or ~=").
    Conflict between rule 97 and token "<" resolved as shift ("|" < "<").
    Conflict between rule 97 and token "<=" resolved as shift ("|" < "<=").
    Conflict between rule 97 and token ">" resolved as shift ("|" < ">").
    Conflict between rule 97 and token ">=" resolved as shift ("|" < ">=").
    Conflict between rule 97 and token "&" resolved as shift ("|" < "&").
    Conflict between rule 97 and token "&&" resolved as shift ("|" < "&&").
    Conflict between rule 97 and token "|" resolved as reduce (%left "|").
    Conflict between rule 97 and token "||" resolved as reduce (%left "||").


State 329

  102 rightComparable: "||" ":" •

    $default  reduce using rule 102 (rightComparable)


State 330

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  101                | "||" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145

    $default  reduce using rule 101 (rightComparable)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 101 and token "'" resolved as shift ("||" < "'").
    Conflict between rule 101 and token ":" resolved as shift ("||" < ":").
    Conflict between rule 101 and token "(" resolved as shift ("||" < "(").
    Conflict between rule 101 and token "." resolved as shift ("||" < ".").
    Conflict between rule 101 and token ".'" resolved as shift ("||" < ".'").
    Conflict between rule 101 and token "+" resolved as shift ("||" < "+").
    Conflict between rule 101 and token "-" resolved as shift ("||" < "-").
    Conflict between rule 101 and token "*" resolved as shift ("||" < "*").
    Conflict between rule 101 and token ".*" resolved as shift ("||" < ".*").
    Conflict between rule 101 and token ".*." resolved as shift ("||" < ".*.").
    Conflict between rule 101 and token "*." resolved as shift ("||" < "*.").
    Conflict between rule 101 and token "/" resolved as shift ("||" < "/").
    Conflict between rule 101 and token "./" resolved as shift ("||" < "./").
    Conflict between rule 101 and token "/." resolved as shift ("||" < "/.").
    Conflict between rule 101 and token "./." resolved as shift ("||" < "./.").
    Conflict between rule 101 and token "\\" resolved as shift ("||" < "\\").
    Conflict between rule 101 and token ".\\" resolved as shift ("||" < ".\\").
    Conflict between rule 101 and token "\\." resolved as shift ("||" < "\\.").
    Conflict between rule 101 and token ".\\." resolved as shift ("||" < ".\\.").
    Conflict between rule 101 and token "** or ^" resolved as shift ("||" < "** or ^").
    Conflict between rule 101 and token ".^" resolved as shift ("||" < ".^").
    Conflict between rule 101 and token "==" resolved as shift ("||" < "==").
    Conflict between rule 101 and token "<> or ~=" resolved as shift ("||" < "<> or ~=").
    Conflict between rule 101 and token "<" resolved as shift ("||" < "<").
    Conflict between rule 101 and token "<=" resolved as shift ("||" < "<=").
    Conflict between rule 101 and token ">" resolved as shift ("||" < ">").
    Conflict between rule 101 and token ">=" resolved as shift ("||" < ">=").
    Conflict between rule 101 and token "&" resolved as shift ("||" < "&").
    Conflict between rule 101 and token "&&" resolved as shift ("||" < "&&").
    Conflict between rule 101 and token "|" resolved as reduce (%left "|").
    Conflict between rule 101 and token "||" resolved as reduce (%left "||").


State 331

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  100                | "||" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145

    $default  reduce using rule 100 (rightComparable)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 100 and token "'" resolved as shift ("||" < "'").
    Conflict between rule 100 and token ":" resolved as shift ("||" < ":").
    Conflict between rule 100 and token "(" resolved as shift ("||" < "(").
    Conflict between rule 100 and token "." resolved as shift ("||" < ".").
    Conflict between rule 100 and token ".'" resolved as shift ("||" < ".'").
    Conflict between rule 100 and token "+" resolved as shift ("||" < "+").
    Conflict between rule 100 and token "-" resolved as shift ("||" < "-").
    Conflict between rule 100 and token "*" resolved as shift ("||" < "*").
    Conflict between rule 100 and token ".*" resolved as shift ("||" < ".*").
    Conflict between rule 100 and token ".*." resolved as shift ("||" < ".*.").
    Conflict between rule 100 and token "*." resolved as shift ("||" < "*.").
    Conflict between rule 100 and token "/" resolved as shift ("||" < "/").
    Conflict between rule 100 and token "./" resolved as shift ("||" < "./").
    Conflict between rule 100 and token "/." resolved as shift ("||" < "/.").
    Conflict between rule 100 and token "./." resolved as shift ("||" < "./.").
    Conflict between rule 100 and token "\\" resolved as shift ("||" < "\\").
    Conflict between rule 100 and token ".\\" resolved as shift ("||" < ".\\").
    Conflict between rule 100 and token "\\." resolved as shift ("||" < "\\.").
    Conflict between rule 100 and token ".\\." resolved as shift ("||" < ".\\.").
    Conflict between rule 100 and token "** or ^" resolved as shift ("||" < "** or ^").
    Conflict between rule 100 and token ".^" resolved as shift ("||" < ".^").
    Conflict between rule 100 and token "==" resolved as shift ("||" < "==").
    Conflict between rule 100 and token "<> or ~=" resolved as shift ("||" < "<> or ~=").
    Conflict between rule 100 and token "<" resolved as shift ("||" < "<").
    Conflict between rule 100 and token "<=" resolved as shift ("||" < "<=").
    Conflict between rule 100 and token ">" resolved as shift ("||" < ">").
    Conflict between rule 100 and token ">=" resolved as shift ("||" < ">=").
    Conflict between rule 100 and token "&" resolved as shift ("||" < "&").
    Conflict between rule 100 and token "&&" resolved as shift ("||" < "&&").
    Conflict between rule 100 and token "|" resolved as reduce (%left "|").
    Conflict between rule 100 and token "||" resolved as reduce (%left "||").


State 332

  247 variableDeclaration: functionCall "=" ":" •

    $default  reduce using rule 247 (variableDeclaration)


State 333

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  245 variableDeclaration: functionCall "=" functionCall •  ["end of file", "end of line", ",", ";", ")", "}", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 245 (variableDeclaration)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152


State 334

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  244 variableDeclaration: functionCall "=" variable •  ["end of file", "end of line", ",", ";", ")", "}", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 244 (variableDeclaration)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161


State 335

  249 variableDeclaration: functionCall "=" returnControl •

    $default  reduce using rule 249 (variableDeclaration)


State 336

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  169 listableEnd: listableBegin ":" • variable
  170            | listableBegin ":" • functionCall
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 437
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 438
    cell                go to state 44
    matrix              go to state 45


State 337

   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration
  196 variable: variable "(" functionArgs • ")"
  257 assignable: variable "(" functionArgs • ")"

    ","  shift, and go to state 431
    ")"  shift, and go to state 439


State 338

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   49             | "(" • functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"

    "("           shift, and go to state 338
    "identifier"  shift, and go to state 440

    functionCall        go to state 441
    simpleFunctionCall  go to state 39


State 339

   50 simpleFunctionCall: "identifier" • "(" functionArgs ")"
   51                   | "identifier" • "{" functionArgs "}"
   52                   | "identifier" • "(" ")"
   53                   | "identifier" • "{" "}"
  174 variable: variable "." "identifier" •  ["end of file", "end of line", "'", ",", ":", ";", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  250 assignable: variable "." "identifier" •  ["="]

    "("  shift, and go to state 99
    "{"  shift, and go to state 100

    "="       reduce using rule 250 (assignable)
    $default  reduce using rule 174 (variable)

    Conflict between rule 174 and token "(" resolved as shift (UPLEVEL < "(").


State 340

  176 variable: variable "." functionCall •  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  252 assignable: variable "." functionCall •  ["="]

    "="       reduce using rule 252 (assignable)
    $default  reduce using rule 176 (variable)


State 341

  175 variable: variable "." keywords •  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  251 assignable: variable "." keywords •  ["="]

    "="       reduce using rule 251 (assignable)
    $default  reduce using rule 175 (variable)


State 342

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  128          | variable "** or ^" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 128 (operation)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 128 and token "'" resolved as shift ("** or ^" < "'").
    Conflict between rule 128 and token ":" resolved as reduce (":" < "** or ^").
    Conflict between rule 128 and token "(" resolved as shift ("** or ^" < "(").
    Conflict between rule 128 and token "." resolved as shift ("** or ^" < ".").
    Conflict between rule 128 and token ".'" resolved as shift ("** or ^" < ".'").
    Conflict between rule 128 and token "+" resolved as reduce ("+" < "** or ^").
    Conflict between rule 128 and token "-" resolved as reduce ("-" < "** or ^").
    Conflict between rule 128 and token "*" resolved as reduce ("*" < "** or ^").
    Conflict between rule 128 and token ".*" resolved as reduce (".*" < "** or ^").
    Conflict between rule 128 and token ".*." resolved as reduce (".*." < "** or ^").
    Conflict between rule 128 and token "*." resolved as reduce ("*." < "** or ^").
    Conflict between rule 128 and token "/" resolved as reduce ("/" < "** or ^").
    Conflict between rule 128 and token "./" resolved as reduce ("./" < "** or ^").
    Conflict between rule 128 and token "/." resolved as reduce ("/." < "** or ^").
    Conflict between rule 128 and token "./." resolved as reduce ("./." < "** or ^").
    Conflict between rule 128 and token "\\" resolved as reduce ("\\" < "** or ^").
    Conflict between rule 128 and token ".\\" resolved as reduce (".\\" < "** or ^").
    Conflict between rule 128 and token "\\." resolved as reduce ("\\." < "** or ^").
    Conflict between rule 128 and token ".\\." resolved as reduce (".\\." < "** or ^").
    Conflict between rule 128 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 128 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 128 and token "==" resolved as reduce ("==" < "** or ^").
    Conflict between rule 128 and token "<> or ~=" resolved as reduce ("<> or ~=" < "** or ^").
    Conflict between rule 128 and token "<" resolved as reduce ("<" < "** or ^").
    Conflict between rule 128 and token "<=" resolved as reduce ("<=" < "** or ^").
    Conflict between rule 128 and token ">" resolved as reduce (">" < "** or ^").
    Conflict between rule 128 and token ">=" resolved as reduce (">=" < "** or ^").
    Conflict between rule 128 and token "&" resolved as reduce ("&" < "** or ^").
    Conflict between rule 128 and token "&&" resolved as reduce ("&&" < "** or ^").
    Conflict between rule 128 and token "|" resolved as reduce ("|" < "** or ^").
    Conflict between rule 128 and token "||" resolved as reduce ("||" < "** or ^").


State 343

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  127          | variable "** or ^" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 127 (operation)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 127 and token "'" resolved as shift ("** or ^" < "'").
    Conflict between rule 127 and token ":" resolved as reduce (":" < "** or ^").
    Conflict between rule 127 and token "(" resolved as shift ("** or ^" < "(").
    Conflict between rule 127 and token "." resolved as shift ("** or ^" < ".").
    Conflict between rule 127 and token ".'" resolved as shift ("** or ^" < ".'").
    Conflict between rule 127 and token "+" resolved as reduce ("+" < "** or ^").
    Conflict between rule 127 and token "-" resolved as reduce ("-" < "** or ^").
    Conflict between rule 127 and token "*" resolved as reduce ("*" < "** or ^").
    Conflict between rule 127 and token ".*" resolved as reduce (".*" < "** or ^").
    Conflict between rule 127 and token ".*." resolved as reduce (".*." < "** or ^").
    Conflict between rule 127 and token "*." resolved as reduce ("*." < "** or ^").
    Conflict between rule 127 and token "/" resolved as reduce ("/" < "** or ^").
    Conflict between rule 127 and token "./" resolved as reduce ("./" < "** or ^").
    Conflict between rule 127 and token "/." resolved as reduce ("/." < "** or ^").
    Conflict between rule 127 and token "./." resolved as reduce ("./." < "** or ^").
    Conflict between rule 127 and token "\\" resolved as reduce ("\\" < "** or ^").
    Conflict between rule 127 and token ".\\" resolved as reduce (".\\" < "** or ^").
    Conflict between rule 127 and token "\\." resolved as reduce ("\\." < "** or ^").
    Conflict between rule 127 and token ".\\." resolved as reduce (".\\." < "** or ^").
    Conflict between rule 127 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 127 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 127 and token "==" resolved as reduce ("==" < "** or ^").
    Conflict between rule 127 and token "<> or ~=" resolved as reduce ("<> or ~=" < "** or ^").
    Conflict between rule 127 and token "<" resolved as reduce ("<" < "** or ^").
    Conflict between rule 127 and token "<=" resolved as reduce ("<=" < "** or ^").
    Conflict between rule 127 and token ">" resolved as reduce (">" < "** or ^").
    Conflict between rule 127 and token ">=" resolved as reduce (">=" < "** or ^").
    Conflict between rule 127 and token "&" resolved as reduce ("&" < "** or ^").
    Conflict between rule 127 and token "&&" resolved as reduce ("&&" < "** or ^").
    Conflict between rule 127 and token "|" resolved as reduce ("|" < "** or ^").
    Conflict between rule 127 and token "||" resolved as reduce ("||" < "** or ^").


State 344

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  132          | variable ".^" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 132 (operation)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 132 and token "'" resolved as shift (".^" < "'").
    Conflict between rule 132 and token ":" resolved as reduce (":" < ".^").
    Conflict between rule 132 and token "(" resolved as shift (".^" < "(").
    Conflict between rule 132 and token "." resolved as shift (".^" < ".").
    Conflict between rule 132 and token ".'" resolved as shift (".^" < ".'").
    Conflict between rule 132 and token "+" resolved as reduce ("+" < ".^").
    Conflict between rule 132 and token "-" resolved as reduce ("-" < ".^").
    Conflict between rule 132 and token "*" resolved as reduce ("*" < ".^").
    Conflict between rule 132 and token ".*" resolved as reduce (".*" < ".^").
    Conflict between rule 132 and token ".*." resolved as reduce (".*." < ".^").
    Conflict between rule 132 and token "*." resolved as reduce ("*." < ".^").
    Conflict between rule 132 and token "/" resolved as reduce ("/" < ".^").
    Conflict between rule 132 and token "./" resolved as reduce ("./" < ".^").
    Conflict between rule 132 and token "/." resolved as reduce ("/." < ".^").
    Conflict between rule 132 and token "./." resolved as reduce ("./." < ".^").
    Conflict between rule 132 and token "\\" resolved as reduce ("\\" < ".^").
    Conflict between rule 132 and token ".\\" resolved as reduce (".\\" < ".^").
    Conflict between rule 132 and token "\\." resolved as reduce ("\\." < ".^").
    Conflict between rule 132 and token ".\\." resolved as reduce (".\\." < ".^").
    Conflict between rule 132 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 132 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 132 and token "==" resolved as reduce ("==" < ".^").
    Conflict between rule 132 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".^").
    Conflict between rule 132 and token "<" resolved as reduce ("<" < ".^").
    Conflict between rule 132 and token "<=" resolved as reduce ("<=" < ".^").
    Conflict between rule 132 and token ">" resolved as reduce (">" < ".^").
    Conflict between rule 132 and token ">=" resolved as reduce (">=" < ".^").
    Conflict between rule 132 and token "&" resolved as reduce ("&" < ".^").
    Conflict between rule 132 and token "&&" resolved as reduce ("&&" < ".^").
    Conflict between rule 132 and token "|" resolved as reduce ("|" < ".^").
    Conflict between rule 132 and token "||" resolved as reduce ("||" < ".^").


State 345

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  131          | variable ".^" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 131 (operation)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 131 and token "'" resolved as shift (".^" < "'").
    Conflict between rule 131 and token ":" resolved as reduce (":" < ".^").
    Conflict between rule 131 and token "(" resolved as shift (".^" < "(").
    Conflict between rule 131 and token "." resolved as shift (".^" < ".").
    Conflict between rule 131 and token ".'" resolved as shift (".^" < ".'").
    Conflict between rule 131 and token "+" resolved as reduce ("+" < ".^").
    Conflict between rule 131 and token "-" resolved as reduce ("-" < ".^").
    Conflict between rule 131 and token "*" resolved as reduce ("*" < ".^").
    Conflict between rule 131 and token ".*" resolved as reduce (".*" < ".^").
    Conflict between rule 131 and token ".*." resolved as reduce (".*." < ".^").
    Conflict between rule 131 and token "*." resolved as reduce ("*." < ".^").
    Conflict between rule 131 and token "/" resolved as reduce ("/" < ".^").
    Conflict between rule 131 and token "./" resolved as reduce ("./" < ".^").
    Conflict between rule 131 and token "/." resolved as reduce ("/." < ".^").
    Conflict between rule 131 and token "./." resolved as reduce ("./." < ".^").
    Conflict between rule 131 and token "\\" resolved as reduce ("\\" < ".^").
    Conflict between rule 131 and token ".\\" resolved as reduce (".\\" < ".^").
    Conflict between rule 131 and token "\\." resolved as reduce ("\\." < ".^").
    Conflict between rule 131 and token ".\\." resolved as reduce (".\\." < ".^").
    Conflict between rule 131 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 131 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 131 and token "==" resolved as reduce ("==" < ".^").
    Conflict between rule 131 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".^").
    Conflict between rule 131 and token "<" resolved as reduce ("<" < ".^").
    Conflict between rule 131 and token "<=" resolved as reduce ("<=" < ".^").
    Conflict between rule 131 and token ">" resolved as reduce (">" < ".^").
    Conflict between rule 131 and token ">=" resolved as reduce (">=" < ".^").
    Conflict between rule 131 and token "&" resolved as reduce ("&" < ".^").
    Conflict between rule 131 and token "&&" resolved as reduce ("&&" < ".^").
    Conflict between rule 131 and token "|" resolved as reduce ("|" < ".^").
    Conflict between rule 131 and token "||" resolved as reduce ("||" < ".^").


State 346

  246 variableDeclaration: assignable "=" ":" •

    $default  reduce using rule 246 (variableDeclaration)


State 347

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  243 variableDeclaration: assignable "=" functionCall •  ["end of file", "end of line", ",", ";", ")", "}", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 243 (variableDeclaration)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152


State 348

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  242 variableDeclaration: assignable "=" variable •  ["end of file", "end of line", ",", ";", ")", "}", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 242 (variableDeclaration)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161


State 349

  248 variableDeclaration: assignable "=" returnControl •

    $default  reduce using rule 248 (variableDeclaration)


State 350

  319 selectConditionBreak: "end of line" •

    $default  reduce using rule 319 (selectConditionBreak)


State 351

  320 selectConditionBreak: "," • "end of line"
  322                     | "," •  ["case", "line comment"]

    "end of line"  shift, and go to state 442

    $default  reduce using rule 322 (selectConditionBreak)


State 352

  321 selectConditionBreak: ";" • "end of line"
  323                     | ";" •  ["case", "line comment"]

    "end of line"  shift, and go to state 443

    $default  reduce using rule 323 (selectConditionBreak)


State 353

  306 selectControl: select selectable "line comment" • selectConditionBreak casesControl "end"
  307              | select selectable "line comment" • selectConditionBreak casesControl defaultCase elseBody "end"
  319 selectConditionBreak: • "end of line"
  320                     | • "," "end of line"
  321                     | • ";" "end of line"
  322                     | • ","
  323                     | • ";"

    "end of line"  shift, and go to state 350
    ","            shift, and go to state 351
    ";"            shift, and go to state 352

    selectConditionBreak  go to state 444


State 354

  304 selectControl: select selectable selectConditionBreak • casesControl "end"
  305              | select selectable selectConditionBreak • casesControl defaultCase elseBody "end"
  324 casesControl: • "case" variable caseControlBreak caseBody
  325             | • "case" functionCall caseControlBreak caseBody
  326             | • comments "case" variable caseControlBreak caseBody
  327             | • comments "case" functionCall caseControlBreak caseBody
  328             | • casesControl "case" variable caseControlBreak caseBody
  329             | • casesControl "case" functionCall caseControlBreak caseBody
  390 comments: • "line comment" "end of line"
  391         | • comments "line comment" "end of line"

    "case"          shift, and go to state 445
    "line comment"  shift, and go to state 446

    casesControl  go to state 447
    comments      go to state 448


State 355

  217 matrix: "[" matrixOrCellColumns "]" •

    $default  reduce using rule 217 (matrix)


State 356

   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration
  197 variable: functionCall "(" functionArgs • ")"

    ","  shift, and go to state 431
    ")"  shift, and go to state 449


State 357

  177 variable: functionCall "." "identifier" •

    $default  reduce using rule 177 (variable)


State 358

  178 variable: functionCall "." keywords •

    $default  reduce using rule 178 (variable)


State 359

   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration
  196 variable: variable "(" functionArgs • ")"

    ","  shift, and go to state 431
    ")"  shift, and go to state 450


State 360

   50 simpleFunctionCall: "identifier" • "(" functionArgs ")"
   51                   | "identifier" • "{" functionArgs "}"
   52                   | "identifier" • "(" ")"
   53                   | "identifier" • "{" "}"
  174 variable: variable "." "identifier" •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "("  shift, and go to state 99
    "{"  shift, and go to state 100

    $default  reduce using rule 174 (variable)

    Conflict between rule 174 and token "(" resolved as shift (UPLEVEL < "(").
    Conflict between rule 174 and token "{" resolved as shift (UPLEVEL < "{").


State 361

  176 variable: variable "." functionCall •

    $default  reduce using rule 176 (variable)


State 362

  175 variable: variable "." keywords •

    $default  reduce using rule 175 (variable)


State 363

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  202 variableFields: functionCall "," functionCall •  [",", ")"]

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 202 (variableFields)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152


State 364

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  203 variableFields: functionCall "," variable •  [",", ")"]

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 203 (variableFields)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161


State 365

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  204 variableFields: variable "," functionCall •  [",", ")"]

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 204 (variableFields)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152


State 366

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  201 variableFields: variable "," variable •  [",", ")"]

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 201 (variableFields)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161


State 367

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  200 variableFields: variableFields "," functionCall •  [",", ")"]

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 200 (variableFields)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152


State 368

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  199 variableFields: variableFields "," variable •  [",", ")"]

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 199 (variableFields)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161


State 369

  214 matrix: "[" "end of line" matrixOrCellLines "]" •

    $default  reduce using rule 214 (matrix)


State 370

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  216       | "[" "end of line" matrixOrCellLines matrixOrCellColumns • "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  223 matrixOrCellLineBreak: • ";"
  224                      | • "end of line"
  225                      | • matrixOrCellLineBreak "end of line"
  226                      | • matrixOrCellLineBreak ";"
  227 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  228                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  230                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  231                    | matrixOrCellColumns • variable
  232                    | matrixOrCellColumns • functionCall
  233                    | matrixOrCellColumns • "line comment"
  234                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  238 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  239                         | • matrixOrCellColumnsBreak "spaces"
  240                         | • ","
  241                         | • "spaces"

    "end of line"     shift, and go to state 183
    "spaces"          shift, and go to state 184
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 185
    ";"               shift, and go to state 186
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "]"               shift, and go to state 451
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 188

    functionCall              go to state 189
    simpleFunctionCall        go to state 39
    comparison                go to state 41
    operation                 go to state 42
    variable                  go to state 190
    cell                      go to state 44
    matrix                    go to state 45
    matrixOrCellLineBreak     go to state 191
    matrixOrCellColumnsBreak  go to state 192


State 371

  218 matrix: "[" "end of line" matrixOrCellColumns "]" •

    $default  reduce using rule 218 (matrix)


State 372

  215 matrix: "[" matrixOrCellLines matrixOrCellColumns "]" •

    $default  reduce using rule 215 (matrix)


State 373

  225 matrixOrCellLineBreak: matrixOrCellLineBreak "end of line" •

    $default  reduce using rule 225 (matrixOrCellLineBreak)


State 374

  226 matrixOrCellLineBreak: matrixOrCellLineBreak ";" •

    $default  reduce using rule 226 (matrixOrCellLineBreak)


State 375

  239 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak "spaces" •

    $default  reduce using rule 239 (matrixOrCellColumnsBreak)


State 376

  238 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak "," •

    $default  reduce using rule 238 (matrixOrCellColumnsBreak)


State 377

  234 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak "line comment" •

    $default  reduce using rule 234 (matrixOrCellColumns)


State 378

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  230 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak functionCall •  ["end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 230 (matrixOrCellColumns)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 230 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 230 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 230 and token "-" resolved as shift (HIGHLEVEL < "-").


State 379

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  229 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak variable •  ["end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 229 (matrixOrCellColumns)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 229 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 229 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 229 and token "-" resolved as shift (HIGHLEVEL < "-").


State 380

  225 matrixOrCellLineBreak: matrixOrCellLineBreak • "end of line"
  226                      | matrixOrCellLineBreak • ";"
  228 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak •  ["%t or %T", "%f or %F", "~ or @", "$", "(", "[", "]", "{", "}", "+", "-", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 373
    ";"            shift, and go to state 374

    $default  reduce using rule 228 (matrixOrCellLine)


State 381

  206 cell: "{" "end of line" matrixOrCellLines "}" •

    $default  reduce using rule 206 (cell)


State 382

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  208     | "{" "end of line" matrixOrCellLines matrixOrCellColumns • "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  223 matrixOrCellLineBreak: • ";"
  224                      | • "end of line"
  225                      | • matrixOrCellLineBreak "end of line"
  226                      | • matrixOrCellLineBreak ";"
  227 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  228                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  229 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  230                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  231                    | matrixOrCellColumns • variable
  232                    | matrixOrCellColumns • functionCall
  233                    | matrixOrCellColumns • "line comment"
  234                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  238 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  239                         | • matrixOrCellColumnsBreak "spaces"
  240                         | • ","
  241                         | • "spaces"

    "end of line"     shift, and go to state 183
    "spaces"          shift, and go to state 184
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 185
    ";"               shift, and go to state 186
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "}"               shift, and go to state 452
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 188

    functionCall              go to state 189
    simpleFunctionCall        go to state 39
    comparison                go to state 41
    operation                 go to state 42
    variable                  go to state 190
    cell                      go to state 44
    matrix                    go to state 45
    matrixOrCellLineBreak     go to state 191
    matrixOrCellColumnsBreak  go to state 192


State 383

  210 cell: "{" "end of line" matrixOrCellColumns "}" •

    $default  reduce using rule 210 (cell)


State 384

  207 cell: "{" matrixOrCellLines matrixOrCellColumns "}" •

    $default  reduce using rule 207 (cell)


State 385

  269 argumentName: "identifier" "." • "identifier"

    "identifier"  shift, and go to state 453


State 386

  265 argumentsDeclarations: "line comment" "end of line" •

    $default  reduce using rule 265 (argumentsDeclarations)


State 387

  260 argumentsControl: "arguments" "end of line" argumentsDeclarations "end" •

    $default  reduce using rule 260 (argumentsControl)


State 388

  263 argumentsDeclarations: argumentsDeclarations "line comment" • "end of line"

    "end of line"  shift, and go to state 454


State 389

  262 argumentsDeclarations: argumentsDeclarations argumentDeclaration • lineEnd
  392 lineEnd: • "end of line"
  393        | • "line comment" "end of line"

    "end of line"   shift, and go to state 390
    "line comment"  shift, and go to state 391

    lineEnd  go to state 455


State 390

  392 lineEnd: "end of line" •

    $default  reduce using rule 392 (lineEnd)


State 391

  393 lineEnd: "line comment" • "end of line"

    "end of line"  shift, and go to state 456


State 392

  264 argumentsDeclarations: argumentDeclaration lineEnd •

    $default  reduce using rule 264 (argumentsDeclarations)


State 393

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  270 argumentDimension: "(" • functionArgs ")"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 232
    ":"               shift, and go to state 233
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 235
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall         go to state 236
    simpleFunctionCall   go to state 39
    functionArgs         go to state 457
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 238
    cell                 go to state 44
    matrix               go to state 45
    variableDeclaration  go to state 239
    assignable           go to state 47
    multipleResults      go to state 48


State 394

  266 argumentDeclaration: argumentName argumentDimension • argumentValidators argumentDefaultValue
  267                    | argumentName argumentDimension • "identifier" argumentValidators argumentDefaultValue
  272 argumentValidators: • "{" functionArgs "}"
  273                   | ε •  ["end of line", "=", "line comment"]

    "{"           shift, and go to state 458
    "identifier"  shift, and go to state 459

    $default  reduce using rule 273 (argumentValidators)

    argumentValidators  go to state 460


State 395

  287 ifConditionBreak: "," "end of line" •

    $default  reduce using rule 287 (ifConditionBreak)


State 396

  285 ifConditionBreak: ";" "end of line" •

    $default  reduce using rule 285 (ifConditionBreak)


State 397

  292 then: "then" ifConditionBreak •

    $default  reduce using rule 292 (then)


State 398

  290 then: ifConditionBreak "then" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  291     | ifConditionBreak "then" • "end of line"

    "end of line"  shift, and go to state 461

    $default  reduce using rule 290 (then)


State 399

  280 thenBody: expressions •

    $default  reduce using rule 280 (thenBody)


State 400

  277 ifControl: "if" condition then thenBody • "end"
  278          | "if" condition then thenBody • else elseBody "end"
  279          | "if" condition then thenBody • elseIfControl "end"
  295 else: • "else"
  296     | • "else" ","
  297     | • "else" ";"
  298     | • "else" "end of line"
  299     | • "else" "," "end of line"
  300     | • "else" ";" "end of line"
  301 elseIfControl: • "elseif" condition then thenBody
  302              | • "elseif" condition then thenBody else elseBody
  303              | • "elseif" condition then thenBody elseIfControl

    "else"    shift, and go to state 462
    "elseif"  shift, and go to state 463
    "end"     shift, and go to state 464

    else           go to state 465
    elseIfControl  go to state 466


State 401

   70 functionDeclaration: "function" "[" "]" "=" • "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

    "identifier"  shift, and go to state 467


State 402

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" • "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

    "="  shift, and go to state 468


State 403

   78 idList: idList "," • "identifier"

    "identifier"  shift, and go to state 469


State 404

   76 functionDeclarationArguments: "(" ")" •

    $default  reduce using rule 76 (functionDeclarationArguments)


State 405

   75 functionDeclarationArguments: "(" idList • ")"
   78 idList: idList • "," "identifier"

    ","  shift, and go to state 403
    ")"  shift, and go to state 470


State 406

   68 functionDeclaration: "function" "identifier" "=" "identifier" • functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   75 functionDeclarationArguments: • "(" idList ")"
   76                             | • "(" ")"
   77                             | ε •  ["end of line", ",", ";", "line comment"]

    "("  shift, and go to state 215

    $default  reduce using rule 77 (functionDeclarationArguments)

    functionDeclarationArguments  go to state 471


State 407

   83 functionDeclarationBreak: "," •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "endfunction", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   84                         | "," • "end of line"

    "end of line"  shift, and go to state 472

    $default  reduce using rule 83 (functionDeclarationBreak)


State 408

   81 functionDeclarationBreak: ";" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "endfunction", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   82                         | ";" • "end of line"

    "end of line"  shift, and go to state 473

    $default  reduce using rule 81 (functionDeclarationBreak)


State 409

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | "function" "identifier" functionDeclarationArguments functionDeclarationBreak • functionBody endfunction
   85 functionBody: • expressions
   86             | ε •  ["end", "endfunction"]
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end"          reduce using rule 86 (functionBody)
    "endfunction"  reduce using rule 86 (functionBody)

    expressions           go to state 474
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    functionBody          go to state 475
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 410

   80 functionDeclarationBreak: lineEnd •

    $default  reduce using rule 80 (functionDeclarationBreak)


State 411

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  345 forControl: "for" "(" "identifier" "=" • forIterator ")" forConditionBreak forBody "end"
  346 forIterator: • functionCall
  347            | • variable

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 412
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 413
    cell                go to state 44
    matrix              go to state 45
    forIterator         go to state 476


State 412

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  346 forIterator: functionCall •  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "{", "arguments", "if", "end", "select", "switch", "function", "for", "while", "do", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 346 (forIterator)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 346 and token "(" resolved as shift (UPLEVEL < "(").
    Conflict between rule 346 and token "+" resolved as shift (UPLEVEL < "+").
    Conflict between rule 346 and token "-" resolved as shift (UPLEVEL < "-").


State 413

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  347 forIterator: variable •  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "{", "arguments", "if", "end", "select", "switch", "function", "for", "while", "do", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 347 (forIterator)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 347 and token "(" resolved as shift (UPLEVEL < "(").
    Conflict between rule 347 and token "+" resolved as shift (UPLEVEL < "+").
    Conflict between rule 347 and token "-" resolved as shift (UPLEVEL < "-").


State 414

  344 forControl: "for" "identifier" "=" forIterator • forConditionBreak forBody "end"
  348 forConditionBreak: • "end of line"
  349                  | • ";"
  350                  | • ";" "end of line"
  351                  | • ","
  352                  | • "," "end of line"
  353                  | • "do"
  354                  | • "do" "end of line"
  355                  | ε •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 477
    ","            shift, and go to state 478
    ";"            shift, and go to state 479
    "do"           shift, and go to state 480

    $default  reduce using rule 355 (forConditionBreak)

    forConditionBreak  go to state 481


State 415

  371 whileConditionBreak: "," "end of line" •

    $default  reduce using rule 371 (whileConditionBreak)


State 416

  372 whileConditionBreak: ";" "end of line" •

    $default  reduce using rule 372 (whileConditionBreak)


State 417

  376 whileConditionBreak: "then" "end of line" •

    $default  reduce using rule 376 (whileConditionBreak)


State 418

  367 whileConditionBreak: "then" "," •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  377                    | "then" "," • "end of line"

    "end of line"  shift, and go to state 482

    $default  reduce using rule 367 (whileConditionBreak)


State 419

  368 whileConditionBreak: "then" ";" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  378                    | "then" ";" • "end of line"

    "end of line"  shift, and go to state 483

    $default  reduce using rule 368 (whileConditionBreak)


State 420

  373 whileConditionBreak: "do" "end of line" •

    $default  reduce using rule 373 (whileConditionBreak)


State 421

  364 whileConditionBreak: "do" "," •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  374                    | "do" "," • "end of line"

    "end of line"  shift, and go to state 484

    $default  reduce using rule 364 (whileConditionBreak)


State 422

  365 whileConditionBreak: "do" ";" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  375                    | "do" ";" • "end of line"

    "end of line"  shift, and go to state 485

    $default  reduce using rule 365 (whileConditionBreak)


State 423

  369 whileConditionBreak: "line comment" "end of line" •

    $default  reduce using rule 369 (whileConditionBreak)


State 424

  359 whileBody: expressions •

    $default  reduce using rule 359 (whileBody)


State 425

  358 whileControl: "while" condition whileConditionBreak whileBody • "end"

    "end"  shift, and go to state 486


State 426

  379 tryControl: "try" catchBody "catch" catchBody • "end"

    "end"  shift, and go to state 487


State 427

   61 functionArgs: "," ":" •

    $default  reduce using rule 61 (functionArgs)


State 428

   60 functionArgs: "," functionCall •  [",", ")", "}"]
   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  244 variableDeclaration: functionCall • "=" variable
  245                    | functionCall • "=" functionCall
  247                    | functionCall • "=" ":"
  249                    | functionCall • "=" returnControl
  253 assignable: functionCall • "." "identifier"
  254           | functionCall • "." keywords
  258           | functionCall • "(" functionArgs ")"

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 119
    "."         shift, and go to state 120
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147
    "="         shift, and go to state 148

    $default  reduce using rule 60 (functionArgs)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152


State 429

   59 functionArgs: "," variable •  [",", ")", "}"]
   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  250 assignable: variable • "." "identifier"
  251           | variable • "." keywords
  252           | variable • "." functionCall
  257           | variable • "(" functionArgs ")"

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 154
    "."         shift, and go to state 155
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 59 (functionArgs)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161


State 430

   62 functionArgs: "," variableDeclaration •

    $default  reduce using rule 62 (functionArgs)


State 431

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   63 functionArgs: functionArgs "," •  [",", ")", "}"]
   64             | functionArgs "," • variable
   65             | functionArgs "," • functionCall
   66             | functionArgs "," • ":"
   67             | functionArgs "," • variableDeclaration
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ":"               shift, and go to state 488
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 235
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    $default  reduce using rule 63 (functionArgs)

    functionCall         go to state 489
    simpleFunctionCall   go to state 39
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 490
    cell                 go to state 44
    matrix               go to state 45
    variableDeclaration  go to state 491
    assignable           go to state 47
    multipleResults      go to state 48


State 432

   50 simpleFunctionCall: "identifier" "(" functionArgs ")" •

    $default  reduce using rule 50 (simpleFunctionCall)


State 433

   51 simpleFunctionCall: "identifier" "{" functionArgs "}" •

    $default  reduce using rule 51 (simpleFunctionCall)


State 434

   46 implicitCallable: implicitCallable "." "identifier" •

    $default  reduce using rule 46 (implicitCallable)


State 435

   11 recursiveExpression: recursiveExpression expression "line comment" expressionLineBreak •  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   17 expressionLineBreak: expressionLineBreak • ";"
   18                    | expressionLineBreak • ","
   19                    | expressionLineBreak • "end of line"

    "end of line"  shift, and go to state 110
    ","            shift, and go to state 111
    ";"            shift, and go to state 112

    $default  reduce using rule 11 (recursiveExpression)


State 436

  197 variable: functionCall "(" functionArgs ")" •  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  258 assignable: functionCall "(" functionArgs ")" •  ["="]

    "="       reduce using rule 258 (assignable)
    $default  reduce using rule 197 (variable)


State 437

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  170            | listableBegin ":" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"

    "'"        shift, and go to state 117
    "("        shift, and go to state 167
    "."        shift, and go to state 168
    ".'"       shift, and go to state 121
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 136
    ".^"       shift, and go to state 137

    $default  reduce using rule 170 (listableEnd)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152

    Conflict between rule 170 and token "'" resolved as shift (":" < "'").
    Conflict between rule 170 and token ":" resolved as reduce (%left ":").
    Conflict between rule 170 and token "(" resolved as shift (":" < "(").
    Conflict between rule 170 and token "." resolved as shift (":" < ".").
    Conflict between rule 170 and token ".'" resolved as shift (":" < ".'").
    Conflict between rule 170 and token "+" resolved as shift (":" < "+").
    Conflict between rule 170 and token "-" resolved as shift (":" < "-").
    Conflict between rule 170 and token "*" resolved as shift (":" < "*").
    Conflict between rule 170 and token ".*" resolved as shift (":" < ".*").
    Conflict between rule 170 and token ".*." resolved as shift (":" < ".*.").
    Conflict between rule 170 and token "*." resolved as shift (":" < "*.").
    Conflict between rule 170 and token "/" resolved as shift (":" < "/").
    Conflict between rule 170 and token "./" resolved as shift (":" < "./").
    Conflict between rule 170 and token "/." resolved as shift (":" < "/.").
    Conflict between rule 170 and token "./." resolved as shift (":" < "./.").
    Conflict between rule 170 and token "\\" resolved as shift (":" < "\\").
    Conflict between rule 170 and token ".\\" resolved as shift (":" < ".\\").
    Conflict between rule 170 and token "\\." resolved as shift (":" < "\\.").
    Conflict between rule 170 and token ".\\." resolved as shift (":" < ".\\.").
    Conflict between rule 170 and token "** or ^" resolved as shift (":" < "** or ^").
    Conflict between rule 170 and token ".^" resolved as shift (":" < ".^").
    Conflict between rule 170 and token "==" resolved as reduce ("==" < ":").
    Conflict between rule 170 and token "<> or ~=" resolved as reduce ("<> or ~=" < ":").
    Conflict between rule 170 and token "<" resolved as reduce ("<" < ":").
    Conflict between rule 170 and token "<=" resolved as reduce ("<=" < ":").
    Conflict between rule 170 and token ">" resolved as reduce (">" < ":").
    Conflict between rule 170 and token ">=" resolved as reduce (">=" < ":").
    Conflict between rule 170 and token "&" resolved as reduce ("&" < ":").
    Conflict between rule 170 and token "&&" resolved as reduce ("&&" < ":").
    Conflict between rule 170 and token "|" resolved as reduce ("|" < ":").
    Conflict between rule 170 and token "||" resolved as reduce ("||" < ":").


State 438

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  169            | listableBegin ":" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 153
    "("        shift, and go to state 169
    "."        shift, and go to state 170
    ".'"       shift, and go to state 156
    "+"        shift, and go to state 122
    "-"        shift, and go to state 123
    "*"        shift, and go to state 124
    ".*"       shift, and go to state 125
    ".*."      shift, and go to state 126
    "*."       shift, and go to state 127
    "/"        shift, and go to state 128
    "./"       shift, and go to state 129
    "/."       shift, and go to state 130
    "./."      shift, and go to state 131
    "\\"       shift, and go to state 132
    ".\\"      shift, and go to state 133
    "\\."      shift, and go to state 134
    ".\\."     shift, and go to state 135
    "** or ^"  shift, and go to state 157
    ".^"       shift, and go to state 158

    $default  reduce using rule 169 (listableEnd)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161

    Conflict between rule 169 and token "'" resolved as shift (":" < "'").
    Conflict between rule 169 and token ":" resolved as reduce (%left ":").
    Conflict between rule 169 and token "(" resolved as shift (":" < "(").
    Conflict between rule 169 and token "." resolved as shift (":" < ".").
    Conflict between rule 169 and token ".'" resolved as shift (":" < ".'").
    Conflict between rule 169 and token "+" resolved as shift (":" < "+").
    Conflict between rule 169 and token "-" resolved as shift (":" < "-").
    Conflict between rule 169 and token "*" resolved as shift (":" < "*").
    Conflict between rule 169 and token ".*" resolved as shift (":" < ".*").
    Conflict between rule 169 and token ".*." resolved as shift (":" < ".*.").
    Conflict between rule 169 and token "*." resolved as shift (":" < "*.").
    Conflict between rule 169 and token "/" resolved as shift (":" < "/").
    Conflict between rule 169 and token "./" resolved as shift (":" < "./").
    Conflict between rule 169 and token "/." resolved as shift (":" < "/.").
    Conflict between rule 169 and token "./." resolved as shift (":" < "./.").
    Conflict between rule 169 and token "\\" resolved as shift (":" < "\\").
    Conflict between rule 169 and token ".\\" resolved as shift (":" < ".\\").
    Conflict between rule 169 and token "\\." resolved as shift (":" < "\\.").
    Conflict between rule 169 and token ".\\." resolved as shift (":" < ".\\.").
    Conflict between rule 169 and token "** or ^" resolved as shift (":" < "** or ^").
    Conflict between rule 169 and token ".^" resolved as shift (":" < ".^").
    Conflict between rule 169 and token "==" resolved as reduce ("==" < ":").
    Conflict between rule 169 and token "<> or ~=" resolved as reduce ("<> or ~=" < ":").
    Conflict between rule 169 and token "<" resolved as reduce ("<" < ":").
    Conflict between rule 169 and token "<=" resolved as reduce ("<=" < ":").
    Conflict between rule 169 and token ">" resolved as reduce (">" < ":").
    Conflict between rule 169 and token ">=" resolved as reduce (">=" < ":").
    Conflict between rule 169 and token "&" resolved as reduce ("&" < ":").
    Conflict between rule 169 and token "&&" resolved as reduce ("&&" < ":").
    Conflict between rule 169 and token "|" resolved as reduce ("|" < ":").
    Conflict between rule 169 and token "||" resolved as reduce ("||" < ":").


State 439

  196 variable: variable "(" functionArgs ")" •  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  257 assignable: variable "(" functionArgs ")" •  ["="]

    "="       reduce using rule 257 (assignable)
    $default  reduce using rule 196 (variable)


State 440

   50 simpleFunctionCall: "identifier" • "(" functionArgs ")"
   51                   | "identifier" • "{" functionArgs "}"
   52                   | "identifier" • "(" ")"
   53                   | "identifier" • "{" "}"

    "("  shift, and go to state 99
    "{"  shift, and go to state 100


State 441

   49 functionCall: "(" functionCall • ")"

    ")"  shift, and go to state 172


State 442

  320 selectConditionBreak: "," "end of line" •

    $default  reduce using rule 320 (selectConditionBreak)


State 443

  321 selectConditionBreak: ";" "end of line" •

    $default  reduce using rule 321 (selectConditionBreak)


State 444

  306 selectControl: select selectable "line comment" selectConditionBreak • casesControl "end"
  307              | select selectable "line comment" selectConditionBreak • casesControl defaultCase elseBody "end"
  324 casesControl: • "case" variable caseControlBreak caseBody
  325             | • "case" functionCall caseControlBreak caseBody
  326             | • comments "case" variable caseControlBreak caseBody
  327             | • comments "case" functionCall caseControlBreak caseBody
  328             | • casesControl "case" variable caseControlBreak caseBody
  329             | • casesControl "case" functionCall caseControlBreak caseBody
  390 comments: • "line comment" "end of line"
  391         | • comments "line comment" "end of line"

    "case"          shift, and go to state 445
    "line comment"  shift, and go to state 446

    casesControl  go to state 492
    comments      go to state 448


State 445

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  324 casesControl: "case" • variable caseControlBreak caseBody
  325             | "case" • functionCall caseControlBreak caseBody

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 493
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 494
    cell                go to state 44
    matrix              go to state 45


State 446

  390 comments: "line comment" • "end of line"

    "end of line"  shift, and go to state 495


State 447

  295 else: • "else"
  296     | • "else" ","
  297     | • "else" ";"
  298     | • "else" "end of line"
  299     | • "else" "," "end of line"
  300     | • "else" ";" "end of line"
  304 selectControl: select selectable selectConditionBreak casesControl • "end"
  305              | select selectable selectConditionBreak casesControl • defaultCase elseBody "end"
  310 defaultCase: • else
  311            | • "otherwise"
  312            | • "otherwise" ","
  313            | • "otherwise" ";"
  314            | • "otherwise" "end of line"
  315            | • "otherwise" "," "end of line"
  316            | • "otherwise" ";" "end of line"
  328 casesControl: casesControl • "case" variable caseControlBreak caseBody
  329             | casesControl • "case" functionCall caseControlBreak caseBody

    "else"       shift, and go to state 462
    "end"        shift, and go to state 496
    "case"       shift, and go to state 497
    "otherwise"  shift, and go to state 498

    else         go to state 499
    defaultCase  go to state 500


State 448

  326 casesControl: comments • "case" variable caseControlBreak caseBody
  327             | comments • "case" functionCall caseControlBreak caseBody
  391 comments: comments • "line comment" "end of line"

    "case"          shift, and go to state 501
    "line comment"  shift, and go to state 502


State 449

  197 variable: functionCall "(" functionArgs ")" •

    $default  reduce using rule 197 (variable)


State 450

  196 variable: variable "(" functionArgs ")" •

    $default  reduce using rule 196 (variable)


State 451

  216 matrix: "[" "end of line" matrixOrCellLines matrixOrCellColumns "]" •

    $default  reduce using rule 216 (matrix)


State 452

  208 cell: "{" "end of line" matrixOrCellLines matrixOrCellColumns "}" •

    $default  reduce using rule 208 (cell)


State 453

  269 argumentName: "identifier" "." "identifier" •

    $default  reduce using rule 269 (argumentName)


State 454

  263 argumentsDeclarations: argumentsDeclarations "line comment" "end of line" •

    $default  reduce using rule 263 (argumentsDeclarations)


State 455

  262 argumentsDeclarations: argumentsDeclarations argumentDeclaration lineEnd •

    $default  reduce using rule 262 (argumentsDeclarations)


State 456

  393 lineEnd: "line comment" "end of line" •

    $default  reduce using rule 393 (lineEnd)


State 457

   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration
  270 argumentDimension: "(" functionArgs • ")"

    ","  shift, and go to state 431
    ")"  shift, and go to state 503


State 458

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  272 argumentValidators: "{" • functionArgs "}"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    ","               shift, and go to state 232
    ":"               shift, and go to state 233
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 235
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall         go to state 236
    simpleFunctionCall   go to state 39
    functionArgs         go to state 504
    comparison           go to state 41
    operation            go to state 42
    variable             go to state 238
    cell                 go to state 44
    matrix               go to state 45
    variableDeclaration  go to state 239
    assignable           go to state 47
    multipleResults      go to state 48


State 459

  267 argumentDeclaration: argumentName argumentDimension "identifier" • argumentValidators argumentDefaultValue
  272 argumentValidators: • "{" functionArgs "}"
  273                   | ε •  ["end of line", "=", "line comment"]

    "{"  shift, and go to state 458

    $default  reduce using rule 273 (argumentValidators)

    argumentValidators  go to state 505


State 460

  266 argumentDeclaration: argumentName argumentDimension argumentValidators • argumentDefaultValue
  274 argumentDefaultValue: • "=" variable
  275                     | • "=" functionCall
  276                     | ε •  ["end of line", "line comment"]

    "="  shift, and go to state 506

    $default  reduce using rule 276 (argumentDefaultValue)

    argumentDefaultValue  go to state 507


State 461

  291 then: ifConditionBreak "then" "end of line" •

    $default  reduce using rule 291 (then)


State 462

  295 else: "else" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  296     | "else" • ","
  297     | "else" • ";"
  298     | "else" • "end of line"
  299     | "else" • "," "end of line"
  300     | "else" • ";" "end of line"

    "end of line"  shift, and go to state 508
    ","            shift, and go to state 509
    ";"            shift, and go to state 510

    $default  reduce using rule 295 (else)


State 463

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   87 condition: • functionCall
   88          | • variable
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  301 elseIfControl: "elseif" • condition then thenBody
  302              | "elseif" • condition then thenBody else elseBody
  303              | "elseif" • condition then thenBody elseIfControl

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 81
    simpleFunctionCall  go to state 39
    condition           go to state 511
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 83
    cell                go to state 44
    matrix              go to state 45


State 464

  277 ifControl: "if" condition then thenBody "end" •

    $default  reduce using rule 277 (ifControl)


State 465

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  278          | "if" condition then thenBody else • elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  282 elseBody: • expressions
  283         | ε •  ["end"]
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end"  reduce using rule 283 (elseBody)

    expressions           go to state 512
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    elseBody              go to state 513
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 466

  279 ifControl: "if" condition then thenBody elseIfControl • "end"

    "end"  shift, and go to state 514


State 467

   70 functionDeclaration: "function" "[" "]" "=" "identifier" • functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   75 functionDeclarationArguments: • "(" idList ")"
   76                             | • "(" ")"
   77                             | ε •  ["end of line", ",", ";", "line comment"]

    "("  shift, and go to state 215

    $default  reduce using rule 77 (functionDeclarationArguments)

    functionDeclarationArguments  go to state 515


State 468

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" • "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

    "identifier"  shift, and go to state 516


State 469

   78 idList: idList "," "identifier" •

    $default  reduce using rule 78 (idList)


State 470

   75 functionDeclarationArguments: "(" idList ")" •

    $default  reduce using rule 75 (functionDeclarationArguments)


State 471

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments • functionDeclarationBreak functionBody endfunction
   80 functionDeclarationBreak: • lineEnd
   81                         | • ";"
   82                         | • ";" "end of line"
   83                         | • ","
   84                         | • "," "end of line"
  392 lineEnd: • "end of line"
  393        | • "line comment" "end of line"

    "end of line"   shift, and go to state 390
    ","             shift, and go to state 407
    ";"             shift, and go to state 408
    "line comment"  shift, and go to state 391

    functionDeclarationBreak  go to state 517
    lineEnd                   go to state 410


State 472

   84 functionDeclarationBreak: "," "end of line" •

    $default  reduce using rule 84 (functionDeclarationBreak)


State 473

   82 functionDeclarationBreak: ";" "end of line" •

    $default  reduce using rule 82 (functionDeclarationBreak)


State 474

   85 functionBody: expressions •

    $default  reduce using rule 85 (functionBody)


State 475

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody • endfunction
   72 endfunction: • "endfunction"
   73            | • "end"

    "end"          shift, and go to state 518
    "endfunction"  shift, and go to state 519

    endfunction  go to state 520


State 476

  345 forControl: "for" "(" "identifier" "=" forIterator • ")" forConditionBreak forBody "end"

    ")"  shift, and go to state 521


State 477

  348 forConditionBreak: "end of line" •

    $default  reduce using rule 348 (forConditionBreak)


State 478

  351 forConditionBreak: "," •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  352                  | "," • "end of line"

    "end of line"  shift, and go to state 522

    $default  reduce using rule 351 (forConditionBreak)


State 479

  349 forConditionBreak: ";" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  350                  | ";" • "end of line"

    "end of line"  shift, and go to state 523

    $default  reduce using rule 349 (forConditionBreak)


State 480

  353 forConditionBreak: "do" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  354                  | "do" • "end of line"

    "end of line"  shift, and go to state 524

    $default  reduce using rule 353 (forConditionBreak)


State 481

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  344           | "for" "identifier" "=" forIterator forConditionBreak • forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  356 forBody: • expressions
  357        | ε •  ["end"]
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end"  reduce using rule 357 (forBody)

    expressions           go to state 525
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    forBody               go to state 526
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 482

  377 whileConditionBreak: "then" "," "end of line" •

    $default  reduce using rule 377 (whileConditionBreak)


State 483

  378 whileConditionBreak: "then" ";" "end of line" •

    $default  reduce using rule 378 (whileConditionBreak)


State 484

  374 whileConditionBreak: "do" "," "end of line" •

    $default  reduce using rule 374 (whileConditionBreak)


State 485

  375 whileConditionBreak: "do" ";" "end of line" •

    $default  reduce using rule 375 (whileConditionBreak)


State 486

  358 whileControl: "while" condition whileConditionBreak whileBody "end" •

    $default  reduce using rule 358 (whileControl)


State 487

  379 tryControl: "try" catchBody "catch" catchBody "end" •

    $default  reduce using rule 379 (tryControl)


State 488

   66 functionArgs: functionArgs "," ":" •

    $default  reduce using rule 66 (functionArgs)


State 489

   65 functionArgs: functionArgs "," functionCall •  [",", ")", "}"]
   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  244 variableDeclaration: functionCall • "=" variable
  245                    | functionCall • "=" functionCall
  247                    | functionCall • "=" ":"
  249                    | functionCall • "=" returnControl
  253 assignable: functionCall • "." "identifier"
  254           | functionCall • "." keywords
  258           | functionCall • "(" functionArgs ")"

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 119
    "."         shift, and go to state 120
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147
    "="         shift, and go to state 148

    $default  reduce using rule 65 (functionArgs)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152


State 490

   64 functionArgs: functionArgs "," variable •  [",", ")", "}"]
   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  250 assignable: variable • "." "identifier"
  251           | variable • "." keywords
  252           | variable • "." functionCall
  257           | variable • "(" functionArgs ")"

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 154
    "."         shift, and go to state 155
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 64 (functionArgs)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161


State 491

   67 functionArgs: functionArgs "," variableDeclaration •

    $default  reduce using rule 67 (functionArgs)


State 492

  295 else: • "else"
  296     | • "else" ","
  297     | • "else" ";"
  298     | • "else" "end of line"
  299     | • "else" "," "end of line"
  300     | • "else" ";" "end of line"
  306 selectControl: select selectable "line comment" selectConditionBreak casesControl • "end"
  307              | select selectable "line comment" selectConditionBreak casesControl • defaultCase elseBody "end"
  310 defaultCase: • else
  311            | • "otherwise"
  312            | • "otherwise" ","
  313            | • "otherwise" ";"
  314            | • "otherwise" "end of line"
  315            | • "otherwise" "," "end of line"
  316            | • "otherwise" ";" "end of line"
  328 casesControl: casesControl • "case" variable caseControlBreak caseBody
  329             | casesControl • "case" functionCall caseControlBreak caseBody

    "else"       shift, and go to state 462
    "end"        shift, and go to state 527
    "case"       shift, and go to state 497
    "otherwise"  shift, and go to state 498

    else         go to state 499
    defaultCase  go to state 528


State 493

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  325 casesControl: "case" functionCall • caseControlBreak caseBody
  332 caseControlBreak: • "then"
  333                 | • ","
  334                 | • ";"
  335                 | • "end of line"
  336                 | • "then" "end of line"
  337                 | • "," "end of line"
  338                 | • ";" "end of line"
  339                 | • "then" ","
  340                 | • "then" "," "end of line"
  341                 | • "then" ";"
  342                 | • "then" ";" "end of line"
  343                 | ε •  [error, "%t or %T", "%f or %F", "~ or @", "$", "[", "{", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 529
    "'"            shift, and go to state 117
    ","            shift, and go to state 530
    ":"            shift, and go to state 118
    ";"            shift, and go to state 531
    "("            shift, and go to state 167
    "."            shift, and go to state 168
    ".'"           shift, and go to state 121
    "+"            shift, and go to state 122
    "-"            shift, and go to state 123
    "*"            shift, and go to state 124
    ".*"           shift, and go to state 125
    ".*."          shift, and go to state 126
    "*."           shift, and go to state 127
    "/"            shift, and go to state 128
    "./"           shift, and go to state 129
    "/."           shift, and go to state 130
    "./."          shift, and go to state 131
    "\\"           shift, and go to state 132
    ".\\"          shift, and go to state 133
    "\\."          shift, and go to state 134
    ".\\."         shift, and go to state 135
    "** or ^"      shift, and go to state 136
    ".^"           shift, and go to state 137
    "=="           shift, and go to state 138
    "<> or ~="     shift, and go to state 139
    "<"            shift, and go to state 140
    "<="           shift, and go to state 141
    ">"            shift, and go to state 142
    ">="           shift, and go to state 143
    "&"            shift, and go to state 144
    "&&"           shift, and go to state 145
    "|"            shift, and go to state 146
    "||"           shift, and go to state 147
    "then"         shift, and go to state 532

    $default  reduce using rule 343 (caseControlBreak)

    rightComparable   go to state 149
    rightOperand      go to state 150
    listableBegin     go to state 151
    listableEnd       go to state 152
    caseControlBreak  go to state 533

    Conflict between rule 343 and token "(" resolved as shift (CONTROLBREAK < "(").
    Conflict between rule 343 and token "+" resolved as shift (CONTROLBREAK < "+").
    Conflict between rule 343 and token "-" resolved as shift (CONTROLBREAK < "-").


State 494

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  324 casesControl: "case" variable • caseControlBreak caseBody
  332 caseControlBreak: • "then"
  333                 | • ","
  334                 | • ";"
  335                 | • "end of line"
  336                 | • "then" "end of line"
  337                 | • "," "end of line"
  338                 | • ";" "end of line"
  339                 | • "then" ","
  340                 | • "then" "," "end of line"
  341                 | • "then" ";"
  342                 | • "then" ";" "end of line"
  343                 | ε •  [error, "%t or %T", "%f or %F", "~ or @", "$", "[", "{", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 529
    "'"            shift, and go to state 153
    ","            shift, and go to state 530
    ":"            shift, and go to state 118
    ";"            shift, and go to state 531
    "("            shift, and go to state 169
    "."            shift, and go to state 170
    ".'"           shift, and go to state 156
    "+"            shift, and go to state 122
    "-"            shift, and go to state 123
    "*"            shift, and go to state 124
    ".*"           shift, and go to state 125
    ".*."          shift, and go to state 126
    "*."           shift, and go to state 127
    "/"            shift, and go to state 128
    "./"           shift, and go to state 129
    "/."           shift, and go to state 130
    "./."          shift, and go to state 131
    "\\"           shift, and go to state 132
    ".\\"          shift, and go to state 133
    "\\."          shift, and go to state 134
    ".\\."         shift, and go to state 135
    "** or ^"      shift, and go to state 157
    ".^"           shift, and go to state 158
    "=="           shift, and go to state 138
    "<> or ~="     shift, and go to state 139
    "<"            shift, and go to state 140
    "<="           shift, and go to state 141
    ">"            shift, and go to state 142
    ">="           shift, and go to state 143
    "&"            shift, and go to state 144
    "&&"           shift, and go to state 145
    "|"            shift, and go to state 146
    "||"           shift, and go to state 147
    "then"         shift, and go to state 532

    $default  reduce using rule 343 (caseControlBreak)

    rightComparable   go to state 159
    rightOperand      go to state 160
    listableBegin     go to state 151
    listableEnd       go to state 161
    caseControlBreak  go to state 534

    Conflict between rule 343 and token "(" resolved as shift (CONTROLBREAK < "(").
    Conflict between rule 343 and token "+" resolved as shift (CONTROLBREAK < "+").
    Conflict between rule 343 and token "-" resolved as shift (CONTROLBREAK < "-").


State 495

  390 comments: "line comment" "end of line" •

    $default  reduce using rule 390 (comments)


State 496

  304 selectControl: select selectable selectConditionBreak casesControl "end" •

    $default  reduce using rule 304 (selectControl)


State 497

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  328 casesControl: casesControl "case" • variable caseControlBreak caseBody
  329             | casesControl "case" • functionCall caseControlBreak caseBody

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 535
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 536
    cell                go to state 44
    matrix              go to state 45


State 498

  311 defaultCase: "otherwise" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  312            | "otherwise" • ","
  313            | "otherwise" • ";"
  314            | "otherwise" • "end of line"
  315            | "otherwise" • "," "end of line"
  316            | "otherwise" • ";" "end of line"

    "end of line"  shift, and go to state 537
    ","            shift, and go to state 538
    ";"            shift, and go to state 539

    $default  reduce using rule 311 (defaultCase)


State 499

  310 defaultCase: else •

    $default  reduce using rule 310 (defaultCase)


State 500

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  282 elseBody: • expressions
  283         | ε •  ["end"]
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  305              | select selectable selectConditionBreak casesControl defaultCase • elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end"  reduce using rule 283 (elseBody)

    expressions           go to state 512
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    elseBody              go to state 540
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 501

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  326 casesControl: comments "case" • variable caseControlBreak caseBody
  327             | comments "case" • functionCall caseControlBreak caseBody

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 541
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 542
    cell                go to state 44
    matrix              go to state 45


State 502

  391 comments: comments "line comment" • "end of line"

    "end of line"  shift, and go to state 543


State 503

  270 argumentDimension: "(" functionArgs ")" •

    $default  reduce using rule 270 (argumentDimension)


State 504

   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration
  272 argumentValidators: "{" functionArgs • "}"

    ","  shift, and go to state 431
    "}"  shift, and go to state 544


State 505

  267 argumentDeclaration: argumentName argumentDimension "identifier" argumentValidators • argumentDefaultValue
  274 argumentDefaultValue: • "=" variable
  275                     | • "=" functionCall
  276                     | ε •  ["end of line", "line comment"]

    "="  shift, and go to state 506

    $default  reduce using rule 276 (argumentDefaultValue)

    argumentDefaultValue  go to state 545


State 506

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  274 argumentDefaultValue: "=" • variable
  275                     | "=" • functionCall

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 57
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 58
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30

    functionCall        go to state 546
    simpleFunctionCall  go to state 39
    comparison          go to state 41
    operation           go to state 42
    variable            go to state 547
    cell                go to state 44
    matrix              go to state 45


State 507

  266 argumentDeclaration: argumentName argumentDimension argumentValidators argumentDefaultValue •

    $default  reduce using rule 266 (argumentDeclaration)


State 508

  298 else: "else" "end of line" •

    $default  reduce using rule 298 (else)


State 509

  296 else: "else" "," •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  299     | "else" "," • "end of line"

    "end of line"  shift, and go to state 548

    $default  reduce using rule 296 (else)


State 510

  297 else: "else" ";" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  300     | "else" ";" • "end of line"

    "end of line"  shift, and go to state 549

    $default  reduce using rule 297 (else)


State 511

  284 ifConditionBreak: • ";"
  285                 | • ";" "end of line"
  286                 | • ","
  287                 | • "," "end of line"
  288                 | • "end of line"
  289 then: • "then"
  290     | • ifConditionBreak "then"
  291     | • ifConditionBreak "then" "end of line"
  292     | • "then" ifConditionBreak
  293     | • ifConditionBreak
  294     | ε •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  301 elseIfControl: "elseif" condition • then thenBody
  302              | "elseif" condition • then thenBody else elseBody
  303              | "elseif" condition • then thenBody elseIfControl

    "end of line"  shift, and go to state 205
    ","            shift, and go to state 206
    ";"            shift, and go to state 207
    "then"         shift, and go to state 208

    $default  reduce using rule 294 (then)

    ifConditionBreak  go to state 209
    then              go to state 550


State 512

  282 elseBody: expressions •

    $default  reduce using rule 282 (elseBody)


State 513

  278 ifControl: "if" condition then thenBody else elseBody • "end"

    "end"  shift, and go to state 551


State 514

  279 ifControl: "if" condition then thenBody elseIfControl "end" •

    $default  reduce using rule 279 (ifControl)


State 515

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments • functionDeclarationBreak functionBody endfunction
   80 functionDeclarationBreak: • lineEnd
   81                         | • ";"
   82                         | • ";" "end of line"
   83                         | • ","
   84                         | • "," "end of line"
  392 lineEnd: • "end of line"
  393        | • "line comment" "end of line"

    "end of line"   shift, and go to state 390
    ","             shift, and go to state 407
    ";"             shift, and go to state 408
    "line comment"  shift, and go to state 391

    functionDeclarationBreak  go to state 552
    lineEnd                   go to state 410


State 516

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" • functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   75 functionDeclarationArguments: • "(" idList ")"
   76                             | • "(" ")"
   77                             | ε •  ["end of line", ",", ";", "line comment"]

    "("  shift, and go to state 215

    $default  reduce using rule 77 (functionDeclarationArguments)

    functionDeclarationArguments  go to state 553


State 517

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   68                    | "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak • functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   85 functionBody: • expressions
   86             | ε •  ["end", "endfunction"]
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end"          reduce using rule 86 (functionBody)
    "endfunction"  reduce using rule 86 (functionBody)

    expressions           go to state 474
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    functionBody          go to state 554
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 518

   73 endfunction: "end" •

    $default  reduce using rule 73 (endfunction)


State 519

   72 endfunction: "endfunction" •

    $default  reduce using rule 72 (endfunction)


State 520

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction •

    $default  reduce using rule 71 (functionDeclaration)


State 521

  345 forControl: "for" "(" "identifier" "=" forIterator ")" • forConditionBreak forBody "end"
  348 forConditionBreak: • "end of line"
  349                  | • ";"
  350                  | • ";" "end of line"
  351                  | • ","
  352                  | • "," "end of line"
  353                  | • "do"
  354                  | • "do" "end of line"
  355                  | ε •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 477
    ","            shift, and go to state 478
    ";"            shift, and go to state 479
    "do"           shift, and go to state 480

    $default  reduce using rule 355 (forConditionBreak)

    forConditionBreak  go to state 555


State 522

  352 forConditionBreak: "," "end of line" •

    $default  reduce using rule 352 (forConditionBreak)


State 523

  350 forConditionBreak: ";" "end of line" •

    $default  reduce using rule 350 (forConditionBreak)


State 524

  354 forConditionBreak: "do" "end of line" •

    $default  reduce using rule 354 (forConditionBreak)


State 525

  356 forBody: expressions •

    $default  reduce using rule 356 (forBody)


State 526

  344 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody • "end"

    "end"  shift, and go to state 556


State 527

  306 selectControl: select selectable "line comment" selectConditionBreak casesControl "end" •

    $default  reduce using rule 306 (selectControl)


State 528

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  282 elseBody: • expressions
  283         | ε •  ["end"]
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  307              | select selectable "line comment" selectConditionBreak casesControl defaultCase • elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end"  reduce using rule 283 (elseBody)

    expressions           go to state 512
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    elseBody              go to state 557
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 529

  335 caseControlBreak: "end of line" •

    $default  reduce using rule 335 (caseControlBreak)


State 530

  333 caseControlBreak: "," •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  337                 | "," • "end of line"

    "end of line"  shift, and go to state 558

    $default  reduce using rule 333 (caseControlBreak)


State 531

  334 caseControlBreak: ";" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  338                 | ";" • "end of line"

    "end of line"  shift, and go to state 559

    $default  reduce using rule 334 (caseControlBreak)


State 532

  332 caseControlBreak: "then" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  336                 | "then" • "end of line"
  339                 | "then" • ","
  340                 | "then" • "," "end of line"
  341                 | "then" • ";"
  342                 | "then" • ";" "end of line"

    "end of line"  shift, and go to state 560
    ","            shift, and go to state 561
    ";"            shift, and go to state 562

    $default  reduce using rule 332 (caseControlBreak)


State 533

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  325 casesControl: "case" functionCall caseControlBreak • caseBody
  330 caseBody: • expressions
  331         | ε •  ["else", "end", "case", "otherwise"]
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "else"       reduce using rule 331 (caseBody)
    "end"        reduce using rule 331 (caseBody)
    "case"       reduce using rule 331 (caseBody)
    "otherwise"  reduce using rule 331 (caseBody)

    expressions           go to state 563
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    caseBody              go to state 564
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 534

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  324 casesControl: "case" variable caseControlBreak • caseBody
  330 caseBody: • expressions
  331         | ε •  ["else", "end", "case", "otherwise"]
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "else"       reduce using rule 331 (caseBody)
    "end"        reduce using rule 331 (caseBody)
    "case"       reduce using rule 331 (caseBody)
    "otherwise"  reduce using rule 331 (caseBody)

    expressions           go to state 563
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    caseBody              go to state 565
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 535

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  329 casesControl: casesControl "case" functionCall • caseControlBreak caseBody
  332 caseControlBreak: • "then"
  333                 | • ","
  334                 | • ";"
  335                 | • "end of line"
  336                 | • "then" "end of line"
  337                 | • "," "end of line"
  338                 | • ";" "end of line"
  339                 | • "then" ","
  340                 | • "then" "," "end of line"
  341                 | • "then" ";"
  342                 | • "then" ";" "end of line"
  343                 | ε •  [error, "%t or %T", "%f or %F", "~ or @", "$", "[", "{", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 529
    "'"            shift, and go to state 117
    ","            shift, and go to state 530
    ":"            shift, and go to state 118
    ";"            shift, and go to state 531
    "("            shift, and go to state 167
    "."            shift, and go to state 168
    ".'"           shift, and go to state 121
    "+"            shift, and go to state 122
    "-"            shift, and go to state 123
    "*"            shift, and go to state 124
    ".*"           shift, and go to state 125
    ".*."          shift, and go to state 126
    "*."           shift, and go to state 127
    "/"            shift, and go to state 128
    "./"           shift, and go to state 129
    "/."           shift, and go to state 130
    "./."          shift, and go to state 131
    "\\"           shift, and go to state 132
    ".\\"          shift, and go to state 133
    "\\."          shift, and go to state 134
    ".\\."         shift, and go to state 135
    "** or ^"      shift, and go to state 136
    ".^"           shift, and go to state 137
    "=="           shift, and go to state 138
    "<> or ~="     shift, and go to state 139
    "<"            shift, and go to state 140
    "<="           shift, and go to state 141
    ">"            shift, and go to state 142
    ">="           shift, and go to state 143
    "&"            shift, and go to state 144
    "&&"           shift, and go to state 145
    "|"            shift, and go to state 146
    "||"           shift, and go to state 147
    "then"         shift, and go to state 532

    $default  reduce using rule 343 (caseControlBreak)

    rightComparable   go to state 149
    rightOperand      go to state 150
    listableBegin     go to state 151
    listableEnd       go to state 152
    caseControlBreak  go to state 566

    Conflict between rule 343 and token "(" resolved as shift (CONTROLBREAK < "(").
    Conflict between rule 343 and token "+" resolved as shift (CONTROLBREAK < "+").
    Conflict between rule 343 and token "-" resolved as shift (CONTROLBREAK < "-").


State 536

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  328 casesControl: casesControl "case" variable • caseControlBreak caseBody
  332 caseControlBreak: • "then"
  333                 | • ","
  334                 | • ";"
  335                 | • "end of line"
  336                 | • "then" "end of line"
  337                 | • "," "end of line"
  338                 | • ";" "end of line"
  339                 | • "then" ","
  340                 | • "then" "," "end of line"
  341                 | • "then" ";"
  342                 | • "then" ";" "end of line"
  343                 | ε •  [error, "%t or %T", "%f or %F", "~ or @", "$", "[", "{", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 529
    "'"            shift, and go to state 153
    ","            shift, and go to state 530
    ":"            shift, and go to state 118
    ";"            shift, and go to state 531
    "("            shift, and go to state 169
    "."            shift, and go to state 170
    ".'"           shift, and go to state 156
    "+"            shift, and go to state 122
    "-"            shift, and go to state 123
    "*"            shift, and go to state 124
    ".*"           shift, and go to state 125
    ".*."          shift, and go to state 126
    "*."           shift, and go to state 127
    "/"            shift, and go to state 128
    "./"           shift, and go to state 129
    "/."           shift, and go to state 130
    "./."          shift, and go to state 131
    "\\"           shift, and go to state 132
    ".\\"          shift, and go to state 133
    "\\."          shift, and go to state 134
    ".\\."         shift, and go to state 135
    "** or ^"      shift, and go to state 157
    ".^"           shift, and go to state 158
    "=="           shift, and go to state 138
    "<> or ~="     shift, and go to state 139
    "<"            shift, and go to state 140
    "<="           shift, and go to state 141
    ">"            shift, and go to state 142
    ">="           shift, and go to state 143
    "&"            shift, and go to state 144
    "&&"           shift, and go to state 145
    "|"            shift, and go to state 146
    "||"           shift, and go to state 147
    "then"         shift, and go to state 532

    $default  reduce using rule 343 (caseControlBreak)

    rightComparable   go to state 159
    rightOperand      go to state 160
    listableBegin     go to state 151
    listableEnd       go to state 161
    caseControlBreak  go to state 567

    Conflict between rule 343 and token "(" resolved as shift (CONTROLBREAK < "(").
    Conflict between rule 343 and token "+" resolved as shift (CONTROLBREAK < "+").
    Conflict between rule 343 and token "-" resolved as shift (CONTROLBREAK < "-").


State 537

  314 defaultCase: "otherwise" "end of line" •

    $default  reduce using rule 314 (defaultCase)


State 538

  312 defaultCase: "otherwise" "," •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  315            | "otherwise" "," • "end of line"

    "end of line"  shift, and go to state 568

    $default  reduce using rule 312 (defaultCase)


State 539

  313 defaultCase: "otherwise" ";" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  316            | "otherwise" ";" • "end of line"

    "end of line"  shift, and go to state 569

    $default  reduce using rule 313 (defaultCase)


State 540

  305 selectControl: select selectable selectConditionBreak casesControl defaultCase elseBody • "end"

    "end"  shift, and go to state 570


State 541

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  327 casesControl: comments "case" functionCall • caseControlBreak caseBody
  332 caseControlBreak: • "then"
  333                 | • ","
  334                 | • ";"
  335                 | • "end of line"
  336                 | • "then" "end of line"
  337                 | • "," "end of line"
  338                 | • ";" "end of line"
  339                 | • "then" ","
  340                 | • "then" "," "end of line"
  341                 | • "then" ";"
  342                 | • "then" ";" "end of line"
  343                 | ε •  [error, "%t or %T", "%f or %F", "~ or @", "$", "[", "{", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 529
    "'"            shift, and go to state 117
    ","            shift, and go to state 530
    ":"            shift, and go to state 118
    ";"            shift, and go to state 531
    "("            shift, and go to state 167
    "."            shift, and go to state 168
    ".'"           shift, and go to state 121
    "+"            shift, and go to state 122
    "-"            shift, and go to state 123
    "*"            shift, and go to state 124
    ".*"           shift, and go to state 125
    ".*."          shift, and go to state 126
    "*."           shift, and go to state 127
    "/"            shift, and go to state 128
    "./"           shift, and go to state 129
    "/."           shift, and go to state 130
    "./."          shift, and go to state 131
    "\\"           shift, and go to state 132
    ".\\"          shift, and go to state 133
    "\\."          shift, and go to state 134
    ".\\."         shift, and go to state 135
    "** or ^"      shift, and go to state 136
    ".^"           shift, and go to state 137
    "=="           shift, and go to state 138
    "<> or ~="     shift, and go to state 139
    "<"            shift, and go to state 140
    "<="           shift, and go to state 141
    ">"            shift, and go to state 142
    ">="           shift, and go to state 143
    "&"            shift, and go to state 144
    "&&"           shift, and go to state 145
    "|"            shift, and go to state 146
    "||"           shift, and go to state 147
    "then"         shift, and go to state 532

    $default  reduce using rule 343 (caseControlBreak)

    rightComparable   go to state 149
    rightOperand      go to state 150
    listableBegin     go to state 151
    listableEnd       go to state 152
    caseControlBreak  go to state 571

    Conflict between rule 343 and token "(" resolved as shift (CONTROLBREAK < "(").
    Conflict between rule 343 and token "+" resolved as shift (CONTROLBREAK < "+").
    Conflict between rule 343 and token "-" resolved as shift (CONTROLBREAK < "-").


State 542

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  326 casesControl: comments "case" variable • caseControlBreak caseBody
  332 caseControlBreak: • "then"
  333                 | • ","
  334                 | • ";"
  335                 | • "end of line"
  336                 | • "then" "end of line"
  337                 | • "," "end of line"
  338                 | • ";" "end of line"
  339                 | • "then" ","
  340                 | • "then" "," "end of line"
  341                 | • "then" ";"
  342                 | • "then" ";" "end of line"
  343                 | ε •  [error, "%t or %T", "%f or %F", "~ or @", "$", "[", "{", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 529
    "'"            shift, and go to state 153
    ","            shift, and go to state 530
    ":"            shift, and go to state 118
    ";"            shift, and go to state 531
    "("            shift, and go to state 169
    "."            shift, and go to state 170
    ".'"           shift, and go to state 156
    "+"            shift, and go to state 122
    "-"            shift, and go to state 123
    "*"            shift, and go to state 124
    ".*"           shift, and go to state 125
    ".*."          shift, and go to state 126
    "*."           shift, and go to state 127
    "/"            shift, and go to state 128
    "./"           shift, and go to state 129
    "/."           shift, and go to state 130
    "./."          shift, and go to state 131
    "\\"           shift, and go to state 132
    ".\\"          shift, and go to state 133
    "\\."          shift, and go to state 134
    ".\\."         shift, and go to state 135
    "** or ^"      shift, and go to state 157
    ".^"           shift, and go to state 158
    "=="           shift, and go to state 138
    "<> or ~="     shift, and go to state 139
    "<"            shift, and go to state 140
    "<="           shift, and go to state 141
    ">"            shift, and go to state 142
    ">="           shift, and go to state 143
    "&"            shift, and go to state 144
    "&&"           shift, and go to state 145
    "|"            shift, and go to state 146
    "||"           shift, and go to state 147
    "then"         shift, and go to state 532

    $default  reduce using rule 343 (caseControlBreak)

    rightComparable   go to state 159
    rightOperand      go to state 160
    listableBegin     go to state 151
    listableEnd       go to state 161
    caseControlBreak  go to state 572

    Conflict between rule 343 and token "(" resolved as shift (CONTROLBREAK < "(").
    Conflict between rule 343 and token "+" resolved as shift (CONTROLBREAK < "+").
    Conflict between rule 343 and token "-" resolved as shift (CONTROLBREAK < "-").


State 543

  391 comments: comments "line comment" "end of line" •

    $default  reduce using rule 391 (comments)


State 544

  272 argumentValidators: "{" functionArgs "}" •

    $default  reduce using rule 272 (argumentValidators)


State 545

  267 argumentDeclaration: argumentName argumentDimension "identifier" argumentValidators argumentDefaultValue •

    $default  reduce using rule 267 (argumentDeclaration)


State 546

   90 comparison: functionCall • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  122 operation: functionCall • rightOperand
  129          | functionCall • "** or ^" variable
  130          | functionCall • "** or ^" functionCall
  133          | functionCall • ".^" variable
  134          | functionCall • ".^" functionCall
  137          | functionCall • "'"
  138          | functionCall • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  177 variable: functionCall • "." "identifier"
  178         | functionCall • "." keywords
  180         | functionCall • listableEnd
  197         | functionCall • "(" functionArgs ")"
  198         | functionCall • "(" ")"
  275 argumentDefaultValue: "=" functionCall •  ["end of line", "line comment"]

    "'"         shift, and go to state 117
    ":"         shift, and go to state 118
    "("         shift, and go to state 167
    "."         shift, and go to state 168
    ".'"        shift, and go to state 121
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 136
    ".^"        shift, and go to state 137
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 275 (argumentDefaultValue)

    rightComparable  go to state 149
    rightOperand     go to state 150
    listableBegin    go to state 151
    listableEnd      go to state 152


State 547

   89 comparison: variable • rightComparable
   91 rightComparable: • "&" variable
   92                | • "&" functionCall
   93                | • "&" ":"
   94                | • "&&" variable
   95                | • "&&" functionCall
   96                | • "&&" ":"
   97                | • "|" variable
   98                | • "|" functionCall
   99                | • "|" ":"
  100                | • "||" variable
  101                | • "||" functionCall
  102                | • "||" ":"
  103                | • "==" variable
  104                | • "==" functionCall
  105                | • "==" ":"
  106                | • "<> or ~=" variable
  107                | • "<> or ~=" functionCall
  108                | • "<> or ~=" ":"
  109                | • ">" variable
  110                | • ">" functionCall
  111                | • ">" ":"
  112                | • "<" variable
  113                | • "<" functionCall
  114                | • "<" ":"
  115                | • ">=" variable
  116                | • ">=" functionCall
  117                | • ">=" ":"
  118                | • "<=" variable
  119                | • "<=" functionCall
  120                | • "<=" ":"
  121 operation: variable • rightOperand
  127          | variable • "** or ^" variable
  128          | variable • "** or ^" functionCall
  131          | variable • ".^" variable
  132          | variable • ".^" functionCall
  135          | variable • "'"
  136          | variable • ".'"
  139 rightOperand: • "+" variable
  140             | • "+" functionCall
  141             | • "-" variable
  142             | • "-" functionCall
  143             | • "*" variable
  144             | • "*" functionCall
  145             | • ".*" variable
  146             | • ".*" functionCall
  147             | • ".*." variable
  148             | • ".*." functionCall
  149             | • "*." variable
  150             | • "*." functionCall
  151             | • "/" variable
  152             | • "/" functionCall
  153             | • "./" variable
  154             | • "./" functionCall
  155             | • "./." variable
  156             | • "./." functionCall
  157             | • "/." variable
  158             | • "/." functionCall
  159             | • "\\" variable
  160             | • "\\" functionCall
  161             | • ".\\" variable
  162             | • ".\\" functionCall
  163             | • ".\\." variable
  164             | • ".\\." functionCall
  165             | • "\\." variable
  166             | • "\\." functionCall
  167 listableBegin: • ":" variable
  168              | • ":" functionCall
  169 listableEnd: • listableBegin ":" variable
  170            | • listableBegin ":" functionCall
  171            | • listableBegin
  174 variable: variable • "." "identifier"
  175         | variable • "." keywords
  176         | variable • "." functionCall
  179         | variable • listableEnd
  196         | variable • "(" functionArgs ")"
  274 argumentDefaultValue: "=" variable •  ["end of line", "line comment"]

    "'"         shift, and go to state 153
    ":"         shift, and go to state 118
    "("         shift, and go to state 169
    "."         shift, and go to state 170
    ".'"        shift, and go to state 156
    "+"         shift, and go to state 122
    "-"         shift, and go to state 123
    "*"         shift, and go to state 124
    ".*"        shift, and go to state 125
    ".*."       shift, and go to state 126
    "*."        shift, and go to state 127
    "/"         shift, and go to state 128
    "./"        shift, and go to state 129
    "/."        shift, and go to state 130
    "./."       shift, and go to state 131
    "\\"        shift, and go to state 132
    ".\\"       shift, and go to state 133
    "\\."       shift, and go to state 134
    ".\\."      shift, and go to state 135
    "** or ^"   shift, and go to state 157
    ".^"        shift, and go to state 158
    "=="        shift, and go to state 138
    "<> or ~="  shift, and go to state 139
    "<"         shift, and go to state 140
    "<="        shift, and go to state 141
    ">"         shift, and go to state 142
    ">="        shift, and go to state 143
    "&"         shift, and go to state 144
    "&&"        shift, and go to state 145
    "|"         shift, and go to state 146
    "||"        shift, and go to state 147

    $default  reduce using rule 274 (argumentDefaultValue)

    rightComparable  go to state 159
    rightOperand     go to state 160
    listableBegin    go to state 151
    listableEnd      go to state 161


State 548

  299 else: "else" "," "end of line" •

    $default  reduce using rule 299 (else)


State 549

  300 else: "else" ";" "end of line" •

    $default  reduce using rule 300 (else)


State 550

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  280 thenBody: • expressions
  281         | ε •  ["else", "elseif", "end"]
  301 elseIfControl: "elseif" condition then • thenBody
  302              | "elseif" condition then • thenBody else elseBody
  303              | "elseif" condition then • thenBody elseIfControl
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "else"    reduce using rule 281 (thenBody)
    "elseif"  reduce using rule 281 (thenBody)
    "end"     reduce using rule 281 (thenBody)

    expressions           go to state 399
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    thenBody              go to state 573
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 551

  278 ifControl: "if" condition then thenBody else elseBody "end" •

    $default  reduce using rule 278 (ifControl)


State 552

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak • functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   85 functionBody: • expressions
   86             | ε •  ["end", "endfunction"]
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end"          reduce using rule 86 (functionBody)
    "endfunction"  reduce using rule 86 (functionBody)

    expressions           go to state 474
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    functionBody          go to state 574
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 553

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments • functionDeclarationBreak functionBody endfunction
   80 functionDeclarationBreak: • lineEnd
   81                         | • ";"
   82                         | • ";" "end of line"
   83                         | • ","
   84                         | • "," "end of line"
  392 lineEnd: • "end of line"
  393        | • "line comment" "end of line"

    "end of line"   shift, and go to state 390
    ","             shift, and go to state 407
    ";"             shift, and go to state 408
    "line comment"  shift, and go to state 391

    functionDeclarationBreak  go to state 575
    lineEnd                   go to state 410


State 554

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody • endfunction
   72 endfunction: • "endfunction"
   73            | • "end"

    "end"          shift, and go to state 518
    "endfunction"  shift, and go to state 519

    endfunction  go to state 576


State 555

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  345           | "for" "(" "identifier" "=" forIterator ")" forConditionBreak • forBody "end"
  356 forBody: • expressions
  357        | ε •  ["end"]
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end"  reduce using rule 357 (forBody)

    expressions           go to state 525
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    forBody               go to state 577
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 556

  344 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody "end" •

    $default  reduce using rule 344 (forControl)


State 557

  307 selectControl: select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody • "end"

    "end"  shift, and go to state 578


State 558

  337 caseControlBreak: "," "end of line" •

    $default  reduce using rule 337 (caseControlBreak)


State 559

  338 caseControlBreak: ";" "end of line" •

    $default  reduce using rule 338 (caseControlBreak)


State 560

  336 caseControlBreak: "then" "end of line" •

    $default  reduce using rule 336 (caseControlBreak)


State 561

  339 caseControlBreak: "then" "," •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  340                 | "then" "," • "end of line"

    "end of line"  shift, and go to state 579

    $default  reduce using rule 339 (caseControlBreak)


State 562

  341 caseControlBreak: "then" ";" •  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  342                 | "then" ";" • "end of line"

    "end of line"  shift, and go to state 580

    $default  reduce using rule 341 (caseControlBreak)


State 563

  330 caseBody: expressions •

    $default  reduce using rule 330 (caseBody)


State 564

  325 casesControl: "case" functionCall caseControlBreak caseBody •

    $default  reduce using rule 325 (casesControl)


State 565

  324 casesControl: "case" variable caseControlBreak caseBody •

    $default  reduce using rule 324 (casesControl)


State 566

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  329 casesControl: casesControl "case" functionCall caseControlBreak • caseBody
  330 caseBody: • expressions
  331         | ε •  ["else", "end", "case", "otherwise"]
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "else"       reduce using rule 331 (caseBody)
    "end"        reduce using rule 331 (caseBody)
    "case"       reduce using rule 331 (caseBody)
    "otherwise"  reduce using rule 331 (caseBody)

    expressions           go to state 563
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    caseBody              go to state 581
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 567

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  328 casesControl: casesControl "case" variable caseControlBreak • caseBody
  330 caseBody: • expressions
  331         | ε •  ["else", "end", "case", "otherwise"]
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "else"       reduce using rule 331 (caseBody)
    "end"        reduce using rule 331 (caseBody)
    "case"       reduce using rule 331 (caseBody)
    "otherwise"  reduce using rule 331 (caseBody)

    expressions           go to state 563
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    caseBody              go to state 582
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 568

  315 defaultCase: "otherwise" "," "end of line" •

    $default  reduce using rule 315 (defaultCase)


State 569

  316 defaultCase: "otherwise" ";" "end of line" •

    $default  reduce using rule 316 (defaultCase)


State 570

  305 selectControl: select selectable selectConditionBreak casesControl defaultCase elseBody "end" •

    $default  reduce using rule 305 (selectControl)


State 571

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  327 casesControl: comments "case" functionCall caseControlBreak • caseBody
  330 caseBody: • expressions
  331         | ε •  ["else", "end", "case", "otherwise"]
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "else"       reduce using rule 331 (caseBody)
    "end"        reduce using rule 331 (caseBody)
    "case"       reduce using rule 331 (caseBody)
    "otherwise"  reduce using rule 331 (caseBody)

    expressions           go to state 563
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    caseBody              go to state 583
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 572

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  326 casesControl: comments "case" variable caseControlBreak • caseBody
  330 caseBody: • expressions
  331         | ε •  ["else", "end", "case", "otherwise"]
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "else"       reduce using rule 331 (caseBody)
    "end"        reduce using rule 331 (caseBody)
    "case"       reduce using rule 331 (caseBody)
    "otherwise"  reduce using rule 331 (caseBody)

    expressions           go to state 563
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    caseBody              go to state 584
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 573

  295 else: • "else"
  296     | • "else" ","
  297     | • "else" ";"
  298     | • "else" "end of line"
  299     | • "else" "," "end of line"
  300     | • "else" ";" "end of line"
  301 elseIfControl: • "elseif" condition then thenBody
  301              | "elseif" condition then thenBody •  ["end"]
  302              | • "elseif" condition then thenBody else elseBody
  302              | "elseif" condition then thenBody • else elseBody
  303              | • "elseif" condition then thenBody elseIfControl
  303              | "elseif" condition then thenBody • elseIfControl

    "else"    shift, and go to state 462
    "elseif"  shift, and go to state 463

    $default  reduce using rule 301 (elseIfControl)

    else           go to state 585
    elseIfControl  go to state 586


State 574

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody • endfunction
   72 endfunction: • "endfunction"
   73            | • "end"

    "end"          shift, and go to state 518
    "endfunction"  shift, and go to state 519

    endfunction  go to state 587


State 575

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak • functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   85 functionBody: • expressions
   86             | ε •  ["end", "endfunction"]
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end"          reduce using rule 86 (functionBody)
    "endfunction"  reduce using rule 86 (functionBody)

    expressions           go to state 474
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    functionBody          go to state 588
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 576

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction •

    $default  reduce using rule 68 (functionDeclaration)


State 577

  345 forControl: "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody • "end"

    "end"  shift, and go to state 589


State 578

  307 selectControl: select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end" •

    $default  reduce using rule 307 (selectControl)


State 579

  340 caseControlBreak: "then" "," "end of line" •

    $default  reduce using rule 340 (caseControlBreak)


State 580

  342 caseControlBreak: "then" ";" "end of line" •

    $default  reduce using rule 342 (caseControlBreak)


State 581

  329 casesControl: casesControl "case" functionCall caseControlBreak caseBody •

    $default  reduce using rule 329 (casesControl)


State 582

  328 casesControl: casesControl "case" variable caseControlBreak caseBody •

    $default  reduce using rule 328 (casesControl)


State 583

  327 casesControl: comments "case" functionCall caseControlBreak caseBody •

    $default  reduce using rule 327 (casesControl)


State 584

  326 casesControl: comments "case" variable caseControlBreak caseBody •

    $default  reduce using rule 326 (casesControl)


State 585

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   89 comparison: • variable rightComparable
   90           | • functionCall rightComparable
  121 operation: • variable rightOperand
  122          | • functionCall rightOperand
  123          | • "-" variable
  124          | • "-" functionCall
  125          | • "+" variable
  126          | • "+" functionCall
  127          | • variable "** or ^" variable
  128          | • variable "** or ^" functionCall
  129          | • functionCall "** or ^" variable
  130          | • functionCall "** or ^" functionCall
  131          | • variable ".^" variable
  132          | • variable ".^" functionCall
  133          | • functionCall ".^" variable
  134          | • functionCall ".^" functionCall
  135          | • variable "'"
  136          | • variable ".'"
  137          | • functionCall "'"
  138          | • functionCall ".'"
  172 variable: • "~ or @" variable
  173         | • "~ or @" functionCall
  174         | • variable "." "identifier"
  175         | • variable "." keywords
  176         | • variable "." functionCall
  177         | • functionCall "." "identifier"
  178         | • functionCall "." keywords
  179         | • variable listableEnd
  180         | • functionCall listableEnd
  181         | • matrix
  182         | • cell
  183         | • operation
  184         | • "identifier"
  185         | • "integer"
  186         | • "number"
  187         | • "float"
  188         | • "complex number"
  189         | • "string"
  190         | • "$"
  191         | • "%t or %T"
  192         | • "%f or %F"
  193         | • "(" variable ")"
  194         | • "(" variableFields ")"
  195         | • comparison
  196         | • variable "(" functionArgs ")"
  197         | • functionCall "(" functionArgs ")"
  198         | • functionCall "(" ")"
  205 cell: • "{" matrixOrCellLines "}"
  206     | • "{" "end of line" matrixOrCellLines "}"
  207     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  208     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  209     | • "{" matrixOrCellColumns "}"
  210     | • "{" "end of line" matrixOrCellColumns "}"
  211     | • "{" "end of line" "}"
  212     | • "{" "}"
  213 matrix: • "[" matrixOrCellLines "]"
  214       | • "[" "end of line" matrixOrCellLines "]"
  215       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  216       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  217       | • "[" matrixOrCellColumns "]"
  218       | • "[" "end of line" matrixOrCellColumns "]"
  219       | • "[" "end of line" "]"
  220       | • "[" "]"
  242 variableDeclaration: • assignable "=" variable
  243                    | • assignable "=" functionCall
  244                    | • functionCall "=" variable
  245                    | • functionCall "=" functionCall
  246                    | • assignable "=" ":"
  247                    | • functionCall "=" ":"
  248                    | • assignable "=" returnControl
  249                    | • functionCall "=" returnControl
  250 assignable: • variable "." "identifier"
  251           | • variable "." keywords
  252           | • variable "." functionCall
  253           | • functionCall "." "identifier"
  254           | • functionCall "." keywords
  255           | • "identifier"
  256           | • multipleResults
  257           | • variable "(" functionArgs ")"
  258           | • functionCall "(" functionArgs ")"
  259 multipleResults: • "[" matrixOrCellColumns "]"
  260 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  261                 | • "arguments" "end of line" "end"
  277 ifControl: • "if" condition then thenBody "end"
  278          | • "if" condition then thenBody else elseBody "end"
  279          | • "if" condition then thenBody elseIfControl "end"
  282 elseBody: • expressions
  283         | ε •  ["end"]
  302 elseIfControl: "elseif" condition then thenBody else • elseBody
  304 selectControl: • select selectable selectConditionBreak casesControl "end"
  305              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  306              | • select selectable "line comment" selectConditionBreak casesControl "end"
  307              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  308 select: • "select"
  309       | • "switch"
  344 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  345           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  358 whileControl: • "while" condition whileConditionBreak whileBody "end"
  379 tryControl: • "try" catchBody "catch" catchBody "end"
  380           | • "try" catchBody "end"
  387 returnControl: • "return"
  388              | • "return" variable
  389              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "$"               shift, and go to state 6
    "("               shift, and go to state 9
    "["               shift, and go to state 10
    "{"               shift, and go to state 11
    "+"               shift, and go to state 12
    "-"               shift, and go to state 13
    "arguments"       shift, and go to state 14
    "if"              shift, and go to state 15
    "select"          shift, and go to state 16
    "switch"          shift, and go to state 17
    "function"        shift, and go to state 18
    "for"             shift, and go to state 19
    "while"           shift, and go to state 20
    "break"           shift, and go to state 21
    "continue"        shift, and go to state 22
    "try"             shift, and go to state 23
    "return"          shift, and go to state 24
    "string"          shift, and go to state 25
    "identifier"      shift, and go to state 26
    "integer"         shift, and go to state 27
    "float"           shift, and go to state 28
    "complex number"  shift, and go to state 29
    "number"          shift, and go to state 30
    "line comment"    shift, and go to state 31

    "end"  reduce using rule 283 (elseBody)

    expressions           go to state 512
    recursiveExpression   go to state 34
    expression            go to state 36
    implicitFunctionCall  go to state 37
    functionCall          go to state 38
    simpleFunctionCall    go to state 39
    functionDeclaration   go to state 40
    comparison            go to state 41
    operation             go to state 42
    variable              go to state 43
    cell                  go to state 44
    matrix                go to state 45
    variableDeclaration   go to state 46
    assignable            go to state 47
    multipleResults       go to state 48
    argumentsControl      go to state 49
    ifControl             go to state 50
    elseBody              go to state 590
    selectControl         go to state 51
    select                go to state 52
    forControl            go to state 53
    whileControl          go to state 54
    tryControl            go to state 55
    returnControl         go to state 56


State 586

  303 elseIfControl: "elseif" condition then thenBody elseIfControl •

    $default  reduce using rule 303 (elseIfControl)


State 587

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction •

    $default  reduce using rule 70 (functionDeclaration)


State 588

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody • endfunction
   72 endfunction: • "endfunction"
   73            | • "end"

    "end"          shift, and go to state 518
    "endfunction"  shift, and go to state 519

    endfunction  go to state 591


State 589

  345 forControl: "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end" •

    $default  reduce using rule 345 (forControl)


State 590

  302 elseIfControl: "elseif" condition then thenBody else elseBody •

    $default  reduce using rule 302 (elseIfControl)


State 591

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction •

    $default  reduce using rule 69 (functionDeclaration)
